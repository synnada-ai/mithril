name: CI-MacOS
on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]
  workflow_dispatch: 
  
env:
  CI: true
jobs:

  pre_ci_checks:
    runs-on: self-hosted
    outputs:
      cond_output: ${{ steps.contributors.outputs.cond }}
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check contributors
        id: contributors
        run: | 
          EVENT_NAME=${{ github.event_name }}
          if [ "${EVENT_NAME}" == "pull_request" ]; then
            USERNAME=${{ github.actor }}
            TRUSTED=$(yq -r '.trusted_contributors[].username' .github/contributors.yml | grep -Fxq "$USERNAME" && echo "true" || echo "false")
            COND="$TRUSTED"
          else
            COND="true"
          fi
          echo "cond=$COND" >> $GITHUB_OUTPUT

      - name: Clear cache if large
        run: |
          MAX_SIZE_GB=20

          CONDA_PKGS_DIR=$(conda info --base)/pkgs
          CURRENT_SIZE_GB=$(du -s "$CONDA_PKGS_DIR" | awk '{print $1 / 1024 / 1024}')

          if (( $(echo "$CURRENT_SIZE_GB > $MAX_SIZE_GB" | bc -l) )); then
              conda clean --all -y
          fi
  

  build:
    runs-on: self-hosted
    needs: pre_ci_checks
    strategy:
      matrix:
        python-version: [3.12]
    if: needs.pre_ci_checks.outputs.cond_output == 'true'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Create Conda ennvironment with ${{ matrix.python-version }}
        run: |
          
          conda create -n mithril-test-ci python=${{ matrix.python-version }} -y
          source activate base
          source activate mithril-test-ci

      - name: Make compile scripts executable
        run: |
          chmod +x ./mithril/cores/c/raw_c/compile.sh
          chmod +x ./mithril/cores/c/ggml/compile.sh
          chmod +x ./mithril/cores/c/ggml/build_ggml.sh
      - name: Compile C code
        run: |
          pushd ./mithril/cores/c/raw_c
          ./compile.sh
          popd
          pushd ./mithril/cores/c/ggml
          ./build_ggml.sh
          ./compile.sh
          popd
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install torch==2.4.1
          pip install --upgrade "jax[cpu]"
          pip install mlx==0.21.1
          pip install -r requirements/dev.txt
      - name: Run pre-commit
        run: |
          python3 -m pip install mypy
          python3 -m pip install pre-commit
          pre-commit run --all-files
      - name: Execute testcase unit tests
        run: pytest --cov --cov-report=xml -s tests/
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}    
      - name: Deactivate and remove environment
        run: |
          source activate base
          conda remove -n mithril-test-ci --all -y


  on_failure:
    needs: build
    runs-on: macos-15-xlarge
    env:
      GH_TOKEN: ${{ github.token }}
    if: ${{ failure() }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: review_pr
        id: review-pr
        run: |
          gh pr review ${{ github.event.pull_request.number }} -r -b "Tests are failed. Please review the PR."
          exit 1

  deactivate_and_delete_environment:
    needs: build
    runs-on: self-hosted
    env:
      GH_TOKEN: ${{ github.token }}
    if: ${{ failure() }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: remove conda environment
        run: |
          source activate base
          conda remove -n mithril-test-ci --all -y