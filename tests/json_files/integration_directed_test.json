{
    "test_linear_1": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.2]],
            "b": [0.5]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.0, 
                "output": [[0.7], [0.9], [1.1], [1.3]]
            },
            "grad": {
                    "w": [[0.0]],
                    "b": [0.0]
            }
        }
    },
    "test_linear_2": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.435, 
                "output": [[0.2], [0.3], [0.4], [0.5]]
            },
            "grad": {
                    "w": [[-3.5]],
                    "b": [-1.3]
            }
        }
    },
    "test_linear_3": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[10.0]],
            "target": [[0.000007]]
        },
        "inputs": {
            "w": [[1000.0]],
            "b": [100.0]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 102009999.858600000049, 
                "output": [[10100.0]]
            },
            "grad": {
                    "w": [[201999.99986]],
                    "b": [20199.999986]
            }
        }
    },

    "test_linear_4": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[2e-8]],
            "target": [[-2e-8]]
        },
        "inputs": {
            "w": [[5e-8]],
            "b": [-2e-8]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[-1.999999999e-8]],
                "final_cost": 1e-30
            }
                ,
            "grad": {
                    "w": [[4.000000001275085e-23]],
                    "b": [2.0000000006375426e-15]
            }
        }

    },
    "test_linear_5": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[2e40],[3e40]],
            "target": [[2e50],[1e51]]
        },
        "inputs": {
            "w": [[2e10]],
            "b": [2e50]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[6e50],[8e50]],
                "final_cost": 1e+101
            }
                ,
            "grad": {
                "w": [[2e+90]],
                "b": [2e+50]
            }
        }
    },
    "test_linear_6": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[1.0], [2], [3], [4]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Sum"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.2],[0.3],[0.4],[0.5]],
                "final_cost": 1.74
            }
                ,
            "grad": {
                "w": [[-14.0]],
                "b": [-5.2]
            }
        }
    },
    "test_linear_7": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[5.0],[5.0]],
            "b": [0.0]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Sum"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[1.0], [2.0], [3.0]],
                "final_cost": 0.0
            }
                ,
            "grad": {
                "w": [[0.0],[0.0]],
                "b": [0.0]
            }
        }
    },
    "test_linear_8": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0],[1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.5], [0.8], [1.0]],
                "final_cost": 1.896666666666666666666666666666666666666667
            }
                ,
            "grad": {
                "w": [[-0.5933333333333333333], [-0.46]],
                "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_linear_9": {
        "NOTE": "This test case can be used as probable json template/format for integrated tests.",
        "train_context": {
            "model": {
                "name": "Linear"
            },
            "losses": [{
                "model": "SquaredError",
                "target": "target",
                "input": "output",
                "reduces": ["Mean"]
            }],
            "regularizations": [
                {
                    "model": "l1",
                    "coef": 1e-1,
                    "input": "w"
                }
            ],
            "final_loss_combiner": "Mean"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0],[1.0]],
            "b": [0.2]
        },
        "results": {
            "eval": {
                "output": [[0.5], [0.8], [1.0]],
                "final_cost": 1.996666666666666666666666666666666666666667
            },
            "grad": {
                "w":[[-0.5599999999999999999666666666666666666667], [-0.42666666666666666666666667]],
                "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_quantile_1": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[-3.0],[-4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.5
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.2],[0.3],[-0.2],[-0.3]],
                "final_cost": 0.5
            },
            "grad": {
                "w":[[0.5]],
                "b": [-0.5]
            }
        }
    },
    "test_quantile_2": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[-3.0],[-4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.9
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.2],[0.3],[-0.2],[-0.3]],
                "final_cost": 0.9
            },
            "grad": {
                "w":[[0.9]],
                "b": [-0.9]
            }
        }
    },
    "test_quantile_3": {
        "NOTE": "Ideally, for a loss function, gradients should be zero when cost is zero. However, it is not the case when quantile loss is implemented and quantile is not equal to 0.5. It stems from behaviour of gradient of max(a,b) function at zero (max(a,b) function of all three backends). At zero point. Instead of writing zero for gradients of a and b, it gives 0.5 for gradient of a and 0.5 for gradient of b",
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.2]],
            "b": [0.5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.9
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.7],[0.9],[1.1],[1.3]],
                "final_cost": 0.0
            },
            "grad": {
                "w":[[-1.0]],
                "b": [-0.4]
            }
        }
    },
    "test_quantile_4": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[2e-8]],
            "target": [[4e-15]]
        },
        "inputs": {
            "w": [[5e-8]],
            "b": [2e-15]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 1e-15
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[3e-15]],
                "final_cost": 3e-30
            },
            "grad": {
                "w":[[-2e-23]],
                "b": [-1e-15]
            }
        }
    },
    "test_quantile_5": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[2e40],[3e40]],
            "target": [[2e50],[1e51]]
        },
        "inputs": {
            "w": [[2e10]],
            "b": [2e50]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.2
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[6e50],[8e50]],
                "final_cost": 1.8e50
            },
            "grad": {
                "w":[[5e39]],
                "b": [0.3]
            }
        }
    },
    "test_quantile_6": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3]],
            "target":  [[3.0], [-2.0], [3.0]]
        },
        "inputs": {
            "w": [[5.0], [5.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.99999999999
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[2.0],[3.0],[4.0]],
                "final_cost": 0.33333333335
            },
            "grad": {
                "w":[[-0.033333333331333335], [-0.033333333331333335]],
                "b": [-0.3333333333233333]
            }
        }
    },
    "test_quantile_7": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3]],
            "target":  [[3.0], [-2.0], [3.0]]
        },
        "inputs": {
            "w": [[5.0], [5.0]],
            "b": [1.0]
        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.99999999999
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[2.0],[3.0],[4.0]],
                "final_cost": 0.6666666666833333
            },
            "grad": {
                "w":[[1.9999973899231804e-12], [1.9999973899231804e-12]],
                "b": [-0.3333333333233333]
            }
        }
    },
    "test_quantile_8": {
        "model": {
            "name": "Linear",
            "args": {
                "dimension": 1
            }
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3]],
            "target":  [[3.0], [-2.0], [3.0]]
        },
        "inputs": {
            "w": [[5.0], [5.0]],
            "b": [1.0]
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "QuantileLoss",
                    "params": {
                        "quantile": 0.99999999999
                    }
                }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[2.0],[3.0],[4.0]],
                "final_cost": 1.1666666666833334
            },
            "grad": {
                "w":[[0.13333333333533331], [0.13333333333533331]],
                "b": [-0.3333333333233333]
            }
        }
    },
    "test_polynomial_1": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.2]],
            "b": [0.5]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.7],[0.9],[1.1],[1.3]],
                "final_cost": 0.0
            },
            "grad": {
                "w":[[0.0]],
                "b": [0.0]
            }
        }
    },
    "test_polynomial_2": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.2],[0.3],[0.4],[0.5]],
                "final_cost": 0.435
            },
            "grad": {
                "w":[[-3.5]],
                "b": [-1.3]
            }
        }
    },
    "test_polynomial_3": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[10.0]],
            "target": [[0.000007]]
        },
        "inputs": {
            "w": [[1000.0]],
            "b": [100.0]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[10100.0]],
                "final_cost": 102009999.858600000049
            },
            "grad": {
                "w":[[201999.99986]],
                "b": [20199.999986]
            }
        }
    },
    "test_polynomial_4": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[2e-8]],
            "target": [[2e-8]]
        },
        "inputs": {
            "w": [[5e-8]],
            "b": [-2e-8]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[-0.000000019999999999999999]],
                "final_cost": 0.000000000000001599999920000001
            },
            "grad": {
                "w":[[-0.00000000000000159999996]],
                "b": [-0.000000079999998]
            }
        }
    },
    "test_polynomial_5": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[2e+40], [3e+40]],
            "target": [[2e+50], [1e+51]]
        },
        "inputs": {
            "w": [[2e10]],
            "b": [2e50]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[6e50],[8e50]],
                "final_cost": 1e101
            },
            "grad": {
                "w":[[2e+90]],
                "b": [2e+50]
            }
        }
    },
    "test_polynomial_6": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[1.0], [2], [3], [4]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Sum"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.2],[0.3],[0.4],[0.5]],
                "final_cost": 1.74
            },
            "grad": {
                "w":[[-14]],
                "b": [-5.2]
            }
        }
    },
    "test_polynomial_7": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[5.0],[5.0]],
            "b": [0.0]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[1.0],[2.0],[3.0]],
                "final_cost": 0.0
            },
            "grad": {
                "w":[[0.0],[0.0]],
                "b": [0.0]
            }
        }
    },
    "test_polynomial_8": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0],[1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.5],[0.8],[1.0]],
                "final_cost": 1.896666666666666666666666666666666666666667
            },
            "grad": {
                "w":[[-0.5933333333333333333], [-0.46]],
                "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_polynomial_9": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0],[1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.5],[0.8],[1.0]],
                "final_cost": 1.996666666666666666666666666666666666666667
            },
            "grad": {
                "w":[[-0.5599999999999999999666666666666666666667], [-0.42666666666666666666666667]],
                "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_polynomial_10": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0],[1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[0.5],[0.8],[1.0]],
                "final_cost": 1.979999999999999999999966666666666666666667
            },
            "grad": {
                "w":[[-0.5266666666666666666333333333333333333333], [-0.42666666666666666666666666666666666666666667]],
                "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_polynomial_11": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1
            }
        },
        "static_keys": {
            "input": [[0.1], [0.2], [0.3]],
            "target": [[1.0, 1], [2, 2], [3, 3]]
        },
        "inputs": {
            "w": [[-2.0, -1.0]],
            "b": [-0.2, -0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[-0.4,-0.2],[-0.6,-0.3],[-0.8,-0.4]],
                "final_cost": 6.908333333333333333333333333333333333333
            },
            "grad": {
                "w":[[-0.6, -0.533333333333333333]],
                "b": [-2.6, -2.3]
            }
        }
    },
    "test_polynomial_12": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2
            }
        },
        "static_keys": {
            "input": [[2.0]],
            "target": [[0.0]]
        },
        "inputs": {
            "w": [[0.1], [0.2]],
            "b": [0.3]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[1.3]],
                "final_cost": 1.3
            },
            "grad": {
                "w":[[2.0],[4]],
                "b": [1.0]
            }
        }
    },
    "test_polynomial_13": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 3
            }
        },
        "static_keys": {
            "input": [[2.0]],
            "target": [[0.0]]
        },
        "inputs": {
            "w": [[0.1], [0.2], [-0.2]],
            "b": [0.3]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[-0.3]],
                "final_cost": 0.3
            },
            "grad": {
                "w":[[-2.0], [-4], [-8]],
                "b": [-1.0]
            }
        }
    },
    "test_polynomial_14": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2
            }
        },
        "static_keys": {
            "input": [[2.0, 1], [-1, -3]],
            "target": [[0.0], [2.0]]
        },
        "inputs": {
            "w": [[0.1], [0.2], [-0.2], [-0.3], [-0.5]],
            "b": [0.3]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[-1.2],[-6.0]],
                "final_cost": 4.6
            },
            "grad": {
                "w": [[-0.5], [1], [-2.5], [-2.5], [-5]],
                "b": [-1.0]
            }
        }
    },
    "test_polynomial_15": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2
            }
        },
        "static_keys": {
            "input": [[2.0, 1]],
            "target": [[14.0, -2]]
        },
        "inputs": {
            "w": [[1.0, 10], [2, 20], [3, 30], [-2, -20], [-1, -10]],
            "b": [1.0, 10]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "output": [[12.0,120.0]],
                "final_cost": 62.0
            },
            "grad": {
                "w": [[-1, 1], [-0.5, 0.5], [-2, 2], [-1, 1], [-0.5, 0.5]],
                "b": [-0.5, 0.5]
            }
        }
    },
    "test_linearSVM_1": {
        "model": {
            "name": "LinearSVM"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["decision_output"],
        "static_keys": {
            "input": [[1.0], [2.0], [3.0]], 
            "target": [[-1.0], [-1.0], [1.0]]
        }, 
        "inputs": {
            "w": [[1.0]],
            "b": [1.0]

        },
        "output_specs": {
            "output": {
                "loss": "HingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "output": [[2.0],[3.0],[4.0]],
                "final_cost": 2.34999999999999998333
            },
            "grad": {
                "w": [[1.0333333333333333]],
                "b": [0.6666666666666667]
            }
        }
    },
    "test_linearSVM_2": {
        "model": {
            "name": "LinearSVM"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["decision_output"],
        "static_keys": {
            "input": [[1.0], [2.0], [3.0]], 
            "target": [[-1.0], [-1.0], [1.0]]
        }, 
        "inputs": {
            "w": [[1.0]],
            "b": [1.0]

        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "output": [[2.0],[3.0],[4.0]],
                "final_cost": 8.3499999999999999667
            },
            "grad": {
                "w": [[7.3666666666666667]],
                "b": [4.6666666666666667]
            }
        }
    },
    "test_linearSVM_3": {
        "model": {
            "name": "LinearSVM"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["decision_output"],
        "static_keys": {
            "input": [[1.0, 2.0], [2, -1], [0, -1]], 
            "target": [[-1.0], [1], [-1]]
        }, 
        "inputs": {
            "w": [[-1.0], [1.0]],
            "b": [-1.0]

        },
        "output_specs": {
            "output": {
                "loss": "HingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "output": [[0.0],[-4.0],[-2.0]],
                "final_cost": 2.0333333333333333
            },
            "grad": {
                "w": [[-0.3666666666666667], [1.0333333333333333]],
                "b": [0.0]
            }
        }
    },
    "test_linearSVM_4": {
        "model": {
            "name": "LinearSVM"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["decision_output"],
        "static_keys": {
            "input": [[1.0, 2], [2, -1], [0, -1]], 
            "target": [[-1.0], [1], [-1]]
        }, 
        "inputs": {
            "w": [[-1.0], [1.0]],
            "b": [-1.0]

        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "output": [[0.0],[-4.0],[-2.0]],
                "final_cost": 8.6999999999999999667
            },
            "grad": {
                "w": [[-6.0333333333333333], [4.7]],
                "b": [-2.6666666666666667]
            }
        }
    },
    "test_nn_1": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [2, 2, 2], 
                "activations": ["relu", "relu", "buffer"]
            }
        },
        "static_keys": {
            "input": [[1.0,1.0]], 
            "target": [1]
        }, 
        "inputs": {
            "w0": [[0.5, 0.2], [0.1, 0.2]],
            "b0": [0.1, 0.1],
            "w1": [[0.3, -0.1], [0.2, 0.1]],
            "b1": [0.2, -0.1],
            "w2": [[0.1, -0.2], [0.1, 0.2]],
            "b2": [0.1, 0.0]
        },
        "output_specs": {
            "output": {
                "loss": "CrossEntropy", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 0.827627056846743510197,
                "output": [[0.151,-0.102]]
            },
            "grad": {
                "w0": [[0.05066232883850689, 0.03377488589233792], [0.05066232883850689, 0.03377488589233792]],
                "b0": [0.05066232883850689, 0.03377488589233792],
                "w1": [[0.11821210062318273, 0.0], [0.08443721473084481, 0.0]],
                "b1": [0.16887442946168962, 0.0],
                "w2": [[0.28708653008487234, -0.28708653008487234], [0.0, 0.0]],
                "b2": [0.5629147648722987, -0.5629147648722987]
            }
        }
    },
    "test_nn_2": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "softmax"]
            }
        },
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "inputs": {
            "w0": [[1.0, 2.0, 3.0]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "CrossEntropy",
                    "params": {"input_type": "probs"}
                    },
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 10.683655622163707,
                "output": [[0.000022916448682582498287877106161 , 0.9999770835513174175017121228938392776607400542093695578010433420]]


            },
            "grad": {
                "w0": [[-0.19660742759420338, 0, 0.04517562444230763]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230763],
                "w1": [
                    [-0.26893525818771363,  0.2689352581877137], 
                    [-0.26893525818771363,  0.2689352581877137], 
                    [-0.9525522972063396,  0.9525522972063397]
                ], 
                "b1": [-0.9999770835513174, 0.9999770835513175]

            }
        }
    },
    "test_nn_3": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "buffer"]
            }
        },
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "inputs": {
            "w0": [[1.0, 2.0, 3.0]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": "CrossEntropy", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 10.683655622163707,
                "output": [[-4.31636729454756190162768890994 , 6.3672654109048761967446221801001681459579]]


            },
            "grad": {
                "w0": [[-0.19660742759420338, 0, 0.04517562444230763]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230763],
                "w1": [
                    [-0.26893525818771363,  0.2689352581877137], 
                    [-0.26893525818771363,  0.2689352581877137], 
                    [-0.9525522972063396,  0.9525522972063397]
                ], 
                "b1": [-0.9999770835513174, 0.9999770835513175]

            }
        }
    },
    "test_nn_4": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "buffer"]
            }
        },
        "static_keys": {
            "input": [[-2.0]], 
            "target": [1]
        }, 
        "inputs": {
            "w0": [[1.0, 2.0, 3.0]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": "CrossEntropy", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 4.610867408569036334066e-5,
                "output": [[-5.015513586805456783692733230577282662421391939229673857887807798858778378, 4.9689728263890864326145335388454346751572161215406522842243844022]]


            },
            "grad": {
                "w0": [[-1.6287703780100406e-06, -0.0000000000000000e+00, 2.2744970234690017e-07]], 
                "b0": [8.1438518900502031e-07,  0.0000000000000000e+00, -1.1372485117345008e-07],
                "w1": [[8.2930117404317535e-07, -8.2930117404317535e-07], [4.2006394160987180e-08, -4.2006394160987180e-08], [1.1400674689583735e-07, -1.1400674689583735e-07]], 
                "b1": [4.610761109711512046032e-5, -4.610761109711512046032e-5]
            
            }
        }
    },
    "test_nn_5": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "buffer"]
            }
        },
        "static_keys": {
            "input": [[1.0], [-2.0]], 
            "target": [0, 1]
        }, 
        "inputs": {
            "w0": [[1.0, 2.0, 3.0]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": "CrossEntropy", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 5.3418508654188965,
                "output": [[-4.31636729454756190162768890994 , 6.3672654109048761967446221801001681459579],
                           [-5.015513586805456783692733230577282662421391939229673857887807798858778378, 4.9689728263890864326145335388454346751572161215406522842243844022]]


            },
            "grad": {
                "w0": [[-0.0983045281822907 ,  0, 0.022587925946004995]], 
                "b0": [-0.09830330660450719 , 0,  0.022587755358728232],
                "w1": [[-0.13446721444326978 , 0.1344672144432698], [-0.13446760809065975 , 0.13446760809065977], [-0.4762760915997964 , 0.47627609159979645]],
                "b1": [-0.49996548797011015 ,  0.4999654879701102]
            }
        }
    },
    "test_nn_6": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "softmax"]
            }
        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w0"
            },
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w1"
            }
        ],
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "inputs": {
            "w0": [[1.0, 2.0, 3.0]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [1e-200, 1e-200], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "CrossEntropy",
                    "params": {"input_type": "probs"}
                    },
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 11.883655622163706,
                "output": [[0.000022916448682582498287877106161 , 0.9999770835513174175017121228938392776607400542093695578010433420]]


            },
            "grad": {
                "w0": [[-0.09660742759420338, 0.1, 0.14517562444230764]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230764],
                "w1": [[-0.36893525818771367,  0.16893525818771368], [-0.16893525818771363,  0.3689352581877137], [-0.8525522972063397,  1.05255229720634]],
                "b1": [-0.9999770835513174, 0.9999770835513175]
            }
        }
    },
    "test_nn_7_regex": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [3, 2], 
                "activations": ["sigmoid", "softmax"]
            }
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w\\d",
                "regex": true
            }
        ],
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "inputs": {
            "w0": [[1.0, 2, 3]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "CrossEntropy",
                    "params": {"input_type": "probs"}
                    },
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 11.883655622163706,
                "output": [[0.000022916448682582498287877106161 , 0.9999770835513174175017121228938392776607400542093695578010433420]]
            },
            "grad": {
                "w0": [[-0.09660742759420338, 0.2, 0.34517562444230764]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230764],
                "w1": [[-0.36893525818771367,  0.06893525818771368], [-0.26893525818771363,  0.2689352581877137], [-0.8525522972063397,  1.15255229720634]],
                "b1": [-0.9999770835513174, 0.9999770835513175]
            }
        }
    },
    "test_nn_8": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [2, 2], 
                "activations": ["tanh", "sigmoid"]
            }
        },

        "static_keys": {
            "input": [[-1.0]], 
            "target": [[1, 0]]
        }, 
        "inputs": {
            "w0": [[-1.0, 0]],
            "b0": [2.0, -3.0],
            "w1": [[5.0, 3], [-2, 1]],
            "b1": [0.1, 0.2]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "probs"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.14851880766334883,
                "output": [[0.9991465615035200856145163472396202129711641861618401690538672210 , 0.89935781874669147752944909495571211261121235305914725408257626639]]


            },
            "grad": {
                "w0": [[-0.013288596357364402, -0.004444968888316729]], 
                "b0": [0.013288596357364402, 0.004444968888316729],
                "w1": [[-4.246090164507905e-04,  4.474551364046125e-01], [4.246090164507905e-04, -4.474551364046125e-01]],
                "b1": [-4.2671924823995E-4, 0.44967890937334580653]
            }
        }
    },
    "test_nn_8_efficient": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [2, 2], 
                "activations": ["tanh", "buffer"]
            }
        },

        "static_keys": {
            "input": [[-1.0]], 
            "target": [[1.0, 0]]
        }, 
        "inputs": {
            "w0": [[-1.0, 0]],
            "b0": [2.0, -3.0],
            "w1": [[5.0, 3], [-2, 1]],
            "b1": [0.1, 0.2]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.14851880766334883,
                "output": [[7.0653832758071131593231612967884193256846969829019774427671517059 , 2.1901095073734609026637603705109769501956277094005649836477576302]]


            },
            "grad": {
                "w0": [[-0.013288596357364402, -0.004444968888316729]], 
                "b0": [0.013288596357364402, 0.004444968888316729],
                "w1": [[-4.24609016450790e-04,  4.474551364046125e-01], [4.246090164507905e-04, -4.474551364046125e-01]],
                "b1": [-4.2671924823995e-4, 0.44967890937334580653]
            }
        }
    },
    "test_nn_9": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [1, 2], 
                "activations": ["sigmoid", "buffer"]
            }
        },

        "static_keys": {
            "input": [[-1.0]], 
            "target": [1]
        }, 
        "inputs": {
            "w0": [[0.0]],
            "b0": [0.0],
            "w1": [[0.0, 0.0]],
            "b1": [0.0, 0.0]
        },
        "output_specs": {
            "output": {
                "loss": "CrossEntropy", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 0.69314718055994531,
                "output": [[0.0,0.0]]


            },
            "grad": {
                "w0": [[0.0]], 
                "b0": [0.0],
                "w1": [[0.25, -0.25]],
                "b1": [0.5 , -0.5]
            }
        }
    },
    "test_nn_10": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [1], 
                "activations": ["buffer"]
            }
        },

        "static_keys": {
            "input": [[1.0]], 
            "target": [[1.0]]
        }, 
        "inputs": {
            "w0": [[1.0]],
            "b0": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.0,
                "output": [[2.0]]


            },
            "grad": {
                "w0": [[1.0]], 
                "b0": [1.0]
            }
        }
    },
    "test_linear_10": {
        "NOTE": "coef becomes 0.03333333333333333 when geo_mean implemented!",
        "model": {
            "name": "Linear"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.979999999999999999999966666666666666666667, 
                "output": [[0.5], [0.8], [1.0]]
            },
            "grad": {
                    "w":[[-0.5266666666666666666333333333333333333333], [-0.4266666666666666666666666666666666666667]],
                    "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_linear_10_two_reg_groups": {
        "NOTE": "coef becomes 0.03333333333333333 when geo_mean implemented!",
        "model": {
            "name": "Linear"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            },
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 2.079999999999999999999966666666666666666667, 
                "output": [[0.5], [0.8], [1.0]]
            },
            "grad": {
                    "w":[[-0.49333333333333333333333], [-0.3933333333333333333333333333333333]],
                    "b": [-2.466666666666666666666666667]
            }
        }
    },
    "test_linear_11": {
        "model": {
            "name": "Linear"
        },
        "static_keys": {
            "input": [[0.1], [0.2], [0.3]],
            "target": [[1, 1], [2, 2], [3, 3]]
        },
        "inputs": {
            "w": [[-2.0, -1.0]],
            "b": [-0.2, -0.1]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 6.908333333333333333333333333333333333333, 
                "output": [[-0.4, -0.2], [-0.6, -0.3], [-0.8, -0.4]]
            },
            "grad": {
                "w":[[-0.6, -0.533333333333333333]],
                "b": [-2.6, -2.3]
            }
        }
    },
    "test_linear_11_two_key_reg": {
        "model": {
            "name": "Linear"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            },            
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "b"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.9806666666666666, 
                "output": [[0.5], [0.8], [1.0]]
            },
            "grad": {
                    "w":[[-0.5266666666666666666333333333333333333333], [-0.4266666666666666666666666666666666666667]],
                    "b": [-2.46]
            }
        }
    },
    "test_logistic_1": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[1.0], [2], [3], [4]],
            "target": [[1.0], [1.0], [0.0], [0.0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.7598965876075446, 
                "output": [[0.2], [0.3], [0.4], [0.5]]
            },
            "grad": {
                    "w": [[0.7461548340201426]],
                    "b": [0.0863558763596109]
            }
        }
    },
    "test_logistic_2": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[1.0], [2], [3], [4]],
            "target": [[1.0], [1.0], [1.0], [1.0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[1e-100]],
            "b": [1e-100]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.6931471805599453, 
                "output": [[0.0], [0.0], [0.0], [0.0]]
            },
            "grad": {
                    "w": [[-1.25]],
                    "b": [-0.5]
            }
        }
    },
    "test_logistic_3": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[20.0]],
            "target": [[0.0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[50.0]],
            "b": [-2000.0]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.0, 
                "output": [[-1000.0]]
            },
            "grad": {
                    "w": [[0.0]],
                    "b": [0.0]
            }
        }
    },
    "test_logistic_4": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[1e-8]],
            "target": [[1.0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[-2e-8]],
            "b": [3e-16]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.6931471805599452594172321, 
                "output": [[1e-16]]
            },
            "grad": {
                    "w": [[-0.00000000499999999999999975]],
                    "b": [-0.499999999999999975]
            }
        }
    },
    "test_logistic_5": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[0.0], [0], [0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.1528131125487027, 
                "output": [[0.5],[0.8],[1.0]]
            },
            "grad": {
                    "w": [[0.1398528009782365], [0.11548418169056965]],
                    "b": [0.681164130319824]
            }
        }
    },
    "test_logistic_6": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[0.0], [0], [0]]
        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.2528131125487027, 
                "output": [[0.5],[0.8],[1.0]]
            },
            "grad": {
                    "w": [[0.1731861343115698333333], [0.148817515023902983333]],
                    "b": [0.681164130319824]
            }
        }
    },
    "test_logistic_7": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[0.0], [0], [0]]
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ],
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.236146445882036033333, 
                "output": [[0.5],[0.8],[1.0]]
            },
            "grad": {
                    "w": [[0.2065194676449031666667], [0.148817515023902983333]],
                    "b": [0.681164130319824]
            }
        }
    },
    "test_logistic_8": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[2e40],[-3e40]],
            "target": [[1.0], [0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[2e10]],
            "b": [2e50]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 2.220446049250313e-16, 
                "output": [[6e50],[-4e50]]
            },
            "grad": {
                "w":[[0.0]],
                "b": [0.0]
            }
        }
    },
    "test_logistic_9": {
        "model": {
            "name": "LogisticRegression"
        },
        "static_keys": {
            "input": [[2e+40], [-3e+40]],
            "target": [[0.0], [1.0]]
        },
        "discard_keys": ["probs_output"],
        "inputs": {
            "w": [[2e10]],
            "b": [2e50]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "BinaryCrossEntropy",
                    "params": {"input_type": "logits"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 5e50, 
                "output": [[6e50],[-4e50]]
            },
            "grad": {
                "w":[[2.5e40]],
                "b": [0.0]
            }
        }
    },


    "test_linear_with_2_reg": {
        "model": {
            "name": "Linear"
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            },
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "b"
            }
        ],
        "static_keys": {
            "input": [[0.1, 0.1], [0.2, 0.2], [0.3, 0.2]],
            "target": [[1.0], [2.0], [3.0]]
        },
        "inputs": {
            "w": [[2.0], [1.0]],
            "b": [0.2]
        },
        "output_specs": {
            "output": {
                "loss": "SquaredError", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 1.9806666666666666, 
                "output": [[0.5], [0.8], [1.0]]
            },
            "grad": {
                    "w":[[-0.5266666666666666666333333333333333333333], [-0.4266666666666666666666666666666666666667]],
                    "b": [-2.46]
            }
        }
    },
    "test_kernelizedSVM_1": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "RBFKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0], [2.0], [3.0]],
            "input2": [[1.0], [2.0], [3.0]],
            "l_scale": [1.0],
            "sigma": [0.70710678118],
            "target": [[-1.0], [-1.0], [1.0]]
        },
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "HingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "regularizations": [
            {
                "model": "quadraticformregularizer",
                "coef": 1e-1,
                "input": "w",
                "kernel": "kernel"
            }
        ],        
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 2.4491204715009767,
                "output":[[2.386195080052007], [2.735758882329259], [2.3861950800520066]]
            },
            "grad": {
                "w": [[0.5021663163899435], [0.5138184431325186], [0.1749381960190692]],
                "b": [0.6666666666666667]
            }
        }
    },
    "test_kernelizedSVM_1_without_reg": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "RBFKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0], [2.0], [3.0]],
            "input2": [[1.0], [2.0], [3.0]],
            "l_scale": [1.0],
            "sigma": [0.70710678118],
            "target": [[-1.0], [-1.0], [1.0]]
        },
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "HingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 2.373984654127089,
                "output":[[2.386195080052007], [2.735758882329259], [2.3861950800520066]]
            },
            "grad": {
                "w": [[0.455959813721543], [0.455959813721543], [0.128731693350669]],
                "b": [0.6666666666666667]
            }
        }
    },
    "test_kernelizedSVM_2": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "PolynomialKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0, 1], [2, 2], [3, 3]],
            "input2": [[1.0, 1], [2, 2], [3, 3]],
            "poly_coef": 1.0,
            "degree": 2.0,
            "target": [[1.0], [-1.0], [1.0]]
        },
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "regularizations": [
            {
                "model": "quadraticformregularizer",
                "coef": 1e-1,
                "input": "w",
                "kernel": "kernel"
            }
        ],        
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 25591.949999999997,
                "output":[[84.0], [276.0], [580.0]]
            },
            "grad": {
                "w": [[4619.4333333333325], [14967.166666666666], [31227.966666666664]],
                "b": [184.66666666666666]
            }
        }
    },
    "test_kernelizedSVM_3": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "RBFKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0, 1], [2, 2], [3, 3]],
            "input2": [[1.0, 1], [2, 2], [3, 3]],
            "l_scale": [1.0],
            "sigma": [0.70710678118],
            "target": [[1.0], [-1.0], [1.0]]
        },
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "regularizations": [
            {
                "model": "quadraticformregularizer",
                "coef": 1e-1,
                "input": "w",
                "kernel": "kernel"
            }
        ],        
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 3.624795519079272,
                "output":[[2.1356707458594526], [2.2706705664632003], [2.1356707458594526]]
            },
            "grad": {
                "w": [[0.3329471098416852], [2.2228027298575737], [0.3329471098416852]],
                "b": [2.1804470443088]
            }
        }
    },
    "test_kernelizedSVM_4": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "RBFKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0, 1], [2, 2], [3, 3]],
            "input2": [[1.0, 1], [2, 2], [3, 3]],
            "l_scale": [1.0],
            "sigma": [0.70710678118],
            "target": [[1.0], [-1.0], [1.0]]
        },
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 3.565761984776237,
                "output":[[2.1356707458594526], [2.2706705664632003], [2.1356707458594526]]
            },
            "grad": {
                "w": [[0.29509141831303676], [2.1804470443088], [0.29509141831303676]],
                "b": [2.1804470443088]
            }
        }
    },
    "test_kernelizedSVM_5": {
        "model": {
            "name": "KernelizedSVM",
            "args": {
                "kernel": "RBFKernel"
            }
        },
        "static_keys": {
            "input1": [[1.0, 1], [2, 2], [3, 3]],
            "input2": [[1.0, 1], [2, 2], [3, 3]],
            "l_scale": [1.0],
            "sigma": [0.70710678118],
            "target": [[1.0], [-1.0], [1.0]]
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w"
            }
        ], 
        "discard_keys": ["kernel"],
        "inputs": {
            "w": [[1.0], [1.0], [1.0]],
            "b": [1.0]
        },
        "output_specs": {
            "output": {
                "loss": "QuadHingeLoss", 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 3.615761984776237,
                "output":[[2.1356707458594526], [2.2706705664632003], [2.1356707458594526]]
            },
            "grad": {
                "w": [[0.3284247516463701], [2.2137803776421334], [0.3284247516463701]],
                "b": [2.1804470443088]
            }
        }
    },
    "test_distance_matrix_1": {
        "model": {
            "name": "EncoderDistanceMatrix",
            "args": {
                "get_final_distance": false
            }
        },
        "static_keys": {
            "norm": 2.0,
            "target": [[0.0, 1.1, 4.1, 9.1],
                       [1.1, 0.0, 1.1, 4.1],
                       [4.1, 1.1, 0.0, 1.1],
                       [9.1, 4.1, 1.1, 0.0]]
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0], [4.0]],
            "input2": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps" : ["Sum"],
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.2,
                "output": [[0.0, 1.0, 4.0, 9.0],
                           [1.0, 0.0, 1.0, 4.0],
                           [4.0, 1.0, 0.0, 1.0],
                           [9.0, 4.0, 1.0, 0.0]]
            },
            "grad": {
                "input1": [[12.0], [4], [-4], [-12]],
                "input2": [[12.0], [4], [-4], [-12]]
            }
        },
        "reference_shapes": {
            "input1": [4, null],
            "input2": [4, null]
        }
    },
    "test_distance_matrix_2": {
        "model": {
            "name": "EncoderDistanceMatrix",
            "args": {
                "get_final_distance": false
            }
        },
        "static_keys": {
            "norm": 2.0,
            "target": [[0.0, 24.0],
                       [24.0, 0.0]]
        },
        "inputs": {
            "input1": [[1.0, 2.0], [-2.0, -2.0]],
            "input2": [[1.0, 2.0], [-2.0, -2.0]]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps" : ["Sum"],
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 2.0,
                "output": [[0.0, 25.0],
                           [25.0, 0.0]]

            },
            "grad": {
                "input1": [[6.0, 8.0], [-6.0, -8.0]],
                "input2": [[6.0, 8.0], [-6.0, -8.0]]
            }
        },
        "reference_shapes": {
            "input1": [2, null],
            "input2": [2, null]
        }
    },
    "test_distance_matrix_3": {
        "model": {
            "name": "EncoderDistanceMatrix",
            "args": {
                "get_final_distance": false
            }
        },
        "static_keys": {
            "norm": 2.0,
            "target": [[0.0, 24.0, 0.0],
                       [24.0, 0.0, 25.0],
                       [0.0, 25.0, 0.0]]
        },
        "inputs": {
            "input1": [[1.0, 2, -1], [-2, 2, 3], [1, 1, -1]],
            "input2": [[1.0, 2, -1], [-2, 2, 3], [1, 1, -1]]
        },
        "output_specs": {
            "output": {
                "loss": "AbsoluteError",
                "reduce_steps" : ["Sum"],
                "target_key": "target"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 6.0,
                "output": [[0.0, 25, 1],
                           [25, 0, 26],
                           [1, 26 ,0]]

            },
            "grad": {
                "input1": [[6.0, 2.0, -8.0], 
                            [-12.0, 2.0, 16.0], 
                            [6.0, -4.0, -8]],
                "input2": [[6.0, 2.0, -8.0], 
                            [-12.0, 2.0, 16.0], 
                            [6.0, -4.0, -8]]
            }
        },
        "reference_shapes": {
            "input1": [3, null],
            "input2": [3, null]
        }
    },
    "test_mds_base_1": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 1.0, 4.0, 9.0],
                          [1.0, 0.0, 1.0, 4.0],
                          [4.0, 1.0, 0.0, 1.0],
                          [9.0, 4.0, 1.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 1.0, 4.0, 9.0],
                               [1.0, 0.0, 1.0, 4.0],
                               [4.0, 1.0, 0.0, 1.0],
                               [9.0, 4.0, 1.0, 0.0]]
        },
        "output_specs": {
            "output": {
                "loss": "Buffer"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.0,
                "output": 0.0
            },
            "grad": {
                "pred_distances": [[0.0, 0.0, 0.0, 0.0],
                                   [0.0, 0.0, 0.0, 0.0],
                                   [0.0, 0.0, 0.0, 0.0],
                                   [0.0, 0.0, 0.0, 0.0]]
            }
        }
    },
    "test_mds_base_2": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 1.0, 4.0],
                          [1.0, 0.0, 1.0],
                          [4.0, 1.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 0.0, 0.0],
                               [0.0, 0.0, 0.0],
                               [0.0, 0.0, 0.0]]
        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.0,
                "output": 1.0
            },
            "grad": {
                "pred_distances": [[0, 0, 0],
                                   [0, 0, 0],
                                   [0, 0, 0]]
            }
        }
    },
    "test_mds_base_3": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 3.0, 27.0, 48.0],
                          [3.0, 0.0, 12.0, 27.0],
                          [27.0, 12.0, 0.0, 3.0],
                          [48.0, 27.0, 3.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 16.0, 81.0, 1.0],
                               [16.0, 0.0, 25.0, 25.0],
                               [81.0, 25.0, 0.0, 100.0],
                               [1.0, 25.0, 100.0, 0.0]]
        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.022712434901901762,
                "output": 1.022712434901901762
            },
            "grad": {
                "pred_distances": [[0.0,  0.0011549908824936169,  0.0008609656463266452, -0.012076144745020098],
                                   [0.0011549908824936169, 0.0,  0.0006257454573930683, -7.991510940766344e-05],
                                   [0.0008609656463266452,  0.0006257454573930683, 0.0, 0.0016842363075941656],
                                   [-0.012076144745020098, -7.991510940766344e-05,  0.0016842363075941656, 0.0]]
            }
        }
    },
    "test_mds_base_3-1": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 4.0],
                          [4.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 25.0],
                               [25.0, 0.0]]
        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.5,
                "output": 1.5
            },
            "grad": {
                "pred_distances": [[0.0, 0.025],
                                   [0.025, 0.0]]
            }
        }
    },
    "test_mds_base_4": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 4.0, 1.0],
                          [4.0, 0.0, 1.0],
                          [1.0, 1.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 1.0, 4.0],
                               [1.0, 0.0, 1.0],
                               [4.0, 1.0, 0.0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.57735026918962576451,
                "output": 0.57735026918962576451
            },
            "grad": {
                "pred_distances": [[0.0, -0.07216878364870323, 0.036084391824351615],
                                   [-0.07216878364870323, 0.0, -0.0],
                                   [0.036084391824351615, -0.0, 0.0]]
            }
        }
    },
    "test_mds_base_5": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 25.0],
                          [25.0, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 1.0],
                               [1.0, 0.0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.8,
                "output": 0.8
            },
            "grad": {
                "pred_distances": [[0.0, -0.05],
                                   [-0.05, 0.0]]
            }
        }
    },
    "test_mds_base_6": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 1e+32],
                          [1e+32, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 1.0],
                               [1.0, 0.0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.0,
                "output": 1.0
            },
            "grad": {
                "pred_distances": [[0.0, -2.5e-17],
                                   [-2.5e-17, 0.0]]
            }
        }
    },
    "test_mds_base_7": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 1e-32],
                          [1e-32, 0.0]],
            "norm": 2.0
        },
        "inputs": {
            "pred_distances": [[0.0, 1.0],
                               [1.0, 0.0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1e16,
                "output": 1e16
            },
            "grad": {
                "pred_distances": [[0.0, 2499999999999999.5],
                                   [2499999999999999.5, 0.0]]
            }
        }
    },
    "test_mds_1": {
        "model": {
            "name": "MDS",
            "args": {
                "prediction_dim": 3,
                "input_type": "points"
            }
        },
        "static_keys": {
            "input": [[1.0,1.0,0.0,2.0], [2.0,2.0,1.0,3.0]],
            "norm": 2.0
        },
        "inputs": {
            "coords": [[4.0,2.0,1.0], [1.0, -2.0, 1.0]]

        },
        "discard_keys": ["predicted_coords"],
        "output_specs": {
            "output": {
                "loss": "Relu"
            },
            "predicted_coords": {}
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 1.5,
                "output": 1.5
            },
            "grad": {
                "coords": [[0.3, 0.4, 0], [-0.3, -0.4, 0]]
            }
        }
    },
    "test_tsne_core_1": {
        "model": {
            "name": "TSNECore",
            "args": {
                "exact_distances": false
            }
        },
        "static_keys": {
            "distances": [[0.0, 1.0, 9.0], [1.0, 0.0, 4.0], [9.0, 4.0, 0.0]],
            "TSNECore_0_TsnePJoint_0_output": [[0, 0.16666654, 0.16666673],
                                               [0.16666654, 0, 0.16666673],
                                               [0.16666673, 0.16666673, 0]]
        },
        "injected_static_keys": ["TSNECore_0_TsnePJoint_0_output"],
        "inputs": {
            "pred_distances": [[0.0, 1.0, 9.0], [1.0, 0.0, 4.0], [9.0, 4.0, 0.0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu",
                "reduce_steps": ["Sum"]
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.2133012086061504,
                "output": 0.2133012086061504
            },
            "grad": {
                "pred_distances": [[0.0, -0.07291673, 0.010416673000000001],
                                   [-0.07291673, 0.0, 0.008333346000000004],
                                   [0.010416673000000001, 0.008333346000000004, 0.0]]
            }
        }
    },
    "test_tsne_core_2": {
        "model": {
            "name": "TSNECore"
        },
        "static_keys": {
            "distances": [[0.0, 16, 1], [16, 0, 9], [1, 9, 0]],
            "TSNECore_0_TsnePJoint_1_output": [[0, 0.1, 0.2],
                                    [0.1, 0, 0.2],
                                    [0.2, 0.2, 0]]
        },
        "inputs": {
            "pred_distances": [[0.0, 16, 1], [16, 0, 9], [1, 9, 0]]

        },
        "injected_static_keys": ["TSNECore_0_TsnePJoint_1_output"],
        "output_specs": {
            "output": {
                "loss": "Relu",
                "reduce_steps": ["Sum"]
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.2927158444915283,
                "output": 0.2927158444915283
            },
            "grad": {
                "pred_distances": [[ 0.0, 0.0032563025210084035 , -0.08973214285714284],
                                   [ 0.0032563025210084035, 0, 0.012410714285714287],
                                   [-0.08973214285714284, 0.012410714285714287, 0.0]]
            }
        }
    },
    "test_tsne_core_3": {
        "model": {
            "name": "TSNECore"
        },
        "static_keys": {
            "distances": [[0.0, 16.0], [16.0, 0.0]],
            "p_joint": [[0, 0.5], 
                        [0.5, 0]]
        },
        "inputs": {
            "pred_distances": [[0.0, 16], [16, 0]]

        },
        "output_specs": {
            "output": {
                "loss": "Relu",
                "reduce_steps": ["Sum"]
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.0,
                "output": 0.0
            },
            "grad": {
                "pred_distances": [[0.0, 0.0],
                                   [0.0, 0.0]]
            }
        }
    },
    "test_tsne_1": {
        "model": {
            "name": "TSNE",
            "args": {
                "prediction_dim": 1,
                "input_type": "points"
            }
        },
        "static_keys": {
            "input": [[5.0], [1.0]],
            "norm": 2.0,
            "p_joint": [[0, 0.5], 
                        [0.5, 0]]
        },
        "inputs": {
            "coords": [[-1.0], [1.0]]

        },
        "discard_keys": ["predicted_coords"],
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.0,
                "output": 0.0
            },
            "grad": {
                "coords": [[0.0], [0.0]]
            }
        }
    },
    "test_tsne_2": {
        "model": {
            "name": "TSNE",
            "args": {
                "prediction_dim": 1,
                "input_type": "points"
            }
        },
        "static_keys": {
            "input": [[0.0], [1.0], [3.0]],
            "norm": 2.0,
            "TSNE_0_TSNECore_2_TsnePJoint_0_output": [[0, 0.16666654, 0.16666673],
                                               [0.16666654, 0, 0.16666673],
                                               [0.16666673, 0.16666673, 0]]
        },
        "injected_static_keys": ["TSNE_0_TSNECore_2_TsnePJoint_0_output"],
        "inputs": {
            "coords": [[0.0], [1.0], [3.0]]

        },
        "discard_keys": ["predicted_coords"],
        "output_specs": {
            "output": {
                "loss": "Relu"
            }
        },      
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 0.2133012086061504,
                "output": 0.2133012086061504
            },
            "grad": {
                "coords": [[0.16666684399999998], [-0.35833368800000004],[0.19166684400000006]]
            }
        }
    },
    "test_polynomial_kernel_1": {
        "model": {
            "name": "PolynomialKernel"
        },
        "inputs": {
            "input2": [[-1.0, 2.0], [1.0, 3.0]],
            "poly_coef": 2.0,
            "degree": 3.0
        },
        "static_keys": {
            "input1": [[-1.0, 2.0], [1.0, 3.0]]
        },
        "output_specs": {
            "output": {
                "loss": "Relu",
                "reduce_steps": ["Sum"]
            }
        },  
        "reference_shapes": {
            "input2": [null, 2],
            "output": [2, null]
        },    
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 2757.0,
                "output": [[343.0,343.0],
                          [343.0,1728.0]]
            },
            "grad": {
                "input2": [[0.0, 735.0], [285.0, 1590.0]],
                "poly_coef": 873.0,
                "degree": 6296.2602342115815
            }
        }
    },
    "test_polynomial_kernel_2": {
        "model": {
            "name": "PolynomialKernel"
        },
        "inputs": {
            "input1": [[-1.0, 2.0, 1.0], [1.0, 3.0, 2.0], [-2, 1, -1]],
            "poly_coef": 1.2,
            "degree": 2.0
        },
        "static_keys": {
            "input2": [[-1.0, 2.0, 1.0], [1.0, 3.0, 2.0], [-2, 1, -1]]
        },
        "output_specs": {
            "output": {
                "loss": "Relu",
                "reduce_steps": ["Sum"]
            }
        },
        "reference_shapes": {
            "input1": [null, 3],
            "output": [null, 3]
        },          
        "final_loss_combiner": "Mean",
        "results": {
            "eval": {
                "final_cost": 504.560000000000,
                "output": [[5.184000000000000e+01, 6.723999999999999e+01,1.764000000000000e+01],
                           [6.723999999999999e+01, 2.310400000000000e+02,3.999999999999998e-02],
                           [1.764000000000000e+01, 3.999999999999998e-02,5.184000000000000e+01]]
            },
            "grad": {
                "input1": [[-14.8, 86.4, 38.8],
                            [ 13.2, 124.4, 76.8],
                            [-36.8, 32.4, -5.2]],
                "poly_coef": 109.60000000000001,
                "degree": 1166.865804514411
            }
        }
    },
    "test_Composite_1": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 3,
                        "activation": "sigmoid"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Softmax"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input", "w": "w0", "b": "b0"
                },
                "m2": {
                    "input": {"connect": [["m1", "output"]]}, 
                    "w": "w1", 
                    "b": "b1", 
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }
            }
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w\\d", 
                "regex": true
            }
        ],
        "discard_keys": ["output"],
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "final_loss_combiner": "Mean",
        "inputs": {
            "w0": [[1.0, 2, 3]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "CrossEntropy",
                    "params": {"input_type": "probs"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 11.883655622163706
            },
            "grad": {
                "w0": [[-0.09660742759420338, 0.2, 0.34517562444230764]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230764],
                "w1": [[-0.36893525818771367,  0.06893525818771368], [-0.26893525818771363,  0.2689352581877137], [-0.8525522972063397,  1.15255229720634]],
                "b1": [-0.9999770835513174, 0.9999770835513175]
            }
        }
    },
    "test_Composite_2": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input", 
                    "w": "w0", 
                    "b": "b0", 
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1", 
                    "w": "w1", 
                    "b": "b1", 
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2", 
                    "w": "w2", 
                    "b": "b2", 
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [0, 0]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 22.0,
                "output1": [[2.0, 4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0, 6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[12.125, 1.25]], 
                "b0": [4.625, 0.5],
                "w1": [[4.5, 5.25], [9.0, 10.5]],
                "b1": [1.125, 1.5],
                "b2": [0.5, 0.5],
                "w2": [[0.75, 0.75], [4.5, 4.5 ]]
            }
        }
    },
    "test_Composite_2-1": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [0, 0]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w2"
            }
        ],
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 22.1,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[12.125, 1.25]], 
                "b0": [4.625, 0.5],
                "w1": [[4.5, 5.25], [9.0, 10.5]],
                "b1": [1.125, 1.5],
                "b2": [0.5, 0.5],
                "w2": [[0.775, 0.775], [4.525, 4.525]]
            }
        }
    },
    "test_Composite_2-2": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [0, 0]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 2e-1,
                "input": "w2"
            },
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w2"
            }
        ],
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 22.15,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[12.125, 1.25]], 
                "b0": [4.625, 0.5],
                "w1": [[4.5, 5.25], [9.0, 10.5]],
                "b1": [1.125, 1.5],
                "b2": [0.5, 0.5],
                "w2": [[0.8, 0.8], [4.55, 4.55]]
            }
        }
    },
    "test_Composite_2-3": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w2"
            },
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w1"
            }
        ],
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 22.175,
                "output1": [[2.0, 4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0, 6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[12.125, 1.25]], 
                "b0": [4.625, 0.5],
                "w1": [[4.525, 5.275], [9.025, 10.525]],
                "b1": [1.125, 1.5],
                "b2": [0.5, 0.5],
                "w2": [[0.775, 0.775], [4.525, 4.525]]
            }
        }
    },
    "test_Composite_2-4": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "regularizations": [
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w1"
            },
            {
                "model": "l1",
                "coef": 2e-1,
                "input": "w2"
            }
        ],
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 22.175,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[12.125, 1.25]], 
                "b0": [4.625, 0.5],
                "w1": [[4.525, 5.275], [9.025, 10.525]],
                "b1": [1.125, 1.5],
                "b2": [0.5, 0.5],
                "w2": [[0.775, 0.775], [4.525, 4.525]]
            }
        }
    },
    "test_Composite_2-5": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Relu"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Relu"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Relu", 
                "reduce_steps": ["Sum"]
            },
            "output3": {
                "loss": "Relu", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 58.75,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[37.5, 1.25]], 
                "b0": [14.250, 0.5],
                "w1": [[15.0, 17.5], [30.0, 35.0]],
                "b1": [3.750, 5.0],
                "b2": [0.5, 0.5],
                "w2": [[0.75, 0.75], [4.5, 4.5]]
            }
        }
    },

    "test_Composite_2-6": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Buffer"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w1"
            }
        ],
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Buffer", 
                "reduce_steps": ["Sum"]
            },
            "output3": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 58.85606601717798,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[38.75, 1.25]], 
                "b0": [15.5, 0.5],
                "w1": [[17.53535533905932737622004, 17.53535533905932737622004], [35.03535533905932737622004, 35.03535533905932737622004]],
                "b1": [5.0, 5.0],
                "b2": [0.5, 0.5],
                "w2": [[0.75, 0.75], [4.5, 4.5]]
            }
        }
    },
    "test_Composite_2-7": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Buffer"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w0"
            }
        ],
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Buffer", 
                "reduce_steps": ["Sum"]
            },
            "output3": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 58.825,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[38.775, 1.275]], 
                "b0": [15.5, 0.5],
                "w1": [[17.5, 17.5], [35.0, 35.0]],
                "b1": [5.0, 5.0],
                "b2": [0.5, 0.5],
                "w2": [[0.75, 0.75], [4.5, 4.5]]
            }
        }
    },
    "test_Composite_2-8": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2,
                        "activation": "Buffer"
                    }
                },
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                },
                "m3": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Buffer"
                    }
                }
            },
            "connections": {
                "m1": {
                    "input": "input",
                    "w": "w0",
                    "b": "b0",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "input": "output1",
                    "w": "w1",
                    "b": "b1",
                    "output": {
                        "name": "output2", 
                        "expose": true
                    }
                },
                "m3": {
                    "input": "output2",
                    "w": "w2",
                    "b": "b2",
                    "output": {
                        "name": "output3", 
                        "expose": true
                    }
                }
            }
        },
        "static_keys": {
            "input": [[1.0],[2.0],[3.0],[4.0]]
        }, 
        "regularizations": [
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w0"
            },        
            {
                "model": "l1",
                "coef": 1e-1,
                "input": "w1"
            }
        ],
        "inputs": {
            "w0": [[1.0, 2]],
            "b0": [1.0, 2.0],
            "w1": [[1.0, 2.0], [1e-100, 1e-100]],
            "b1": [-2.0, 2.0],
            "w2": [[1.0, 1.0], [1, 1]],
            "b2": [1.0, 1.0]

        },
        "final_loss_combiner": "Sum",
        "output_specs": {
            "output1": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            },
            "output2": {
                "loss": "Buffer", 
                "reduce_steps": ["Sum"]
            },
            "output3": {
                "loss": "Buffer", 
                "reduce_steps": ["Mean"]
            }
        },
        "results": {
            "eval": {
                "final_cost": 58.93106601717798212866012665431572735589272,
                "output1": [[2.0,4], [3, 6], [4, 8], [5, 10]],
                "output2": [[0.0,6], [1, 8], [2, 10], [3, 12]],
                "output3": [[7.0, 7], [10, 10], [13, 13], [16, 16]]
            },
            "grad": {
                "w0": [[38.775, 1.275]], 
                "b0": [15.5, 0.5],
                "w1": [[17.53535533905932737622004, 17.53535533905932737622004], [35.03535533905932737622004, 35.03535533905932737622004]],
                "b1": [5.0, 5.0],
                "b2": [0.5, 0.5],
                "w2": [[0.75, 0.75], [4.5, 4.5]]
            }
        }
    },
    "test_Composite_1_extend_from_inputs_1": {
        "model": {
            "name": "Model",
            "submodels": {
                "m2": {
                    "name": "Layer",
                    "args": {
                        "dimension": 2, 
                        "activation": "Softmax"
                    }
                },
                "m1": {
                    "name": "Layer",
                    "args": {
                        "dimension": 3,
                        "activation": "sigmoid"
                    }
                }
            },
            "connections": {
                "m2": {
                    "w": "w1", 
                    "b": "b1", 
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                },
                "m1": {
                    "input": "input", 
                    "w": "w0", 
                    "b": "b0", 
                    "output": {"connect": [["m2", "input"]]}
                }
            }
        },
        "regularizations": [
            {
                "model": "l2",
                "coef": 1e-1,
                "input": "w\\d", 
                "regex": true
            }
        ],
        "discard_keys": ["output"],
        "static_keys": {
            "input": [[1.0]], 
            "target": [0]
        }, 
        "inputs": {
            "w0": [[1.0, 2, 3]],
            "b0": [-2.0, -3, 0],
            "w1": [[-1.0, -2], [0, 0], [1, 2]],
            "b1": [-5.0, 5]
        },
        "output_specs": {
            "output": {
                "loss": {
                    "fn": "CrossEntropy",
                    "params": {"input_type": "probs"}
                    }, 
                "reduce_steps": ["Mean"], 
                "target_key": "target"
            }
        },
        "results": {
            "eval": {
                "final_cost": 11.883655622163706
            },
            "grad": {
                "w0": [[-0.09660742759420338, 0.2, 0.34517562444230764]], 
                "b0": [-0.19660742759420338, 0, 0.04517562444230764],
                "w1": [[-0.36893525818771367,  0.06893525818771368], [-0.26893525818771363,  0.2689352581877137], [-0.8525522972063397,  1.15255229720634]],
                "b1": [-0.9999770835513174, 0.9999770835513175]
            }
        }
    }
}