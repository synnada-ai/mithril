{
    "test_linear_1": {
        "model": {
            "name": "Linear"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "w": [[0.2]],
            "b": [0.5]
        },
        "output_grads": {
            "output": [[1.0], [1.0], [1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.7], [0.9], [1.1], [1.3]]
            },
            "grad": {
                "input": [[0.2], [0.2], [0.2], [0.2]],
                "w": [[10.0]],
                "b": [4.0]
            }
        }
    },
    "test_linear_2": {
        "model": {
            "name": "Linear"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "w": [[0.1]],
            "b": [0.1]
        },
        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "output": [[0.2], [0.3], [0.4], [0.5]]
            },
            "grad": {
                "input": [[0.1], [0.2], [0.3], [0.4]],
                "w": [[30.0]],
                "b": [10.0]
            }
        }
    },
    "test_linear_3": {
        "model": {
            "name": "Linear"
        },
        "inputs": {
            "input": [[0.1, 0.2], [0.2, 0.3], [0.4, 0.3]],
            "w": [[5.0], [5.0]],
            "b": [0.1]
        },
        "output_grads": {
            "output": [[1.0], [2.0], [3.0]]
        },
        "results": {
            "eval": {
                "output": [[1.6], [2.6], [3.6]]
            },
            "grad": {
                "input": [[5.0, 5.0], [10.0, 10.0], [15.0, 15.0]],
                "w": [[1.7], [1.7]],
                "b": [6.0]
            }
        }
    },
    "test_linear_4": {
        "model": {
            "name": "Linear"
        },
        "inputs": {
            "input": [[0.1, 0.2], [0.2, 0.5], [0.3, 0.1]],
            "w": [[-2, -1], [1.0, -3.0]],
            "b": [-0.2, -0.1]
        },
        "output_grads": {
            "output": [[2.0, 1.0], [2.0, 3.0], [3.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[-0.2, -0.8], [-0.1, -1.8], [-0.7, -0.7]]
            },
            "grad": {
                "input": [[-5.0, -1.0], [-7.0, -7.0], [-7.0, 0.0]],
                "w": [[1.5, 1], [1.7, 1.8]],
                "b": [7.0, 5.0]
            }
        }
    },
    "test_layernorm_1": {
        "model": {
            "name": "LayerNorm"
        },
        "inputs": {
            "input": [[0.1, 0.2], [0.2, 0.5], [0.3, 0.1]],
            "w": [-2.0, -1.0],
            "b": [-0.2, -0.1]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.7960119601394982, -1.0980059800697486],
                            [1.7995557036488552, -1.0997778518244279],
                            [-2.199000749375546, 0.8995003746877733]]
            },
            "grad": {
                "input": [[-0.039761194425082635, 0.039761194425082635],
                          [-0.0014804943755741817, 0.0014804943755741817],
                          [-0.004992509364077691, 0.004992509364077691]],
                "w": [-0.9982834572064038, 0.998283457206403],
                "b": [3.0, 3.0]
            }
        }
    },
    "test_layernorm_2": {
        "model": {
            "name": "LayerNorm"
        },
        "inputs": {
            "input": [[0.1, 0.2, 3.0], [-5, 0.2, 0.5], [0.3,12.0, 0.1]],
            "w": [-2.0, -1.0, 1.0],
            "b": [-0.2, -0.1, 0.1]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0], [1.0, 2.0, 1.0], [1.0, 1.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.2879549339795673, 0.5695797202908053, 1.5135571872805893],
                            [2.625095678460377, -0.7468677020773762, 0.8656801371528127],
                            [1.1781103050032251, -1.5140610086120045, -0.6250058561103924]]
            },
            "grad": {
                "input": [[-0.3331005693684149, 0.3449899589595725, -0.01188938959115815],
                          [0.03230107069274868, -0.5921983056371181, 0.5598972349443694],
                          [-0.5406415465173992, 0.009086332827837919, 0.531555213689561]],
                "w": [-2.8455804587215847, 2.0382166924759515, -0.7207861000081675],
                "b": [3.0, 4.0, 6.0]
            }
        }
    },
    "test_RBFKernel_1": {
        "model": {
            "name": "RBFKernel"
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0]],
            "input2": [[1.0], [2.0], [3.0]],
            "l_scale": [1.0],
            "sigma": [0.70710678118]
        },
        "output_grads": {
            "output": [[1.0, 2.0, 3.0], 
                       [2.0, 3.0, 1.0], 
                       [2.0, 2.0, 2.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 0.3678794411646295, 0.018315638887377417],
                           [0.3678794411646295, 1.0, 0.3678794411646295],
                           [0.018315638887377417, 0.3678794411646295, 1.0]]
            },
            "grad": {
                "input1": [[1.6913054313383684], [-0.7357588823428846], [-1.618042875787502]],
                "input2": [[1.618042875787502], [0.0], [-0.9555465489954839]],
                "l_scale": [17.33346856517859],
                "sigma": [8.319730327138956]
            }
        }
    },
    "test_RBFKernel_2": {
        "description": "We use this setting as input to test_SVMLayerWithReg_2",
        "model": {
            "name": "RBFKernel"
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0]],
            "input2": [[1.0], [2.0], [3.0]],
            "l_scale": [1.0],
            "sigma": [0.70710678118]
        },
        "output_grads": {
            "output": [[2.0, 2.0, 2.0],
                       [3.0, 3.0, 3.0],
                       [4.0, 4.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 0.3678794411646295, 0.018315638887377417],
                           [0.3678794411646295, 1.0, 0.3678794411646295],
                           [0.018315638887377417, 0.3678794411646295, 1.0]]
            },
            "grad": {
                "input1": [[1.618042875787502], [0.0], [-3.236085751575004]],
                "input2": [[2.5003268692321194], [1.4715177646857691], [-2.3538017581303863]],
                "l_scale": [27.048894254599638],
                "sigma": [13.729549076766231]
            }
        }
    },
    "test_PolynomialKernel": {
        "model": {
            "name": "PolynomialKernel"
        },
        "inputs": {
            "input1": [[1.0, 2], [2, 3], [3, 4]],
            "input2": [[1.0, 2], [2, 3], [3, 4]],
            "poly_coef": [1.0],
            "degree": [2.0]
        },
        "output_grads": {
            "output": [[1.0, 2.0, 3.0], 
                       [1.0, 3.0, 1.0], 
                       [2.0, 2.0, 2.0]]
        },
        "results": {
            "eval": {
                "output": [[36.0, 81, 144],
                           [81, 196, 361],
                           [144, 361, 676]]
            },
            "grad": {
                "input1": [[300.0, 420], [300, 440], [512, 740]],
                "input2": [[192.0, 270], [432, 628], [460, 674]],
                "poly_coef": [488.0],
                "degree": [11533.101344688343]
            }
        }
    },
    "test_logistic_1_probs_ignored": {
        "model": {
            "name": "LogisticRegression"
        },
        "inputs": {
            "w": [[0.1]],
            "b": [0.1]
        },
        "static_keys": {"input": [[1.0], [2.0], [3.0], [4.0]]},
        "discard_keys": ["probs_output"],
        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "output": [[0.2], [0.3], [0.4], [0.5]]
            },
            "grad": {
                "w":[[30.0]],
                "b": [10.0]
            }
        }
    },
    "test_logistic_1_logits_ignored": {
        "model": {
            "name": "LogisticRegression"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "w": [[0.1]],
            "b": [0.1]
        },
        "discard_keys": ["output"],
        "output_grads": {
            "probs_output": [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "probs_output": [[0.5498339973124779085592], [0.5744425168116589871521], [0.5986876601124520003691], [0.6224593312018545646389]]
            },
            "grad": {
                "input": [[0.024751657271185997], [0.04889166233814918], [0.07207822372245874], [0.09400148488063781]],
                "w":[[7.147755926374118]],
                "b": [2.397230282124317]
            }
        }
    },
    "test_logistic_2_no_ignore": {
        "model": {
            "name": "LogisticRegression"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "w": [[0.0]],
            "b": [0.0]
        },
        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [4.0]],
            "probs_output": [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [0.0], [0.0], [0.0]],
                "probs_output": [[0.5], [0.5], [0.5], [0.5]]
            },
            "grad": {
                "input": [[0.0], [0.0], [0.0], [0.0]],
                "w":[[37.5]],
                "b": [12.5]
            }
        }
    },
    "test_distance_matrix_1": {
        "model": {
            "name": "EncoderDistanceMatrix",
            "args": {
                "get_final_distance": false
            }
        },
        "inputs": {
            "input1": [[1.0], [2], [3]],
            "input2": [[1.0], [2], [3]],
            "norm": [3.0]
        },
        "output_grads": {
            "output": [[1.0, 2, 3],
                       [-4, 3, -2],
                       [-1, 0, 2]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 1.0, 8.0],
                           [1.0, 0.0, 1.0],
                           [8.0, 1.0, 0.0]]
            },
            "grad": {
                "input1": [[-42.0], [-6.0], [-12]],
                "input2": [[24.0], [6.0], [30]],
                "norm": [11.090354888959123]
            }
        } 
    },
    "test_distance_matrix_2": {
        "model": {
            "name": "EncoderDistanceMatrix"
        },
        "inputs": {
            "input1": [[1.0], [2], [3]],
            "input2": [[1.0], [2], [3]],
            "norm": [3.0]
        },
        "output_grads": {
            "output": [[1.0, 2, 3],
                       [-4, 3, -2],
                       [-1, 0, 2]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 1.0, 2.0],
                           [1.0, 0.0, 1.0],
                           [2.0, 1.0, 0.0]]
            },
            "grad": {
                "input1": [[-5.0], [-2.0], [-1.0]],
                "input2": [[5.0], [2.0], [1.0]],
                "norm": [0.0]
            }
        } 
    },
    "test_distance_matrix_3": {
        "model": {
            "name": "EncoderDistanceMatrix"
        },
        "inputs": {
            "input1": [[1.0, 2.0], 
                      [2.0, 2.0], 
                      [3.0, 1.0]],
            "input2": [[1.0, 2.0], 
                       [2.0, 2.0], 
                       [3.0, 1.0]],
            "norm": [3.0]
        },
        "output_grads": {
            "output": [[1.0, 2, 3],
                       [-4, 3, -2],
                       [-1, 0, 2]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 1.0, 2.080083823051904],
                           [1.0, 0.0, 1.2599210498948732],
                           [2.080083823051904, 1.2599210498948732, 0.0]]
            },
            "grad": {
                "input1": [[-4.773445097402539, 0.6933612743506348], 
                          [-2.7400789501051266, -1.2599210498948732], 
                          [-0.9244816991341797, 0.23112042478354491]],
                "input2": [[4.92448169913418, -0.23112042478354491], 
                          [2.0, 0.0], 
                          [1.513524047507666, 0.5665597755442384]],
                "norm": [0.03282460531963896]
            }
        } 
    },
    "test_distance_matrix_4": {
        "model": {
            "name": "EncoderDistanceMatrix",
            "args": {
                "get_final_distance": false
            }
        },
        "inputs": {
            "input1": [[1.0], [3], [4]],
            "input2": [[7.0], [8], [9]],
            "norm": [2.0]
        },
        "output_grads": {
            "output": [[-2.0, 3, 0],
                       [2, 4, 1],
                       [4, 1, -1]]
        },
        "results": {
            "eval": {
                "output": [[36.0, 49.0, 64.0],
                           [16.0, 25.0, 36.0],
                           [9.0, 16.0, 25.0]]
            },
            "grad": {
                "input1": [[-18.0], [-68.0], [-22]],
                "input2": [[16.0], [90.0], [2]],
                "norm": [448.34546617728535]
            }
        } 
    },

    "test_distance_matrix_5": {
        "model": {
            "name": "EncoderDistanceMatrix"
        },
        "inputs": {
            "input1": [[1.0], [3], [4]],
            "input2": [[7.0], [8], [9]],
            "norm": [2.0]
        },
        "output_grads": {
            "output": [[-2.0, 3, 0],
                       [2, 4, 1],
                       [4, 1, -1]]
        },
        "results": {
            "eval": {
                "output": [[6.0, 7.0, 8.0],
                           [4.0, 5.0, 6.0],
                           [3.0, 4.0, 5.0]]
            },
            "grad": {
                "input1": [[-1.0], [-7.0], [-4]],
                "input2": [[4.0], [8.0], [0]],
                "norm": [0.0]
            }
        } 
    },

    "test_distance_matrix_6": {
        "model": {
            "name": "EncoderDistanceMatrix"
        },
        "inputs": {
            "input1": [[3.0, 2], [4, 1], [4, 3]],
            "input2": [[3.0, 3], [2, 5], [2, 1]],
            "norm": [3.0]
        },
        "output_grads": {
            "output": [[-2.0, 3, 0],
                       [2, 4, 1],
                       [4, 1, -1]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 3.0365889718756622, 1.2599210498948732],
                           [2.080083823051904, 4.160167646103808, 2.0],
                           [1.0, 2.5198420997897464, 2.5198420997897464]]
            },
            "grad": {
                "input1": [[0.3253488184152496,-0.928139365737246616891],
                           [2.38672254870126949,-5.54689019480507796],
                           [4.0, -1.2599210498948736]],

                "input2": [[-4.46224084956708985, -0.1510366017316406],
                           [-1.879791042496866064099,7.256026687221401976891], 
                           [-0.3700394750525632,0.6299605249474368]],
                "norm": [-0.9621774874394304]
            }
        } 
    },
    "test_poly_features_1":{
        "model": {
            "name": "PolynomialFeatures",
            "args": {
                "degree": 2
            }
        },
        "inputs": {
            "input": [[2.0, 3.0]]
        },
        "output_grads": {
            "output": [[1.0, 2, 3, 4, 5]]
        },
        "results": {
            "eval": {
                "output": [[2.0, 3, 4, 6, 9]]
            },
            "grad": {
                "input": [[25.0, 40.0]]
            }
        } 
    },
    "test_poly_features_2":{
        "model": {
            "name": "PolynomialFeatures",
            "args": {
                "degree": 2
            }
        },
        "inputs": {
            "input": [[1.0], [2], [3], [4]]
        },
        "output_grads": {
            "output": [[1.0, 2], [2, 1], [3, 0], [2, 2]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1], [2, 4], [3, 9], [4, 16]]
            },
            "grad": {
                "input": [[5.0], [6], [3], [18]]
            }
        } 
    },
    "test_poly_features_3":{
        "model": {
            "name": "PolynomialFeatures",
            "args": {
                "degree": 2
            }
        },
        "inputs": {
            "input": [[1.0, 1], [2, 3], [3, -1], [0, 10]]
        },
        "output_grads": {
            "output": [[1.0, 2, 0, 1, 2], 
                       [0, 3, 2, 1, 1], 
                       [1, -1, 1, -3, 0], 
                       [0, 1, 0, 0, 0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1, 1, 1, 1], 
                           [2, 3, 4, 6, 9], 
                           [3, -1, 9, -3, 1], 
                           [0, 10, 0, 0, 100]]
            },
            "grad": {
                "input": [[2.0, 7], [11, 11], [10, -10], [0, 1]]
            }
        } 
    },
    "test_poly_features_4":{
        "model": {
            "name": "PolynomialFeatures",
            "args": {
                "degree": 3
            }
        },
        "inputs": {
            "input": [[1.0, -2], [2, 1]]
        },
        "output_grads": {
            "output": [[0.0, 2, 0, 1, 2, 0, 1, 0, 0], 
                       [1.0, 3, 1, 0, 2, 2, 0, 0, 1]]
        },
        "results": {
            "eval": {
                "output": [[1.0, -2, 1, -2, 4, 1, -2, 4, -8], 
                           [2.0, 1, 4, 2, 1, 8, 4, 2, 1]]
            },
            "grad": {
                "input": [[-6.0, -4], [29, 10]]
            }
        } 
    },
    "test_mds_core_1": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "distances": [[0.0, 1.0, 4.0, 9.0],
                          [1.0, 0.0, 1.0, 4.0],
                          [4.0, 1.0, 0.0, 1.0],
                          [9.0, 4.0, 1.0, 0.0]],
            "pred_distances": [[0.0, 1.0, 4.0, 9.0],
                            [1.0, 0.0, 1.0, 4.0],
                            [4.0, 1.0, 0.0, 1.0],
                            [9.0, 4.0, 1.0, 0.0]],
            "norm": 2.0
        },
        "output_grads": {
            "output": 2.0
        },
        "results": {
            "eval": {
                "output": 0.0
            },
            "grad": {
                "distances": [[0, 0, 0, 0],
                                [0, 0, 0, 0],
                                [0, 0, 0, 0],
                                [0, 0, 0, 0]],
                "pred_distances": [[0, 0, 0, 0],
                                   [0, 0, 0, 0],
                                   [0, 0, 0, 0],
                                   [0, 0, 0, 0]],
                "norm": 0.0
            }
        } 
    },
    "test_mds_core_2": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "distances": [[0.0, 1.0, 4.0],
                          [1.0, 0.0, 1.0],
                          [4.0, 1.0, 0.0]],
            "pred_distances": [[0.0, 4.0, 1.0],
                            [4.0, 0.0, 9.0],
                            [1.0, 9.0, 0.0]],
            "norm": 2.0
        },
        "output_grads": {
            "output": 2.0
        },
        "results": {
            "eval": {
                "output": 1.0
            },
            "grad": {
                "distances": [[-0.08333333333333333, -0.16666666666666666, -0.041666666666666664],
                              [-0.16666666666666666, -0.08333333333333333, -0.25],
                              [-0.041666666666666664, -0.25, -0.08333333333333333]],
                "pred_distances": [[0.0, 0.041666666666666664, -0.08333333333333333],
                                   [0.041666666666666664, 0, 0.05555555555555555],
                                   [-0.08333333333333333, 0.05555555555555555, 0]],
                "norm": -1.0986122886681096
            }
        } 
    },
    "test_mds_core_3": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "distances": [[0.0, 1.0, 8.0],
                          [1.0, 0.0, 1.0],
                          [8.0, 1.0, 0.0]],
            "pred_distances": [[0.0, 8.0, 1.0],
                               [8.0, 0.0, 27.0],
                               [1.0, 27.0, 0.0]],
            "norm": 3.0
        },
        "output_grads": {
            "output": 2.0
        },
        "results": {
            "eval": {
                "output": 1.0
            },
            "grad": {
                "distances": [[-0.03333333333333333, -0.06666666666666667, -0.025],
                              [-0.06666666666666667, -0.03333333333333333, -0.16666666666666666],
                              [-0.025, -0.16666666666666666, -0.03333333333333333]],
                "pred_distances": [[0.0, 0.008333333333333331, -0.03333333333333333],
                                   [0.008333333333333331, 0, 0.014814814814814808],
                                   [-0.03333333333333333, 0.014814814814814808, 0]],
                "norm": -0.6940505827851691
            }
        }
    },
    "test_mds_core_4": {
        "model": {
            "name": "MDSCore",
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "distances": [[0.0,0.0],
                          [0.0,0.0]],

            "pred_distances": [[0.0,0.0],
                               [0.0,0.0]],
            "norm": 2.0
        },
        "output_grads": {
            "output": 1.0
        },
        "results": {
            "eval": {
                "output": 7.458340731200207e-155
            },
            "grad": {
                "distances": [[0.0,0.0],
                              [0.0,0.0]],

                "pred_distances": [[0.0,0.0],
                                   [0.0,0.0]],
                "norm": 1.32459464e-152
            }
        } 
    },
    "test_mds_2": {
        "NOTE": "Prove the differences of diagonal entries of input gradient wrt composite-ml is because of linearized models like power, log etc.",
        "model": {
            "name": "MDS",
            "args": {
                "prediction_dim": 1,
                "input_type": "powered_distances"
            }
        },
        "discard_keys": ["predicted_coords"],
        "inputs": {
            "input": [[0.0, 1.0, 8.0],
                       [1.0, 0.0, 1.0],
                       [8.0, 1.0, 0.0]],
            "coords": [[1.0], [3], [0]],
            "norm": 3.0
        },
        "output_grads": {
            "output": 2.0
        },
        "results": {
            "eval": {
                "output": 1.0
            },
            "grad": {
                "input": [[-0.03333333333333333, -0.06666666666666667, -0.025],
                           [-0.06666666666666667, -0.03333333333333333, -0.16666666666666666],
                           [-0.025, -0.16666666666666666, -0.03333333333333333]],
                "coords": [[-0.39999999999999997], 
                           [0.9999999999999996], 
                           [-0.5999999999999996]],
                "norm": 0.2772588722239777
            }
        }  
    },
    "test_tsne_core_1": {
        "model": {
            "name": "TSNECore", 
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "pred_distances": [[0.0, 1, 9], [1, 0, 4], [9, 4, 0]]
        },
        "static_keys": {
            "distances": [[0.0, 1, 9], [1, 0, 4], [9, 4, 0]], 
            "TsnePJoint_0_output": [[0, 0.16666654, 0.16666673],
                                    [0.16666654, 0, 0.16666673],
                                    [0.16666673, 0.16666673, 0]]
        },
        "injected_static_keys": ["TsnePJoint_0_output"],
        "additional_info": {
            "input_hat": [[1], [2], [4]],
            "dist^2 Q": [[0, 1, 9], [1, 0, 4], [9, 4, 0]],
            "inv_dist_q": [[0, 0.5, 0.1], [0.5, 0, 0.2], [0.1, 0.2, 0]],
            "Q": [[0     , 0.3125, 0.0625],
                  [0.3125, 0     , 0.125 ],
                  [0.0625, 0.125 , 0     ]]
        },
        "output_grads": {
            "output": 1.0
        },
        "results": {
            "eval": {
                "output": 0.2133012086061504
            },
            "grad": {
                "pred_distances": [[0.0, -0.07291673, 0.010416673000000001],
                                   [-0.07291673, 0.0, 0.008333346000000004],
                                   [ 0.010416673000000001, 0.008333346000000004, 0.0]]
            }
        }
    },
    "test_tsne_core_2": {
        "model": {
            "name": "TSNECore", 
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "pred_distances": [[0.0, 16, 1], [16, 0, 9], [1, 9, 0]]
        },
        "static_keys": {
            "distances": [[0.0, 16, 1], [16, 0, 9], [1, 9, 0]], 
            "TsnePJoint_0_output": [[0, 0.1, 0.2],
                                    [0.1, 0, 0.2],
                                    [0.2, 0.2, 0]]
        },
        "injected_static_keys": ["TsnePJoint_0_output"],
        "additional_info": {
            "input_hat": [[-1], [3], [0]],
            "dist^2 Q": [[0, 16, 1], [16, 0, 9], [1, 9, 0]],
            "inv_dist_q": [[0, 0.05882353, 0.5],
                           [0.05882353, 0, 0.1],
                           [0.5, 0.1, 0]],
            "Q": [[0, 0.04464286, 0.37946429],
                    [0.04464286, 0, 0.07589286],
                    [0.37946429, 0.07589286, 0]]
        },
        "output_grads": {
            "output": 2.0
        },
        "results": {
            "eval": {
                "output": 0.2927158444915283
            },
            "grad": {
                "pred_distances": [[0.0, 0.006512605042016807, -0.1794642857142857],
                                   [0.006512605042016807, 0.0, 0.024821428571428574],
                                   [-0.1794642857142857, 0.024821428571428574, 0.0]]
            }
        }
    },
    "test_tsne_core_3": {
        "NOTE": "In this test, gradients can not be obtained as in composite-ml. Because P values are given wrong in composite-ml which does not sum to 1.0. We can only use the short gradient formula used in there only when sum(P) = 1.0",
        "model": {
            "name": "TSNECore", 
            "args": {
                "exact_distances": false
            }
        },
        "inputs": {
            "pred_distances": [[0.0, 16], [16, 0]]
        },
        "static_keys": {
            "distances": [[0.0, 16], [16, 0]], 
            "TsnePJoint_0_output": [[0, 0.5], 
                                    [0.5, 0]]
        },
        "injected_static_keys": ["TsnePJoint_0_output"],
        "additional_info": {
            "input_hat": [[-1], [3]],
            "dist Q": [[0, 16], [16, 0]],
            "inv dist": "[[0, 1/17], [1/17, 0]]",
            "Q": [[0, 0.5], [0.5, 0]]
        },
        "output_grads": {
            "output": 1.0
        },
        "results": {
            "eval": {
                "output": 0.0
            },
            "grad": {
                "pred_distances": [[0.0, 0.0],
                                   [0.0, 0.0]]
            }
        }
    },
    "test_tsne_1": {
        "model": {
            "name": "TSNE",
            "args": {
                "prediction_dim": 1,
                "input_type": "points"
            }
        },
        "discard_keys": ["predicted_coords"],
        "inputs": {
            "coords": [[-1.0], [1]]
        },
        "output_grads": {
            "output": 2.0
        },
        "static_keys": {
            "input": [[5.0], [1]],
            "norm": 2.0, 
            "TSNECore_2_TsnePJoint_0_output": [[0, 0.5], 
                                               [0.5, 0]]
        },
        "injected_static_keys": ["TSNECore_2_TsnePJoint_0_output"],
        "results": {
            "eval": {
                "output": 0.0
            },
            "grad": {
                "coords": [[0.0], [0.0]]
            }
        }
    },
    "test_polynomial_1D_Degree_1": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]],
            "w": [[0.2]],
            "b": [0.5]
        },
        "output_grads": {
            "output":   [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "output": [[0.7], [0.9], [1.1], [1.3]]
            },
            "grad": {
                "input": [[0.2], [0.4], [0.6], [0.8]],
                "w":[[30.0]],
                "b": [10.0]
            }
        }
    },
    "test_polynomial_2D_Degree_1": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 1,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[0.1, 0.1], [0.2, 0.4], [0.3, 0.3]],
            "w": [[5.0], [5.0]],
            "b": [1.0]
        },
        "output_grads": {
            "output": [[1.0], [2.0], [3.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0], [4.0], [4.0]]
            },
            "grad": {
                "input": [[5.0, 5.0], [10.0, 10.0], [15.0, 15.0]],
                "w":[[1.4], [1.8]],
                "b": [6.0]
            }
        }
    },
    "test_polynomial_1D_Degree_2": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[2.0]],
            "w": [[0.1], [0.2]],
            "b": [0.3]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.3]]
            },
            "grad": {
                "input": [[0.9]],
                "w":[[2.0], [4.0]],
                "b": [1.0]
            }
        }
    },
    "test_polynomial_1D_Degree_3": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 3,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[2.0]],
            "w": [[0.1], [0.2], [-0.2]],
            "b": [0.3]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[-0.3]]
            },
            "grad": {
                "input": [[-1.5]],
                "w":[[2.0], [4.0], [8.0]],
                "b": [1.0]
            }
        }
    },
    "test_polynomial_2D_Degree_2": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[2.0, 1.0], [-1.0, -3.0]],
            "w": [[0.1], [0.2], [-0.2], [-0.3], [-0.5]],
            "b": [0.3]
        },
        "output_grads": {
            "output": [[1.0], [2.0]]
        },
        "results": {
            "eval": {
                "output": [[-1.2], [-6.0]]
            },
            "grad": {
                "input": [[-1.0, -1.4], [2.8, 7.0]],
                "w": [[-0.0], [-5.0], [6.0], [8.0], [19.0]],
                "b": [3.0]
            }
        }
    },
    "test_polynomial_2D_Degree_2_multilabel": {
        "model": {
            "name": "PolynomialRegression",
            "args": {
                "degree": 2,
                "dimension": 1
            }
        },
        "inputs": {
            "input": [[2.0, 1.0], [3.0, 2.0]],
            "w": [[1, 2.0], [2.0, 1.0], [1.0, 3.0], [-2.0, -2.0], [-1.0, -2.0]],
            "b": [1.0, 2.0]
        },
        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[4.0, 13.0], [1.0, 17.0]]
            },
            "grad": {
                "input": [[27.0, -18.0], [73.0, -76.0]],
                "w": [[11.0, 16.0], [7.0, 10.0], [31.0, 44.0], [20.0, 28.0], [13.0, 18.0]],
                "b": [4.0, 6.0]
            }
        }
    },
    "test_GaussProcessRegressionLayer": {
        "model": {
            "name": "GaussProcessRegressionCore"
        },
        "inputs": {
            "label": [[1.0], [2.0]],
            "s": [1.0],
            "k": [[1.0, 0.5],
                  [0.5, 1.0]],
            "k_star": [[1.0, 0.5],
                       [0.5, 1.0]],
            "mu": [[1.0], [1.0]]
        },
        "additional_info": {
            "NOTE": "Below outputs in 'eval' are summed version of each output individually. Unreduced versions are also noted. Unreduced versions triggers an error at combiner function's fromiter operation",
            "Unreduced losses": {
                "loss": 2.765421653067172,
                "pred": [[1.13333333],
                         [1.46666667]],
                "conf": [[1.46666667],
                         [1.46666667]]
            }
        },
        "output_grads": {
            "loss": [1.0],
            "confidence": [[1.0],
                           [1.0]]
        },
        "results": {
            "eval": {
                "loss": [2.765421653067172],
                "confidence": [[1.4666666666666668],
                               [1.4666666666666668]],
                "predictions": [[1.1333333333333333],
                                [1.4666666666666668]]
            },
            "grad": {
                "label": [[0.46666666666666656],
                          [1.1333333333333333]],
                "s": [2.6133333333333333],
                "k": [[-0.49333333333333335, 0.04],
                      [-0.22666666666666666, -0.36]],
                "k_star": [[1.0, 0.0],
                           [0.0, 1.0]],
                "mu": [[0.5333333333333334], [-0.13333333333333308]]
            }
        }
    },
    "test_GaussProcessRegressionLayer_2": {
        "model": {
            "name": "GaussProcessRegressionCore"
        },
        "inputs": {
            "label": [[1.0], [2.0]],
            "s": [1.0],
            "k": [[1.0, 0.5],
                  [0.5, 1.0]],
            "k_star": [[1.0, 0.5],
                       [0.5, 1.0]],
            "mu": [[1.0], [1.0]]
        },
        "additional_info": {
            "NOTE": "Below outputs in 'eval' are summed version of each output individually. Unreduced versions are also noted. Unreduced versions triggers an error at combiner function's fromiter operation",
            "Unreduced losses": {
                "loss": 2.765421653067172,
                "pred": [[1.13333333],
                         [1.46666667]],
                "conf": [[1.46666667],
                         [1.46666667]]
            }
        },
        "output_grads": {
            "loss": [1.0],
            "predictions": [[1.0],
                            [2.0]],
            "confidence": [[1.0],
                           [2.0]]
        },
        "results": {
            "eval": {
                "loss": [2.765421653067172],
                "confidence": [[1.4666666666666668],
                               [1.4666666666666668]],
                "predictions": [[1.1333333333333333],
                                [1.4666666666666668]]
            },
            "grad": {
                "label": [[0.46666666666666656],
                          [1.1333333333333333]],
                "s": [2.6133333333333333],
                "k": [[-0.49333333333333335, 0.04],
                      [-0.22666666666666666, -0.36]],
                "k_star": [[1.0, 0.0],
                           [0.0, 1.0]],
                "mu": [[0.5333333333333334], [-0.13333333333333308]]
            }
        }
    },
    "test_conv1d_1": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [63.0, 69.0, 75.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [30.0, 33.0, 36.0],
                    [33.0, 36.0, 39.0]
                ]]

            }
        }
    },
    "test_conv1d_2": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "out_channels": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [63.0, 75.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [20.0, 22.0, 24.0],
                    [22.0, 24.0, 26.0]
                ]]

            }
        }
    },
    "test_conv1d_3": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [63.0, 75.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [20.0, 22.0, 24.0],
                    [22.0, 24.0, 26.0]
                ]]

            }
        }
    },
    "test_conv1d_4": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]],
            "bias": [4.0]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [67.0, 79.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [20.0, 22.0, 24.0],
                    [22.0, 24.0, 26.0]
                ]],
                "bias": [2.0]
            }
        }
    },    
    "test_conv1d_5": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "padding": 1
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]],
            "bias": [4.0]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [78.0, 73.0, 114]
                ]]
            },
            "grad": {
                "kernel": [[
                    [22.0, 33.0, 22.0],
                    [24.0, 36.0, 24.0]
                ]],
                "bias": [3.0]
            }
        }
    },
    "test_conv1d_6": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "padding": [1,0]
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]],
            "bias": [4.0]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [78.0, 73.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [10.0, 20.0, 22.0],
                    [11.0, 22.0, 24.0]
                ]],
                "bias": [2.0]
            }
        }
    },
    "test_conv1d_7": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "padding": [0,1]
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]],
            "bias": [4.0]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [67.0, 79.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [20.0, 22.0, 24.0],
                    [22.0, 24.0, 26.0]
                ]],
                "bias": [2.0]
            }
        }
    },
    "test_conv1d_8": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [74.0, 63.0, 69.0, 75.0, 110.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [42.0, 55.0, 46.0],
                    [46.0, 60.0, 50.0]
                ]]

            }
        }
    },
    "test_conv1d_9": {
        "model": {
            "name": "Convolution1D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": "SAME",
                "use_bias": false
            },
            "enums": {"padding": "PaddingType"}
        },
        "inputs": {
            "kernel": [[
                [-1.0, 5.0, -1.0],
                [-1.0, 5.0, -1.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]
        },
        "static_keys": {
            "input": [[
                [9.0, 10.0, 11.0, 12.0, 13.0],
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [74.0, 63.0, 69.0, 75.0, 110.0]
                ]]
            },
            "grad": {
                "kernel": [[
                    [42.0, 55.0, 46.0],
                    [46.0, 60.0, 50.0]
                ]]

            }
        }
    },
    "test_conv2d_1": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [6.0, 7.0, 8.0],
                    [11.0, 12.0, 13.0],
                    [16.0, 17.0, 18.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [54.0,  63.0,  72.0],
                    [99.0, 108.0, 117.0],
                    [144.0, 153.0, 162.0]
                ]]]

            }
        }
    },
    "test_conv2d_2": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "stride": 2,
                "kernel_size": 3,
                "out_channels": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0],
                [3.0, 4.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [0.0,  1.0,  2.0,  3.0,  4.0],
                [5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [6.0, 8.0],
                    [16.0, 18.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [82.0, 92.0, 102.0],
                    [132.0, 142.0, 152.0],
                    [182.0, 192.0, 202.0]
                ]]]
            }
        }
    },
    "test_conv2d_3": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [6.0, 7.0, 8.0],
                    [11.0, 12.0, 13.0],
                    [16.0, 17.0, 18.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [54.0,  63.0,  72.0],
                    [99.0, 108.0, 117.0],
                    [144.0, 153.0, 162.0]
                ]]]
            }
        }
    },

    "test_conv2d_4": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1
            }
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]],
            "bias": [3.0]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [9.0, 10.0, 11.0],
                    [14.0, 15.0, 16.0],
                    [19.0, 20.0, 21.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [54.0,  63.0,  72.0],
                    [99.0, 108.0, 117.0],
                    [144.0, 153.0, 162.0]
                ]]],
                "bias": [9.0]
            }
        }
    },
    "test_conv2d_5": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": 1,
                "use_bias": false
            }
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [ -6.0,  -3.0, -1.0,  1.0, 8.0],
                    [ 9.0,  6.0,  7.0,  8.0, 19.0],
                    [19.0, 11.0, 12.0, 13.0, 29.0],
                    [29.0, 16.0, 17.0, 18.0, 39.0],
                    [64.0, 47.0, 49.0, 51.0, 78.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [144.0,  190.0,  160.0],
                    [230.0, 300.0, 250.0],
                    [224.0, 290.0, 240.0]
                ]]]
            }
        }
    },
    "test_conv2d_6": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": [1,1],
                "use_bias": false
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [ -6.0,  -3.0, -1.0,  1.0, 8.0],
                    [ 9.0,  6.0,  7.0,  8.0, 19.0],
                    [19.0, 11.0, 12.0, 13.0, 29.0],
                    [29.0, 16.0, 17.0, 18.0, 39.0],
                    [64.0, 47.0, 49.0, 51.0, 78.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [144.0,  190.0,  160.0],
                    [230.0, 300.0, 250.0],
                    [224.0, 290.0, 240.0]
                ]]]
            }
        }
    },
    "test_conv2d_7": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": [[1,1],[1,1]],
                "use_bias": false
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [ -6.0,  -3.0, -1.0,  1.0, 8.0],
                    [ 9.0,  6.0,  7.0,  8.0, 19.0],
                    [19.0, 11.0, 12.0, 13.0, 29.0],
                    [29.0, 16.0, 17.0, 18.0, 39.0],
                    [64.0, 47.0, 49.0, 51.0, 78.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [144.0,  190.0,  160.0],
                    [230.0, 300.0, 250.0],
                    [224.0, 290.0, 240.0]
                ]]]
            }
        }
    },
    "test_conv2d_8": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": [[0,1],[1,1]],
                "use_bias": false
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [ 9.0,  6.0,  7.0,  8.0, 19.0],
                    [19.0, 11.0, 12.0, 13.0, 29.0],
                    [29.0, 16.0, 17.0, 18.0, 39.0],
                    [64.0, 47.0, 49.0, 51.0, 78.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [144.0,  190.0,  160.0],
                    [224.0, 290.0, 240.0],
                    [198.0, 255.0, 210.0]
                ]]]
            }
        }
    },
    "test_conv2d_9": {
        "model": {
            "name": "Convolution2D",
            "args": {
                "kernel_size": 3,
                "out_channels": 1,
                "padding": [[1,1],[0,1]],
                "use_bias": false
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "kernel": [[[
                [0.0, -1.0, 0.0],
                [-1.0, 5.0, -1.0],
                [0.0, -1.0, 0.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0],
                [1.0, 1.0, 1.0, 1.0]
            ]]]
        },
        "static_keys": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },

        "results": {
            "eval": {
                "output": [[[
                    [ -3.0, -1.0,  1.0, 8.0],
                    [ 6.0,  7.0,  8.0, 19.0],
                    [11.0, 12.0, 13.0, 29.0],
                    [16.0, 17.0, 18.0, 39.0],
                    [47.0, 49.0, 51.0, 78.0]
                ]]]
            },
            "grad": {
                "kernel": [[[
                    [144.0,  160.0,  126.0],
                    [230.0, 250.0, 195.0],
                    [224.0, 240.0, 186.0]
                ]]]
            }
        }
    },
    "test_maxpool1d_1": {
        "model": {
            "name": "MaxPool1D",
            "args": {
                "kernel_size": 2
            }
        },
        "inputs": {
            "input": [[
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 2.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [11.0, 13.0]
                ]]
            },
            "grad": {
                "input":[[
                    [0.0, 1.0, 0.0, 2.0, 0.0]
                ]]
            }
        }
    },
    "test_maxpool1d_2": {
        "model": {
            "name": "MaxPool1D",
            "args": {
                "kernel_size": 3
            }
        },
        "inputs": {
            "input": [[
                [10.0, 11.0, 12.0, 13.0, 14.0]
            ]]
        },
        "output_grads": {
            "output": [[[2.0]]]
        },
        "results": {
            "eval": {
                "output": [[
                    [12.0]
                ]]
            },
            "grad": {
                "input":[[
                    [0.0, 0.0, 2.0, 0.0, 0.0]
                ]]
            }
        }
    },
    "test_maxpool1d_3": {
        "model": {
            "name": "MaxPool1D",
            "args": {
                "kernel_size": 2,
                "stride": 1
            }
        },
        "inputs": {
            "input": [[
                [10.0, 11.0, 12.0, 11.0, 14.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [5.0, 6.0, 7.0, 8.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [11.0, 12.0, 12.0, 14.0]
                ]]
            },
            "grad": {
                "input":[[
                    [0.0, 5.0, 13.0, 0.0, 8.0]
                ]]
            }
        }
    },
    "test_maxpool1d_4": {
        "model": {
            "name": "MaxPool1D",
            "args": {
                "kernel_size": 2,
                "padding": [0,1]
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "input": [[
                [10.0, 11.0, 10.0, 16.0, 14.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [4.0, 5.0, 6.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [11.0, 16.0, 14.0]
                ]]
            },
            "grad": {
                "input":[[
                    [0.0, 4.0, 0.0, 5.0, 6.0]
                ]]
            }
        }
    },
    "test_maxpool2d_1": {
        "model": {
            "name": "MaxPool2D",
            "args": {
                "kernel_size": 2
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0],
                [3.0, 4.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [6.0, 8.0],
                    [16.0, 18.0]
                ]]]
            },
            "grad": {
                "input":[[[
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 1.0, 0.0, 2.0, 0.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 3.0, 0.0, 4.0, 0.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0]
                ]]]
            }
        }
    },
    "test_maxpool2d_2": {
        "model": {
            "name": "MaxPool2D",
            "args": {
                "kernel_size": 2
            }
        },
        "inputs": {
            "input": [
                [
                    [[ 0.0,  1.0,  2.0,  3.0,  4.0],
                    [ 5.0,  6.0,  7.0,  8.0,  9.0],
                    [10.0, 11.0, 12.0, 12.0, 12.0],
                    [15.0, 16.0, 17.0, 18.0, 19.0],
                    [20.0, 21.0, 22.0, 23.0, 24.0]],

                    [[ 0.0,  1.0,  2.0,  3.0,  4.0],
                    [ 5.0,  6.0,  7.0,  8.0,  9.0],
                    [10.0, 11.0, 12.0, 12.0, 12.0],
                    [15.0, 16.0, 17.0, 18.0, 19.0],
                    [20, 21, 22, 23, 24]]
                ],
                [
                    [[ 0.0,  1,  2,  3,  4],
                    [ 5,  6,  7,  8,  9],
                    [10, 11, 12, 12, 12],
                    [15, 16, 17, 18, 19],
                    [20, 21, 22, 23, 24]],
                 
                    [[ 0.0,  1,  2,  3,  4],
                    [ 5,  6,  7,  8,  9],
                    [10, 11, 12, 12, 12],
                    [15, 16, 17, 18, 19],
                    [20, 21, 22, 23, 24]]
                ]
             ]
        },
        "output_grads": {
            "output": [
                
                [
                [
                    [1.0, 2.0],
                    [3.0, 4.0]
                ],

                [
                    [1.0, 2.0],
                    [3.0, 4.0]
                ]
                ],

                [[
                    [1.0, 2.0],
                    [3.0, 4.0]
                ],

                [
                    [1.0, 2.0],
                    [3.0, 4.0]
                ]
                ]
            
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [
                        [
                            [6.0, 8.0],
                            [16.0, 18.0]
                        ],
                        [
                            [6.0, 8.0],
                            [16.0, 18.0]
                        ]
                    ],
                    [
                        [
                            [6.0, 8.0],
                            [16.0, 18.0]
                        ],
                        [
                            [6.0, 8.0],
                            [16.0, 18.0]
                        ]
                    ]
                ]
            },
            "grad": {
                "input":[
                    [
                        [
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 1.0, 0.0, 2.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 3.0, 0.0, 4.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0]
                        ],
                        [
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 1.0, 0.0, 2.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 3.0, 0.0, 4.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0]
                        ]
                    ],
                    [
                        [
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 1.0, 0.0, 2.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 3.0, 0.0, 4.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0]
                        ],
                        [
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 1.0, 0.0, 2.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0],
                            [0.0, 3.0, 0.0, 4.0, 0.0],
                            [0.0, 0.0, 0.0, 0.0, 0.0]
                        ]
                    ]
                ]
            }
        }
    },
    "test_maxpool2d_3": {
        "model": {
            "name": "MaxPool2D",
            "args": {
                "kernel_size": 3
            }
        },
        "inputs": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "output_grads": {
            "output": [[[[2.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [12.0]
                ]]]
            },
            "grad": {
                "input":[[[
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 0.0, 2.0, 0.0, 0.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0]
                ]]]
            }
        }
    },
    "test_maxpool2d_4": {
        "model": {
            "name": "MaxPool2D",
            "args": {
                "kernel_size": 2,
                "stride": 1
            }
        },
        "inputs": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  5.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0, 3.0, 4.0],
                [5.0, 6.0, 7.0, 8.0],
                [9.0, 10.0, 11.0, 12.0],
                [13.0, 14.0, 15.0, 16.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [6.0,  6.0,  8.0,  9.0],
                    [11.0, 12.0, 13.0, 14.0],
                    [16.0, 17.0, 18.0, 19.0],
                    [21.0, 22.0, 23.0, 24.0]
                ]]]
            },
            "grad": {
                "input":[[[
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 3.0, 0.0, 3.0, 4.0],
                    [0.0, 5.0, 6.0, 7.0, 8.0],
                    [0.0, 9.0, 10.0, 11.0, 12.0],
                    [0.0, 13.0, 14.0, 15.0, 16.0]
                ]]]
            }
        }
    },
    "test_maxpool2d_5": {
        "model": {
            "name": "MaxPool2D",
            "args": {
                "kernel_size": 2,
                "padding": [[1,0],[0,1]]
            },
            "tuples": ["padding"]
        },
        "inputs": {
            "input": [[[
                [ 0.0,  1.0,  2.0,  3.0,  4.0],
                [ 5.0,  6.0,  7.0,  8.0,  9.0],
                [10.0, 11.0, 12.0, 13.0, 14.0],
                [15.0, 16.0, 17.0, 18.0, 19.0],
                [20.0, 21.0, 22.0, 23.0, 24.0]
            ]]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0, 3.0],
                [4.0, 5.0, 6.0],
                [7.0, 8.0, 9.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [1.0, 3.0, 4.0],
                    [11.0, 13.0, 14.0],
                    [21.0, 23.0, 24.0]
                ]]]
            },
            "grad": {
                "input":[[[
                    [0.0, 1.0, 0.0, 2.0, 3.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 4.0, 0.0, 5.0, 6.0],
                    [0.0, 0.0, 0.0, 0.0, 0.0],
                    [0.0, 7.0, 0.0, 8.0, 9.0]
                ]]]
            }
        }
    },
    "test_where_1": {
        "model": {
            "name": "Where"
        },
        "static_keys": {
            "cond": [[[
                [true, false, true],
                [false, true, false],
                [true, false, true]
            ]]]            
        },
        "inputs": {
            "input1": [[[
                [0.0, -1.0, 5.0],
                [-2.0, 5.0, -6.0],
                [8.0, -9.0, 12.0]
            ]]],
            "input2": [[
                [3.0, 3.0, 3.0]
            ]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0, 3.0],
                [4.0, 5.0, 6.0],
                [7.0, 8.0, 9.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [ 0,  3.0, 5.0],
                    [ 3.0,  5.0,  3.0],
                    [8.0, 3.0, 12.0]
                ]]]
            },
            "grad": {
                "input1": [[[
                    [1.0,  0.0,  3.0],
                    [0.0, 5.0, 0.0],
                    [7.0, 0.0, 9.0]
                ]]],
                "input2": [[
                    [4.0, 10.0, 6.0]
                ]]

            }
        }
    },
    "test_where_2": {
        "model": {
            "name": "Where"
        },
        "static_keys": {
            "cond": [[[
                [true, false, true],
                [false, true, false],
                [true, false, true]
            ]]]            
        },
        "inputs": {
            "input1": [[
                [-1.0],
                [5.0],
                [-9.0]
            ]],
            "input2": [[
                [3.0, 3.0, 3.0]
            ]]
        },
        "output_grads": {
            "output": [[[
                [1.0, 2.0, 3.0],
                [4.0, 5.0, 6.0],
                [7.0, 8.0, 9.0]
            ]]]
        },
        "results": {
            "eval": {
                "output": [[[
                    [ -1.0,  3.0, -1.0],
                    [ 3.0,  5.0,  3.0],
                    [-9.0, 3.0, -9.0]
                ]]]
            },
            "grad": {
                "input1": [[
                    [4.0],
                    [5.0],
                    [16.0]
                ]],
                "input2": [[
                    [4.0, 10.0, 6.0]
                ]]

            }
        }
    },
    "test_where_3": {
        "model": {
            "name": "Where"
        },
        "static_keys": {"cond": [true]},
        "inputs": {
            "input1": [[
                [-1.0],
                [5.0],
                [-9.0]
            ]],
            "input2": [[
                [3.0, 3.0, 3.0]
            ]]
        },
        "output_grads": {
            "output": [[
                [1.0, 2.0, 3.0],
                [4.0, 5.0, 6.0],
                [7.0, 8.0, 9.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [ -1.0,  -1.0, -1.0],
                    [ 5.0,  5.0,  5.0],
                    [-9.0, -9.0, -9.0]
                ]]
            },
            "grad": {
                "input1": [[
                    [6.0],
                    [15.0],
                    [24.0]
                ]],
                "input2": [[
                    [0.0, 0.0, 0.0]
                ]]

            }
        }
    },
    "test_where_4": {
        "model": {
            "name": "Where"
        },
        "static_keys": {"cond": [true]},
        "inputs": {
            "input1": [[
                [-1.0],
                [5.0],
                [-9.0]
            ]],
            "input2": 1.0
        },
        "output_grads": {
            "output": [[
                [1.0],
                [4.0],
                [7.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [ -1.0],
                    [ 5.0],
                    [-9.0]
                ]]
            },
            "grad": {
                "input1": [[
                    [1.0],
                    [4.0],
                    [7.0]
                ]],
                "input2": 0.0

            }
        }
    },
    "test_where_5": {
        "model": {
            "name": "Where"
        },
        "static_keys": {"cond": [false]},
        "inputs": {
            "input1": [[
                [-1.0],
                [5.0],
                [-9.0]
            ]],
            "input2": 1.0
        },
        "output_grads": {
            "output": [[
                [1.0],
                [4.0],
                [7.0]
            ]]
        },
        "results": {
            "eval": {
                "output": [[
                    [1.0],
                    [1.0],
                    [1.0]
                ]]
            },
            "grad": {
                "input1": [[
                    [0.0],
                    [0.0],
                    [0.0]
                ]],
                "input2": 12.0

            }
        }
    },
    "test_nn_1": {
        "model": {
            "name": "MLP",
            "args": {
                "dimensions": [2, 2, 2],
                "activations": ["relu", "relu", "buffer"]
            }
        },
        "inputs": {
            "input": [[1.0, 1]],
            "w0": [[0.5, 0.2], [0.1, 0.2]],
            "b0": [0.1, 0.1],
            "w1": [[0.3, -0.1], [0.2, 0.1]],
            "b1": [0.2, -0.1],
            "w2": [[0.1, -0.2], [0.1, 0.2]],
            "b2": [0.1, 0.0]
        },
        "output_grads": {
            "output": [[1.0, 2.0]]
        },
        "results": {
            "eval": {
                "output": [[0.151, -0.102]]
            },
            "grad": {
                "input": [[-0.057, -0.021]],
                "w0": [[-0.09, -0.06], [-0.09, -0.06]],
                "b0": [-0.09, -0.06],
                "w1": [[-0.21, 0], [-0.15, 0]],
                "b1": [-0.3, 0],
                "w2": [[0.51, 1.02], [0, 0]],
                "b2": [1.0, 2]
            }
        }
    },
    "test_buffer_1": {

        "model": {
            "name": "Buffer"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grads": {
            "output": [[1.0], [-1.0], [-2.0], [-3.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [2.0], [3.0], [4.0]]
            },
            "grad": {
                "input": [[1.0], [-1.0], [-2.0], [-3.0]]
            }
        }
    },

    "test_buffer_2": {

        "model": {
            "name": "Buffer"
        },
        "inputs": {
            "input": [[1.0, 2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0], [2.0, 0.0]]
            },
            "grad": {
                "input": [[1.0, 1.0], [1.0, 1.0]]
            }
        }
    },

    "test_buffer_3": {

        "model": {
            "name": "Buffer"
        },
        "inputs": {
            "input": [[1.0, 2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [2.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0], [2.0, 0.0]]
            },
            "grad": {
                "input": [[1.0, 2.0], [2.0, 1.0]]
            }
        }
    },

    "test_matmul_1": {

        "model": {
            "name": "MatrixMultiply"
        },
        "inputs": {
            "left": [[1.0, 2.0, 3.0, 5.0]],
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[34.0]]
        },
        "results": {
            "eval": {
                "output": [[34.0]]
            },
            "grad": {
                "left": [[34.0, 68.0, 102.0, 136.0]],
                "right": [[34.0], [68.0], [102.0], [170.0]]
            }
        }
    },
    "test_mult_1": {
        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [4.0], [9.0], [20.0]]
            },
            "grad": {
                "left": [[1.0], [4.0], [9.0], [30.0]], 
                "right": [[1.0], [4.0], [9.0], [24.0]]
            }
        }
    },

    "test_mult_2": {

        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0], [4.0], [6.0], [8.0]]
            },
            "grad": {
                "left": [34.0],
                "right": [[2.0], [4.0], [6.0], [10.0]]
            }
        }
    },

    "test_mult_3": {

        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },

        "output_grads": {
            "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
            },
            "grad": {
                "left": [[1.0,  8.0, 27.0], [4.0, 20.0, 54.0]],
                "right": [17.0,  58.0, 135.0]
            }
        }
    },

    "test_mult_4": {

        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 4.0], [3.0, 8.0], [5.0, 12.0]]
            },
            "grad": {
                "left": [35.0, 56.0],
                "right": [[1.0,  4.0], [3.0,  8.0], [5.0, 12.0]]
            }
        }
    },

    "test_mult_5": {

        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 4.0], [9.0, 16.0]], [[5.0, 12.0], [21.0, 32.0]]]
            },
            "grad": {
                "left": [[28.0, 32.0], [32.0, 28.0]],
                "right": [[[8.0,  14.0], [18.0, 20.0]], [[4.0, 6.0], [6.0, 4.0]]]
            }
        }
    },

    "test_mult_6": {

        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 4.0], [3.0, 8.0]], [[5.0, 12.0], [7.0, 16.0]]]
            },
            "grad": {
                "left": [60.0, 60.0],
                "right": [[[8.0, 14.0], [6.0, 10.0]], [[4.0, 6.0], [2.0, 2.0]]]
            }
        }
    },
    "test_mult_7": {
        "model": {
            "name": "Multiply"
        },
        "inputs": {
            "left": [[1.0],[2],[3]], 
            "right": [[2.0,3]]
        },
        "output_grads": {
            "output": [[1.0,1.0],[1.0,1.0],[1.0,1.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0,3.0],[4.0,6.0],[6.0,9.0]]
            },
            "grad": {
                "left": [[5.0],[5.0],[5.0]],
                "right": [[6.0,6.0]]
            }
        }
    },
    "test_div_1": {
        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [[1.0], [2.0], [3.0], [4.0]], 
            "denominator": [[1.0], [2.0], [3.0], [5.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [1.0], [1.0], [0.8]]
            },
            "grad": {
                "numerator": [[1.0], [1.0], [1.0], [1.2]],
                "denominator": [[-1.0], [-1.0], [-1.0], [-0.96]]
            }
        }
    },

    "test_div_2": {

        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [2.0], 
            "denominator": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0], [1.0], [0.66666666666666], [0.5]]
            },
            "grad": {
                "numerator": [4.25],
                "denominator": [[-2.0], [-1.0], [-0.66666666666667], [-0.625]]
            }
        }
    },

    "test_div_3": {

        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "denominator": [1.0, 2.0, 3.0]
        },

        "output_grads": {
            "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1.0, 1.0], [4.0, 2.5, 2.0]]
            },
            "grad": {
                "numerator": [[1.0,  2.0, 3.0], [4.0, 5.0, 6.0]],
                "denominator": [-17.0, -14.5, -15.0]
            }
        }
    },

    "test_div_4": {

        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [1.0, 2.0],
            "denominator": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1.0], [0.333333333333333, 0.5], [0.2, 0.333333333333333]]
            },
            "grad": {
                "numerator": [3.0, 3.0],
                "denominator": [[-1.0, -1.0], [-0.333333333333333, -0.5], [-0.2, -0.333333333333333]]
            }
        }
    },

    "test_div_5": {

        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [[1.0, 2.0], [3.0, 4.0]], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 1.0], [1.0, 1.0]], [[0.2, 0.333333333333333], [0.42857142857142855, 0.5]]]
            },
            "grad": {
                "numerator": [[8.8, 4.0], [2.2857142857142856, 1.375]],
                "denominator": [[[-8.0, -3.5], [-2.0, -1.25]], [[-0.16, -0.16666666666666666], [-0.12244897959183673, -0.0625]]]
            }
        }
    },
    "test_div_6": {
        "model": {
            "name": "Divide"
        },
        "inputs": {
            "numerator": [1.0, 2.0], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 1.0], [0.3333333333333333, 0.5]], [[0.2, 0.3333333333333333 ], [0.14285714285714285, 0.25]]]
            },
            "grad": {
                "numerator": [11.085714285714287, 5.375],
                "denominator": [[[-8.0, -3.5], [-0.6666666666666666 , -0.625]], [[-0.16, -0.16666666666666666],[-0.04081632653061224, -0.03125]]]
            }
        }
    },

    "test_sum_1": {
        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [6.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0], [4.0], [6.0], [9.0]]
            },
            "grad": {
                "left": [[1.0], [2.0], [3.0], [6.0]], 
                "right": [[1.0], [2.0], [3.0], [6.0]]
            }
        }
    },

    "test_sum_2": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": {
                "output": [[3.0], [4.0], [5.0], [6.0]]
            },
            "grad": {
                "left": [11.0],
                "right": [[1.0], [2.0], [3.0], [5.0]]
            }
        }
    },

    "test_sum_3": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },

        "output_grads": {
            "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0, 4.0, 6.0], [5.0, 7.0, 9.0]]
            },
            "grad": {
                "left": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
                "right": [5.0, 14.0, 27.0]
            }
        }
    },

    "test_sum_4": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0, 4.0], [4.0, 6.0], [6.0, 8.0]]
            },
            "grad": {
                "left": [9.0, 12.0],
                "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
            }
        }
    },

    "test_sum_5": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[2.0, 4.0], [6.0, 8.0]], [[6.0, 8.0], [10.0, 12.0]]]
            },
            "grad": {
                "left": [[12.0, 10.0], [8.0, 6.0]],
                "right": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
            }
        }
    },

    "test_sum_6": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[2.0, 4.0], [4.0, 6.0]], [[6.0, 8.0], [8.0, 10.0]]]
            },
            "grad": {
                "left": [20.0, 16.0],
                "right": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
            }
        }
    },
    "test_sum_7": {

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[[[[2.0,3,4]]]]], 
            "right": [[[2.0]],[[3]],[[4]]]
        },

        "output_grads": {
            "output": [[[[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[4.0, 5, 6]], [[5, 6, 7]], [[6, 7, 8]]]]]
            },
            "grad": {
                "left": [[[[[3.0,3,3.0]]]]],
                "right":  [[[3.0]],[[3]],[[3]]]
            }
        }
    },
    "test_sum_8": {
        "NOTE": "Input shape is (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2) and rhs shape is (3,2,1) and expected shape is (1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2). This is a test for testing broadcast algorithm rather than a numeric test ",

        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[[[[[[[[[[[1.0, 1.0],[1.0, 1.0]]]]]]]]]]]],
            "right": [[[1.0], [1.0]], [[1.0], [1.0]], [[1.0], [1.0]]]
        },

        "output_grads": {
            "output": [[[[[[[[[[[[1.0, 1.0], [1.0, 1.0]], [[1.0, 1.0], [1.0, 1.0]], [[1.0, 1.0], [1.0, 1.0]]]]]]]]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[[[[[[[[2.0, 2.0], [2.0, 2.0]], [[2.0, 2.0], [2.0, 2.0]], [[2.0, 2.0], [2.0, 2.0]]]]]]]]]]]]
            },
            "grad": {
                "left": [[[[[[[[[[[[3.0, 3.0],[3.0, 3.0]]]]]]]]]]]],
                "right":  [[[2.0], [2.0]], [[2.0], [2.0]], [[2.0], [2.0]]]
            }
        }
    },
    "test_sum_9": {
        "NOTE": "Input shape is (2, 2, 1, 1, 1, 1) and rhs shape is (2, 1, 3) and expected shape is (2, 2, 1, 2, 1, 3). This is a test for testing broadcast algorithm rather than a numeric test ",
        
        "model": {
            "name": "Add"
        },
        "inputs": {
            "left": [[[[[[1.0]]]],[[[[1.0]]]]], [[[[[1.0]]]], [[[[1.0]]]]]],
            "right": [[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]
        },

        "output_grads": {
            "output": [[[[[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]], [[[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]]], [[[[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]], [[[[1.0, 1.0, 1.0]], [[1.0, 1.0, 1.0]]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[[2.0, 2.0, 2.0]], [[2.0, 2.0, 2.0]]]], [[[[2.0, 2.0, 2.0]], [[2.0, 2.0, 2.0]]]]], [[[[[2.0, 2.0, 2.0]], [[2.0, 2.0, 2.0]]]], [[[[2.0, 2.0, 2.0]], [[2.0, 2.0, 2.0]]]]]]
            },
            "grad": {
                "left": [[[[[[6.0]]]],[[[[6.0]]]]], [[[[[6.0]]]], [[[[6.0]]]]]],
                "right":  [[[4.0, 4.0, 4.0]], [[4.0, 4.0, 4.0]]]
            }
        }
    },
    "test_sub_1": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [6.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [0.0], [0.0], [-1.0]]
            },
            "grad": {
                "left": [[1.0], [2.0], [3.0], [6.0]], 
                "right": [[-1.0], [-2.0], [-3.0], [-6.0]]
            }
        }
    },

    "test_sub_2": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [0.0], [-1.0], [-2.0]]
            },
            "grad": {
                "left": [11.0],
                "right": [[-1.0], [-2.0], [-3.0], [-5.0]]
            }
        }
    },

    "test_sub_3": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },

        "output_grads": {
            "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0, 0.0], [3.0, 3.0, 3.0]]
            },
            "grad": {
                "left": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
                "right": [-5.0, -14.0, -27.0]
            }
        }
    },

    "test_sub_4": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0], [-2.0, -2.0], [-4.0, -4.0]]
            },
            "grad": {
                "left": [9.0, 12.0],
                "right": [[-1.0, -2.0], [-3.0, -4.0], [-5.0, -6.0]]
            }
        }
    },

    "test_sub_5": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[0.0, 0.0], [0.0, 0.0]], [[-4.0, -4.0], [-4.0, -4.0]]]
            },
            "grad": {
                "left": [[12.0, 10.0], [8.0, 6.0]],
                "right": [[[-8.0, -7.0], [-6.0, -5.0]], [[-4.0, -3.0], [-2.0, -1.0]]]
            }
        }
    },

    "test_sub_6": {

        "model": {
            "name": "Subtract"
        },
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[0.0, 0.0], [-2.0, -2.0]], [[-4.0, -4.0], [-6.0, -6.0]]]
            },
            "grad": {
                "left": [20.0, 16.0],
                "right": [[[-8.0, -7.0], [-6.0, -5.0]], [[-4.0, -3.0], [-2.0, -1.0]]]
            }
        }
    },

    "test_power_1": {

        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [[1.0], [2.0], [3.0], [4.0]], 
            "exponent": [[1.0], [2.0], [3.0], [5.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [4.0], [27.0], [1024.0]]
            },
            "grad": {
                "base": [[1.0], [8.0], [81.0], [7680.0]],
                "exponent": [[0.0], [5.545177444479562e+00], [8.898759538211689e+01], [8.517392554720607e+03]]
            }
        }
    },

    "test_power_2": {

        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [2.0], 
            "exponent": [[1.0], [2.0], [3.0], [4.0]]
        },

        "output_grads": {
            "output": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0], [4.0], [8.0], [16.0]]
            },
            "grad": {
                "base": [205.0],
                "exponent": [[1.3862943611198906], [5.545177444479562], [16.635532333438686 ], [55.451774444795625]]
            }
        }
    },

    "test_power_3": {

        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "exponent": [1.0, 2.0, 3.0]
        },

        "output_grads": {
            "output": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 4.0,  27.0], [4.0,  25.0, 216.0]]
            },
            "grad": {
                "base": [[1.0, 16.0, 243.0], [4.0, 100, 1944.0]],
                "exponent": [22.18070977791825,  413.4498329974842 , 7233.323602505028]
            }
        }
    },

    "test_power_4": {

        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0,  4.0], [1.0, 16.0], [1.0, 64.0]]
            },
            "grad": {
                "base": [35.0, 1288.0],
                "exponent": [[0.0, 5.545177444479562], [0.0, 44.3614195558365], [0.0, 266.168517335019]]
            }
        }
    },

    "test_power_5": {

        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [[1.0, 2.0], [3.0, 4.0]], 
            "exponent": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0000e+00, 4.0000e+00], [2.7000e+01, 2.5600e+02]], [[1.0000e+00, 6.4000e+01], [2.1870e+03, 6.5536e+04]]]
            },
            "grad": {
                "base": [[28.0, 604.000], [10368.0, 132352.0]],
                "exponent": [[[0.0, 19.408121055678468], [177.97519076423379, 1774.4567822334600]], [[0.0, 133.08425866750949], [4805.3301506343123, 90852.187250353149]]]
            }
        }
    },

    "test_power_6": {
        "model": {
            "name": "Power"
        },
        "inputs": {
            "base": [1.0, 2.0], 
            "exponent": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 4.0], [1.0, 16.0]], [[1.0, 64.0], [1.0, 256.0]]]
            },
            "grad": {
                "base": [60.0, 1788.0],
                "exponent": [[[0.0, 19.408121055678468], [0.0, 55.451774444795625]], [[0.0, 133.0842586675095], [0.0, 177.445678223346]]]
            }
        }
    },

    "test_exp": {
        "model": {
            "name": "Exponential"
        },
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },

        "output_grads": {
            "output": [[4.0, 3.0], [2.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[2.718281828459045,  7.38905609893065 ], [20.085536923187668, 54.598150033144236]]
            },
            "grad": {
                "input": [[10.87312731383618 , 22.16716829679195 ], [40.171073846375336, 54.598150033144236]]
            }
        }
    },
    "test_sqrt_1": {
        "model": {
            "name": "Sqrt"
        },
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0,  1.4142135623730950488], [1.732050807568877293527446341505872, 2.0]]
            },
            "grad": {
                "input": [[0.5 , 0.35355339059327373], [0.2886751345948129, 0.25]]
            }
        }
    },
    "test_sqrt_2": {
        "model": {
            "name": "Sqrt"
        },
        "inputs": {
            "input": [[[[4.0, 16.0], [25.0, 100.0]]]]
        },

        "output_grads": {
            "output": [[[[3.0, 2.0], [5.0, 6.0]]]]
        },
        "results": {
            "eval": {
                "output":  [[[[2.0,  4.0], [5.0, 10.0]]]]
            },
            "grad": {
                "input": [[[[0.75 , 0.25], [0.5, 0.3]]]]
            }
        }
    },
    "test_sqrt_3": {
        "model": {
            "name": "Sqrt"
        },
        "inputs": {
            "input": [10000.0]
        },

        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output": [100.0]
            },
            "grad": {
                "input": [0.005]
            }
        }
    },

    "test_abs": {

        "model": {
            "name": "Absolute"
        },
        "inputs": {
            "input": [[-1.0, 0.0], [1.0, -2.0]]
        },

        "output_grads": {
            "output": [[-2.0, -1.0], [0.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 0.0], [1.0, 2.0]]
            },
            "grad": {
                "input": {
                    "jax": [[2.0, -1.0], [0.0, -1.0]],
                    "torch": [[2.0, 0.0], [0.0, -1.0]],
                    "numpy": [[2.0, 0.0], [0.0, -1.0]]
                }
            }
        }
    },

    "test_sin": {
        "model": {
            "name": "Sine"
        },
        "inputs": {
            "input": [[0.5235987755982988, 1.0471975511965976], [1.0, 45.0], [90.0, 145.0]]
        },
        "output_grads": {
            "output":[[6.0, 5.0], [4.0, 3.0], [2.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.49999999999999994, 0.8660254037844386], [0.8414709848079,  0.85090352453412 ], [0.89399666360056, 0.46774516204513]]
            },
            "grad": {
                "input": [[5.196152422706632, 2.5000000000000004], [ 2.16120922347256,  1.57596596645319], [-0.89614723225834,  0.8838633737085 ]]
            }
        }
    },

    "test_cos": {
        "model": {
            "name": "Cosine"
        },
        "inputs": {
            "input": [[0.5235987755982988, 1.0471975511965976], [1.0, 45.0], [90.0, 145.0]]
        },
        "output_grads": {
            "output":[[6.0, 5.0], [4.0, 3.0], [2.0, 1.0]]
        },
        "results": {
            "eval": {
                "output":[[ 0.8660254037844387,  0.5000000000000001], [ 0.54030230586814,  0.52532198881773], [-0.44807361612917,  0.8838633737085 ]]
            },
            "grad": {
                "input": [[-2.9999999999999996, -4.330127018922193], [-3.36588393923159, -2.55271057360236], [-1.78799332720112, -0.46774516204513]]
            }
        }
    },

    "test_concat": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3
            }
        },
        "inputs": {
            "input1": [1.0, 2.0, 3.0, 4.0],
            "input2": [5.0, 6.0, 7.0, 8.0],
            "input3": [9.0, 10.0, 11.0, 12.0]
        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0]
            },
            "grad": {
                "input1": [-1.0, -2.0, -3.0, -4.0],
                "input2": [-5.0, -6.0, 7.0, 8.0],
                "input3": [9.0, 10.0, 11.0, 12.0]
            }
        }
    },

    "test_flatten": {
        "model": {
            "name": "Flatten"
        },
        "inputs": {
            "input": [[1.0, 2.0, 3.0, 4.0],[5.0, 6.0, 7.0, 8.0]]
        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
            },
            "grad": {
                "input": [[-1.0, -2.0, -3.0, -4.0], [-5.0, -6.0, 7.0, 8.0]]
            }
        }
    },
    
    "test_flatten2": {
        "model": {
            "name": "Flatten"
        },
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grads": {
            "output": [-1.0, -2.0, 3.0, -4.0, -5.0, -6.0, 7.0, 8.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
            },
            "grad": {
                "input": [[[-1.0, -2.0], [3.0, -4.0]], [[-5.0, -6.0], [7.0, 8.0]]]
            }
        }
    },

    "test_flatten3": {
        "model": {
            "name": "Flatten",
            "args": {
                "start_dim": 1,
                "end_dim": -1
            }
        },
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grads": {
            "output": [[-1.0, -2.0, 3.0, -4.0], [-5.0, -6.0, 7.0, 8.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0, 3.0, 4.0],[5.0, 6.0, 7.0, 8.0]]
            },
            "grad": {
                "input": [[[-1.0, -2.0], [3.0, -4.0]], [[-5.0, -6.0], [7.0, 8.0]]]
            }
        }
    },

    "test_flatten4": {
        "model": {
            "name": "Flatten",
            "args": {
                "start_dim": -1,
                "end_dim": -1
            }
        },
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grads": {
            "output": [[[-1.0, -2.0], [3.0, -4.0]], [[-5.0, -6.0], [7.0, 8.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
            },
            "grad": {
                "input": [[[-1.0, -2.0], [3.0, -4.0]], [[-5.0, -6.0], [7.0, 8.0]]]
            }
        }
    },

    "test_flatten5": {
        "model": {
            "name": "Flatten",
            "args": {
                "start_dim": 1,
                "end_dim": 2
            }
        },
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grads": {
            "output": [[-1.0, -2.0, 3.0, -4.0], [-5.0, -6.0, 7.0, 8.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]]
            },
            "grad": {
                "input": [[[-1.0, -2.0], [3.0, -4.0]], [[-5.0, -6.0], [7.0, 8.0]]]
            }
        }
    },


    "test_transpose": {

        "model": {
            "name": "Transpose"
        },
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },

        "output_grads": {
            "output": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 5.0], [3.0, 7.0]], [[2.0, 6.0], [4.0, 8.0]]]
            },
            "grad": {
                "input": [[[8.0, 4.0], [6.0, 2.0]], [[7.0, 3.0], [5.0, 1.0]]]
            }
        }
    },
    "test_transpose_axis_1": {

        "model": {
            "name": "Transpose",
            "args": {
                "axes": [0,2,1]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[1.0, 3.0], [2.0, 4.0]], [[1.0, 3.0], [2.0, 4.0]], [[1.0, 3.0], [2.0, 4.0]]]
        },

        "output_grads": {
            "output": [[[1.0, 1.0], [1.0, 1.0]], [[2.0, 2.0], [2.0, 2.0]], [[3.0, 3.0], [3.0, 3.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 2.0], [3.0, 4.0]], [[1.0, 2.0], [3.0, 4.0]], [[1.0, 2.0], [3.0, 4.0]]]
            },
            "grad": {
                "input": [[[1.0, 1.0], [1.0, 1.0]], [[2.0, 2.0], [2.0, 2.0]], [[3.0, 3.0], [3.0, 3.0]]]
            }
        }
    },

    "test_transpose_axis_2": {

        "model": {
            "name": "Transpose",
            "args": {
                "axes": [0]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [3.0]
        },

        "output_grads": {
            "output": [7.0]
        },
        "results": {
            "eval": {
                "output": [3.0]
            },
            "grad": {
                "input": [7.0]
            }
        }
    },
    "test_transpose_axis_3": {

        "model": {
            "name": "Transpose",
            "args": {
                "axes": [1,4,3,2,0]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[[[2.0]]]], [[[[3.0]]]]]
        },

        "output_grads": {
            "output": [[[[[4.0, 5.0]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[2.0, 3.0]]]]]
            },
            "grad": {
                "input": [[[[[4.0]]]], [[[[5.0]]]]]
            }
        }
    },
    "test_transpose_axis_4": {

        "model": {
            "name": "Transpose",
            "args": {
                "axes": [2,4,3,0,1]
            },
        "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[[[2.0]]]], [[[[3.0]]]]]
        },

        "output_grads": {
            "output": [[[[[4.0], [5.0]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[2.0], [3.0]]]]]
            },
            "grad": {
                "input": [[[[[4.0]]]], [[[[5.0]]]]]
            }
        }
    },
    "test_concat_1_last_axis": {
        "model": {
            "name": "Concat",
            "args": {
                "axis": -1,
                "n": 2
            
            }
        },
        "inputs": {
            "input1": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ], 
            "input2": [[1.0], [2.0], [3.0]]
        },

        "output_grads": {
            "output": [
                [1.0, 2.0, 3.0], 
                [4.0, 5.0, 6.0], 
                [7.0, 8.0, 9.0]
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [1.0, 2.0, 1.0], 
                    [3.0, 4.0, 2.0], 
                    [5.0, 6.0, 3.0]
                ]
            },
            "grad": {
                "input1": [[1.0, 2.0], [4.0, 5.0], [7.0, 8.0]], 
                "input2": [[3.0], [6.0], [9.0]]
            }
        }
    },

    "test_concat_2_last_axis": {

        "model": {
            "name": "Concat",
            "args": {
                "n": 2,
                "axis": -1
            }
        },
        "inputs": {
            "input1": [
                [[1.0, 2.0], 
                [3.0, 4.0]], 
                [[5.0, 6.0], 
                [7.0, 8.0]]
            ], 
            "input2": [
                [[1.0, 2.0, 3.0, 4.0], 
                [3.0, 4.0, 5.0, 6.0]], 
                [[5.0, 6.0, 7.0, 8.0], 
                [7.0, 8.0, 9.0, 10.0]]
            ]
        },

        "output_grads": {
            "output": [
                [[1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 
                [1.0, 2.0, 1.0, 2.0, 1.0, 2.0]], 
                [[2.0, 3.0, 2.0, 3.0, 2.0, 3.0], 
                [3.0, 2.0, 3.0, 2.0, 3.0, 2.0]]
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [[1.0, 2.0, 1.0, 2.0, 3.0, 4.0], 
                    [3.0, 4.0, 3.0, 4.0, 5.0, 6.0]], 
                    [[5.0, 6.0, 5.0, 6.0, 7.0, 8.0], 
                    [7.0, 8.0, 7.0, 8.0, 9.0, 10.0]]
                ]
            },
            "grad": {
                "input1": [[[1.0, 2.0], 
                            [1.0, 2.0]], 
                            [[2.0, 3.0], 
                            [3.0, 2.0]]], 
                "input2": [[[1.0, 2.0, 1.0, 2.0], 
                            [1.0, 2.0, 1.0, 2.0]], 
                            [[2.0, 3.0, 2.0, 3.0], 
                            [3.0, 2.0, 3.0, 2.0]]]
            }
        }
    },

    "test_tensor_slice_1": {

        "model": {
            "name": "TensorSlice",
            "args": {
                "start": 0,
                "stop": 1,
                "step": null
            }
        },
        "inputs": {
            "input": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ]
        },

        "output_grads": {
            "output": [
                [5.0, 6.0]
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [1.0, 2.0]
                ]
            },
            "grad": {
                "input": [[5.0, 6.0], 
                          [0.0, 0.0], 
                          [0.0, 0.0]]
            }
        }
    },

    "test_tensor_slice_2": {

        "model": {
            "name": "TensorSlice",
            "args": {
                "start": 0,
                "stop": 2,
                "step": null
            }
        },
        "inputs": {
            "input": [
                [[1.0, 2.0]], 
                [[3.0, 4.0]], 
                [[5.0, 6.0]]
            ]
        },

        "output_grads": {
            "output": [
                [[3.0, 0.0]],
                [[2.0, 1.0]]
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [[1.0, 2.0]],
                    [[3.0, 4.0]]
                ]
            },
            "grad": {
                "input": [
                    [[3.0, 0.0]], 
                    [[2.0, 1.0]], 
                    [[0.0, 0.0]]
                ]
            }
        }
    },

    "test_tanh_1": {

        "model": {
            "name": "Tanh"
        },
        "inputs": {
            "input": [[10.0]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.9999999958776928]]
            },
            "grad": {
                "input": [[0.000000008244614383]]
            }
        }
    },

    "test_tanh_2": {

        "model": {
            "name": "Tanh"
        },
        "inputs": {
            "input": [[30.0]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[1]]
            },
            "grad": {
                "input": [[0.0]]
            }
        }
    },

    "test_tanh_3": {

        "model": {
            "name": "Tanh"
        },
        "inputs": {
            "input": [[2.220446049250313e-16]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0000000000000002220446049250313]]
            },
            "grad": {
                "input": [[0.9999999999999999999999999999999507]]
            }
        }
    },

    "test_tanh_4": {

        "model": {
            "name": "Tanh"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.76159415595576488811945828, -0.964027580075816883946413724], [0.9640275800758168839464137, 0.0]]
            },
            "grad": {
                "input": [[0.419974341614026069394496739, 0.0706508248531644656862477], [0.0706508248531644656862476, 1.0]]
            }
        }
    },

    "test_tanh_5": {

        "model": {
            "name": "Tanh"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 0.0], [3.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.76159415595576488811945828, -0.964027580075816883946413724], [0.9640275800758168839464137, 0.0]]
            },
            "grad": {
                "input": [[0.419974341614026069394496739, 0.0], [0.2119524745594934, 1.0]]
            }
        }
    },
    

    "test_sigmoid_1": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[20.0]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.9999999979388464]]
            },
            "grad": {
                "input": [[0.00000000206115359575164583720704]]
            }
        }
    },

    "test_sigmoid_2": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.73105857863000487925115924, 0.1192029220221175559402708587], [0.8807970779778824440597, 0.5]]
            },
            "grad": {
                "input": [[0.1966119332414818525374, 0.1049935854035065173486], [0.1049935854035065173486, 0.25]]
            }
        }
    },

    "test_sigmoid_3": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[-30.0]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0000000000000936]]
            },
            "grad": {
                "input": [[0.00000000000009359999999999123904]]
            }
        }
    },

    "test_sigmoid_4": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[919.78546867]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0]]
            },
            "grad": {
                "input": [[0.0]]
            }
        }
    },

    "test_sigmoid_5": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[-919.78546867]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0]]
            },
            "grad": {
                "input": [[0.0]]
            }
        }
    },

    "test_sigmoid_6": {

        "model": {
            "name": "Sigmoid"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.5], [1.0, 0.0]]
        },
        "results": {
            "eval": {
                "output": [[0.73105857863000487925115924, 0.1192029220221175559402708587], [0.8807970779778824440597, 0.5]]
            },
            "grad": {
                "input": [[0.1966119332414818525374, 0.1574903781052598], [0.1049935854035065173486, 0.0]]
            }
        }
    },
    
    "test_softplus_1": {

        "model": {
            "name": "Softplus"
        },
        "inputs": {
            "input": [[2.0]]
        },

        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output":  [[2.1269280110429725]]
            },
            "grad": {
                "input": [[0.8807970779778824]]
            }
        }
    },

    "test_softplus_2": {

        "model": {
            "name": "Softplus"
        },
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },

        "output_grads": {
            "output": [[1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output":  [[0.6931471805599453, 2.1269280110429725, 0.0000000000000935]]
            },
            "grad": {
                "input": [[0.5, 0.8807970779778824, 0.0000000000000936]]
            }
        }
    },

    "test_softplus_3": {

        "model": {
            "name": "Softplus"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output":  [[1.313261687518222834049, 0.1269280110429724964437], [2.126928011042972496444, 0.6931471805599453094172]]
            },
            "grad": {
                "input":  [[0.7310585786300048792512, 0.1192029220221175559403], [0.8807970779778824440597, 0.5]]
            }
        }
    },

    "test_softplus_4": {

        "model": {
            "name": "Softplus"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },

        "output_grads": {
            "output": [[2.0, 1.0], [1.0, 10.2]]
        },
        "results": {
            "eval": {
                "output":  [[1.313261687518222834049, 0.1269280110429724964437], [2.126928011042972496444, 0.6931471805599453094172]]
            },
            "grad": {
                "input":  [[1.4621171572600098, 0.1192029220221175559403], [0.8807970779778824440597, 5.1]]
            }
        }
    },

    "test_permute_tensor_1": {
        "model": {
            "name": "PermuteTensor"
        },
        "inputs": {
            "input": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ]
        },
        "static_keys": {
            "indices": [2, 0, 1]
        },
        "output_grads": {
            "output": [
                [-1.0, 3.0], 
                [5.0, 2.0], 
                [4.0, 1.0]
            ]
        },
        "results": {
            "eval": {
                "output":  [
                    [5.0, 6.0], 
                    [1.0, 2.0], 
                    [3.0, 4.0]
                ]
            },
            "grad": {
                "input":  [
                    [5.0, 2.0], 
                    [4.0, 1.0], 
                    [-1.0, 3.0]
                ]
            }
        }
    },
    "test_permute_tensor_2": {
        "model": {
            "name": "PermuteTensor"
        },
        "inputs": {
            "input": [
                [[1.0, 2.0]], 
                [[3.0, 4.0]], 
                [[5.0, 6.0]]
            ]
        },
        "static_keys": {
            "indices": [0, 2, 1]
        },
        "output_grads": {
            "output": [
                [[3.0, 0.0]], 
                [[4.0, 1.0]], 
                [[5.0, 2.0]]
            ]
        },
        "results": {
            "eval": {
                "output": [
                    [[1.0, 2.0]], 
                    [[5.0, 6.0]], 
                    [[3.0, 4.0]]
                ]
            },
            "grad": {
                "input":[
                    [[3.0, 0.0]], 
                    [[5.0, 2.0]], 
                    [[4.0, 1.0]]
                ]
            }
        }
    },
    "test_squared_error_1": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1.0], [2], [3], [4]],
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },

        "output_grads": {
            "output": [[1.0], [1], [1], [1]]
        },
        "results": {
            "eval": {
                "output":  [[0.09], [1.21], [3.61], [7.29]]
            },
            "grad": {
                "input":  [[0.6], [2.20], [3.80], [5.40]],
                "target":  [[-0.6], [-2.20], [-3.80], [-5.40]]
            }
        }
    },
    "test_squared_error_2": {

        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1.0], [-1000000.0], [0.000000000001], [-1.5]],
            "target": [[1.0], [-1000000.0], [0.000000000001], [-1.5]]
        },

        "output_grads": {
            "output": [[1.0], [1], [1], [1]]
        },
        "results": {
            "eval": {
                "output":  [[0.0], [0.0], [0.0], [0.0]]
            },
            "grad": {
                "input":  [[0.0], [0.0], [0.0], [0.0]],
                "target":  [[0.0], [0.0], [0.0], [0.0]]
            }
        }
    },
    "test_squared_error_3": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[0.1, 0.2], [1000000000.0, 0.0000000001]],
            "target": [[0.1, 0.2], [0.0000000001, 1000000000.0]]
        },

        "output_grads": {
            "output": [[1.0, 1], [1, 1]]
        },
        "results": {
            "eval": {
                "output":  [[0.0, 0.0], [999999999999999999.8, 999999999999999999.8]]
            },
            "grad": {
                "input":  [[0.0, 0.0], [1999999999.9999999998, -1999999999.9999999998]],
                "target":  [[0.0, 0.0], [-1999999999.9999999998, 1999999999.9999999998]]
            }
        }
    },
    "test_squared_error_4": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1.0, 2], [3, 4], [5, 6]],
            "target": [[2.0, 3], [3, 4], [4, 5]]
        },

        "output_grads": {
            "output": [[1.0, 1], [1, 1], [1, 1]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1.0], [0.0, 0.0], [1.0, 1.0]]
            },
            "grad": {
                "input":  [[-1.999999999999999999998, -1.999999999999999999998], [0.0, 0.0], [1.999999999999999999998, 1.999999999999999999998]],
                "target":  [[1.999999999999999999998, 1.999999999999999999998], [0.0, 0.0], [-1.999999999999999999998, -1.999999999999999999998]]
            }
        }
    },
    "test_hinge_loss_1": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[2.0], [0.25]]
        },

        "static_keys": {
            "target": [[1], [-1]]
        },

        "output_grads": {
            "output": [[1.0], [1]]
        },
        "results": {
            "eval": {
                "output":  [[0.0], [1.25]]
            },
            "grad": {
                "input":  [[0.0], [1.0]]
            }
        }
    },
    "test_hinge_loss_2": {

        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[1.0], [-1.0]]
        },

        "static_keys": {
            "target": [[1], [-1]]
        },

        "output_grads": {
            "output": [[1.0], [1]]
        },
        "results": {
            "eval": {
                "output":  [[0.0], [0.0]]
            },
            "grad": {
                "input":  [[-0.5], [0.5]]
                
            }
        }
    },
    "test_hinge_loss_3": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[0.0], [0.0]]
        },
        "static_keys": {
            "target": [[1], [-1]]
        },
        "output_grads": {
            "output": [[1.0], [1]]
        },
        "results": {
            "eval": {
                "output":  [[1.0], [1.0]]
            },
            "grad": {
                "input":  [[-1.0], [1.0]]          
            }
        }
    },
    "test_absolute_error_1": {
        "model": {
            "name": "AbsoluteError"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]], 
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "output_grads": {
            "output": [[1.0], [1.0], [1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.3], [1.1], [1.9], [2.7]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0], [1.0], [1.0], [1.0]],
                    "torch": [[1.0], [1.0], [1.0], [1.0]],
                    "numpy": [[1.0], [1.0], [1.0], [1.0]]
                }, 
                "target": {
                    "jax": [[-1.0], [-1.0], [-1.0], [-1.0]],
                    "torch": [[-1.0], [-1.0], [-1.0], [-1.0]],
                    "numpy": [[-1.0], [-1.0], [-1.0], [-1.0]]
                }
                }
        }
    },
    "test_absolute_error_2": {
        "model": {
            "name": "AbsoluteError"
        },
        "inputs": {
            "input": [[1.0], [-1000000.0], [0.000000000001], [-1.5]], 
            "target": [[1.0], [-1000000.0], [0.000000000001], [-1.5]]
        },
        "output_grads": {
            "output": [[1.0], [1.0], [1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [0.0], [0.0], [0.0]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0], [1.0], [1.0], [1.0]],
                    "torch": [[0.0], [0.0], [0.0], [0.0]],
                    "numpy": [[0.0], [0.0], [0.0], [0.0]]
                }, 
                "target": {
                    "jax": [[-1.0], [-1.0], [-1.0], [-1.0]],
                    "torch": [[0.0], [0.0], [0.0], [0.0]],
                    "numpy": [[0.0], [0.0], [0.0], [0.0]]
                }
                }
        }
    },

    "test_absolute_error_3": {
        "model": {
            "name": "AbsoluteError"
        },
        "inputs": {
            "input": [[0.1, 0.2], [1000000000.0, 0.0000000001]], 
            "target": [[0.1, 0.2], [0.0000000001, 1000000000.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0], [999999999.9999999999, 999999999.9999999999]]
            },
            "grad": {
                "input": {
                   "jax": [[1.0, 1.0], [1.0, -1.0]],
                   "torch": [[0.0, 0.0], [1.0, -1.0]],
                   "numpy": [[0.0, 0.0], [1.0, -1.0]]
                }, 
               "target": {
                   "jax": [[-1.0, -1.0], [-1.0, 1.0]],
                   "torch": [[0.0, 0.0], [-1.0, 1.0]],
                   "numpy": [[0.0, 0.0], [-1.0, 1.0]]
               }
               }
        }
    },

    "test_absolute_error_4": {
        "model": {
            "name": "AbsoluteError"
        },
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
            "target": [[2.0, 3.0], [3.0, 4.0], [4.0, 5.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 1.0], [0.0, 0.0], [1.0, 1.0]]
            },
            "grad": {
                "input": {
                    "jax": [[-1.000000000000000000002, -1.000000000000000000002], [1.0, 1.0], [1.000000000000000000002, 1.000000000000000000002]],
                    "torch": [[-1.000000000000000000002, -1.000000000000000000002], [0.0, 0.0], [1.000000000000000000002, 1.000000000000000000002]],
                    "numpy": [[-1.000000000000000000002, -1.000000000000000000002], [0.0, 0.0], [1.000000000000000000002, 1.000000000000000000002]]
                }, 
                "target": {
                    "jax": [[1.000000000000000000002, 1.000000000000000000002], [-1.0, -1.0], [-1.000000000000000000002, -1.000000000000000000002]],
                    "torch": [[1.000000000000000000002, 1.000000000000000000002], [0.0, 0.0], [-1.000000000000000000002, -1.000000000000000000002]],
                    "numpy": [[1.000000000000000000002, 1.000000000000000000002], [0.0, 0.0], [-1.000000000000000000002, -1.000000000000000000002]]
                }
                }
        }
    },

    "test_cross_entropy_1": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input": [[1.0, 1.0, 1.0, 1.0]]
        },
        "static_keys": {
            "target": [2]
        },
        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output":  [1.3862943611198906]
            },
            "grad": {
                "input":  [[0.25, 0.25, -0.75, 0.25]]      
            }
        }
    },

    "test_cross_entropy_2": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input": [[1000.0, 0.0], [0.0, 1000.0]]
        },
        "static_keys": {
            "target": [0, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output":  [0.0, 1000.0]
            },
            "grad": {
                "input":  [[0.0, 0.0], [-1.0, 1.0]]
            }
        }
    },

    "test_cross_entropy_3": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input": [[1.0, 1.0], [0.0, 1000.0]]
        },
        "static_keys": {
            "target": [0, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output":  [0.6931471805599453, 1000]
            },
            "grad": {
                "input":  [[-0.5, 0.5], [-1.0, 1.0]]
            }
        }
    },
    "test_cross_entropy_4": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [1, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.0, 2.3025850929940457]
            },
            "grad": {
                "input": [[0.0, -1.0], [-10.0, 0.0]]
            }
        }
    },

    "test_cross_entropy_5": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [0, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [709.396418532264, 2.3025850929940455]
            },
            "grad": {
                "input": {
                    "jax": [[-4.49423283715579e+307, -0.0], [-10.0, 0.0]],
                    "numpy": [[-4.49423283715579e+307, -0.0], [-10.0, 0.0]],
                    "torch": [[0.0, -0.0], [-10.0, 0.0]]
                }
            }
        }
    },

    "test_cross_entropy_6": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[2.220446049250313e-16, 1.0], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [0, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [36.0436533891171561261064, 2.3025850929940457]
            },
            "grad": {
                "input": [[-4503599627370496.1639777310318726155242958888888847, -0.0], [-10.0, 0.0]]
            }
        }
    },

    "test_cross_entropy_7": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0]]
        },
        "static_keys": {
            "target": [0]
        },
        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output": [709.396418532264]
            },
            "grad": {
                "input": {
                    "jax": [[-4.49423283715579e+307, 0.0]],
                    "numpy": [[-4.49423283715579e+307, 0.0]],
                    "torch": [[0.0, 0.0]]
                }
            }
        }
    },

    "test_cross_entropy_8": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.2, 1.1102230246251565e-16, 0.7999999999999998], [0.1, 0.6, 0.3]]
        },
        "static_keys": {
            "target": [1, 2]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [36.7368005696771, 1.2039728043259361]
            },
            "grad": {
                "input": [[0.0, -9007199254740992.0, 0.0], [0.0, 0.0, -3.3333333333333333]]
            }
        }
    },
    "test_cross_entropy_9": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.5, 0.5], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [0, 1]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.6931471805599453, 0.1053605156578263]
            },
            "grad": {
                "input": [[-2.0, 0.0], [0.0, -1.1111111111111111]]
            }
        }
    },

    "test_cross_entropy_10": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.5, 0.5], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [0, 1]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.6931471805599453, 0.1053605156578263]
            },
            "grad": {
                "input": [[-2.0, 0.0], [0.0, -1.1111111111111111]]
            }
        }
    },

    "test_cross_entropy_11": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_keys": {
            "target": [1, 0]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.0, 2.3025850929940457]
            },
            "grad": {
                "input": [[0.0, -1.0], [-10.0, 0.0]]
            }
        }
    },
    "test_cross_entropy_12": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "log_probs"
            }
        },
        "inputs": {
            "input":[[-0.6931471805599453, -0.6931471805599453], [-2.3025850929940455, -0.10536051565782628]]
        },
        "static_keys": {
            "target": [0, 1]
        },
        "output_grads": {
            "output": [1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.6931471805599453, 0.1053605156578263]
            },
            "grad": {
                "input": [[-1.0, 0.0], [0.0, -1]]
            }
        }
    },

    "test_binary_cross_entropy_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1], [0.5]]
        },
        "static_keys": {
            "target": [[0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1053605156578263], [0.6931471805599453]]
            },
            "grad": {
                "input": [[1.1111111111111111], [-2]]
            }
        }
    },

    "test_binary_cross_entropy_2": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1, 0.2, 0.3], [0.5, 0.4, 0.2]]
        },
        "static_keys": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [
                    [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                    [0.6931471805599453, 0.916290731874155, 1.6094379124341003]
                ]
            },
            "grad": {
                "input": [[1.1111111111111112, -5.0, 1.4285714285714286],
                [-2.0, -2.5, -5.0]]
            }
        }
    },

    "test_binary_cross_entropy_3": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1e-20, 0.2, 0.3], [0.5, 0.4, 1e-20]]
        },
        "static_keys": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [
                    [0.0, 1.6094379124341003, 0.35667494393873245],
                    [0.6931471805599453, 0.916290731874155, 46.05170185988091368035]
                ]
            },
            "grad": {
                "input": [[1.0, -5.0, 1.4285714285714286],
                [-2.0, -2.5, -1e+20]]
            }
        }
    },

    "test_binary_cross_entropy_4": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input": [[0.1, 0.2, 0.3], [0.5, 1.0, 0.2]]
        },
        "static_keys": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [
                    [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                    [0.6931471805599453, 0.0, 1.6094379124341003]
                ]
            },
            "grad": {
                "input": [[1.1111111111111112, -5.0, 1.4285714285714286],
                [-2.0, -1.0, -5.0]]
            }
        }
    },

    "test_binary_cross_entropy_5": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1], [0.5]]
        },
        "static_keys": {
            "target": [[0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1053605156578263], [0.6931471805599453]]
            },
            "grad": {
                "input": [[1.1111111111111111], [-2]]
            }
        }
    },

    "test_binary_cross_entropy_6": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1.1102230246251565e-16], [0.5]]
        },
        "static_keys": {
            "target": [[0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.1102230246251565e-16], [0.6931471805599453]]
            },
            "grad": {
                "input": [[1.0000000000000002], [-2]]
            }
        }
    },

    "test_binary_cross_entropy_7": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input": [[1.0102230246251565e-16], [0.5]]
        },
        "static_keys": {
            "target": [[0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.1102230246251565e-16], [0.6931471805599453]]
            },
            "grad": {
                "input": [[1.0], [-2]]
            }
        }
    },

    "test_multilabel_3_binary_w_logits_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input": [
                [-2.197224577336219, -1.3862943611198906, -0.8472978603872036], 
                [0.0, 1e100, -1.3862943611198906]
            ]
        },
        "static_keys": {
            "target": [[0.0, 1, 0], [1, 1, 1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [
                    [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                    [0.6931471805599453, 0.0, 1.6094379124341003]
                ]
            },
            "grad": {
                "input": {
                    "jax": [[0.1, -0.8, 0.3],
                            [-1.0, 0.0, -0.8]],

                    "torch": [[0.1, -0.8, 0.3],
                              [-0.5, 0.0, -0.8]],

                    "numpy": [[0.1, -0.8, 0.3],
                              [-0.5, 0.0, -0.8]]
                }
            }
        }
    },

    "test_binary_cross_entropy_8": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1.1102230246251565e-16], [0.95]]
        },
        "static_keys": {
            "target": [[0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.1102230246251565e-16], [0.05129329438755058]]
            },
            "grad": {
                "input": [[1.0000000000000002], [-1.0526315789473684]]
            }
        }
    },

    "test_binary_w_logits_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input": [[-36.83119036496738], [0.0]]
        },
        "static_keys": {
            "target": [[0.0], [1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.1102230246251565e-16], [0.6931471805599453]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0102230246251579e-16], [-1.0]],
                    "torch": [[1.0102230246251579e-16], [-0.5]],
                    "numpy": [[1.0102230246251579e-16], [-0.5]]
                }
            }
        }
    },

    "test_binary_w_logits_2": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input":[[1.0], [-2]]
        },
        "static_keys": {
            "target": [[1.0], [0]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.3132616875182228340489397], [0.1269280110429724964437598915071149807002718272195321675]]
            },
            "grad": {
                "input": [[-0.2689414213699951], [0.11920292202211756]]
            }
        }
    },

    "test_binary_w_logits_3": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input":[[1.0, -2, 3, 0], [0, 1, 2, -1]]
        },
        "static_keys": {
            "target": [[1.0, 0, 1, 0], [0, 0, 0, 1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.3132616875182228340489397, 0.1269280110429724964437598915071149807002718272195321675, 0.0485873515737420587588754, 0.6931471805599453],
                [0.6931471805599453, 1.31326168751822283404914704536108291919962856900025589503, 2.1269280110429724964434823383377018142328603556866623514, 1.313261687518222834049147]]
            },
            "grad": {
                "input": {
                    "jax": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.0],
                            [0.0, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]],

                    "torch": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.5],
                              [0.5, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]],

                    "numpy": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.5],
                              [0.5, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]]
                }
            }
        }
    },
    "test_quantile_loss_1": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.1
            }
        },
        "inputs": {
            "input": [[1.0]]
        },
        "static_keys": {
            "target": [[0.0]]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.9]]
            },
            "grad": {
                "input": [[0.9]]
            }
        }
    },
    "test_quantile_loss_2": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.1
            }
        },
        "static_keys": {
            "target": [[1.0], [1e-5]]
        },
        "inputs": {
            "input":[[-1.1102230246251565e-16], [2e10]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1], [17999999999.999991]]
            },
            "grad": {
                "input": [[-0.1], [0.9]]
            }
        }
    },
    "test_quantile_loss_3": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.9
            }
        },
        "inputs": {
            "input": [[1.0], [1e-5]]
        },
        "static_keys": {
            "target": [[1.0], [1e-5]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [0.0]]
            },
            "grad": {
                "input": [[-0.4], [-0.4]]
            }
        }
    },
    "test_quantile_loss_4": {
        "model": {
            "name": "QuantileLoss", 
            "args": {                
                "quantile": 0.4
            }
        },
        "inputs": {
            "input":[[1.0, 2.0], [0.0, 1.0]]
        },
        "static_keys": {
            "target": [[1.0, 0.0], [2.0, -1.0]]
        },
        "output_grads": {"output": [[1.0, 1.0], [1.0, 1.0]]},
        "results": {
            "eval": {"output": [[0.0, 1.2], [0.8, 1.2]]},
            "grad": {
                "input": [[0.1, 0.6], [-0.4, 0.6]]
            }
        }
    },
    "test_quad_hinge_loss_1": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[2.0], [0.25]]
        },
        "static_keys": {
            "target": [[1], [-1]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]] 
        },
        "results": {
            "eval": {
                "output": [[0.0], [1.5625]] 
            },
            "grad": {
                "input": [[0.0], [2.5]]
            }
        }
    },
    "test_quad_hinge_loss_2": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[1.0], [-1.0]]
        },
        "static_keys": {
            "target": [[1.0], [-1.0]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [0.0]] 
            },
            "grad": {
                "input": [[0.0], [0.0]]
            }
        }
    },

    "test_quad_hinge_loss_3": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[0.0], [0.0]]
        },
        "static_keys": {
            "target": [[1.0], [-1.0]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [1.0]] 
            },
            "grad": {
                "input": [[-2.0], [2.0]]
            }
        }
    },
    "test_kl_div_1": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input": [[0.1, 0.5], [0.5, 0.1]]
        },
        "static_keys": {
            "target": [[0.2, 0.5], [0.2, 0.4]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1386294361119891, 0.0], [-0.183258146374831, 0.5545177444479562]]
            },
            "grad": {
                "input": [[-2.0, -1.0], [-0.4, -4.0]]
            }
        }
    },
    "test_kl_div_3": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input": [[0.1, 0.5], [0.5, 0.1]]
        },
        "static_keys": {
            "target": [[0.1, 0.5], [0.5, 0.1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0], [0.0, 0.0]]
            },
            "grad": {
                "input": [[-1.0, -1.0], [-1.0, -1.0]]
            }
        }
    },
    "test_kl_div_4": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input": [[1.1102230246251565e-16, 0.5], [0.5, 0.1]]
        },
        "static_keys": {
            "target": [[0.1, 0.5], [0.5, 0.1]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[3.443421547668306, 0.0], [0.0, 0.0]]
            },
            "grad": {
                "input": [[-900719925474099.2, -1.0], [-1.0, -1.0]]
            }
        }
    },
    "test_relu_1": {
        "model": {
            "name": "Relu"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 0.0], [2.0, 0.0]]
            },
            "grad": {
                "input": [[1.0, 0.0], [1.0, 0.0]]
            }
        }
    },
    "test_relu_2": {
        "model": {
            "name": "Relu"
        },
        "inputs": {
            "input": [[0.0]]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0]]
            },
            "grad": {
                "input": [[0.0]]
            }
        }
    },
    "test_relu_3": {
        "model": {
            "name": "Relu"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0], [2.0, 0.0], [0.0, 0.0]]
            },
            "grad": {
                "input": [[0.0, 0.0], [1.0, 0.0], [0.0, 0.0]]
            }
        }
    },
    "test_relu_4": {
        "model": {
            "name": "Relu"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grads": {
            "output": [[5.0, 1.0], [3.2, 1.0], [0.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 0.0], [2.0, 0.0], [0.0, 0.0]]
            },
            "grad": {
                "input": [[0.0, 0.0], [3.2, 0.0], [0.0, 0.0]]
            }
        }
    },
    "test_leaky_relu_1": {
        "model": {
            "name": "LeakyRelu",
            "args":{
                "slope": 0.2
            } 
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, -0.4], [2.0, 0.0]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0, 0.2], [1.0, 1.0]],
                    "torch": [[1.0, 0.2], [1.0, 0.2]],
                    "numpy": [[1.0, 0.2], [1.0, 0.2]]
                }
            }
        }
    },
    "test_leaky_relu_2": {
        "model": {
            "name": "LeakyRelu",
            "args":{
                "slope": 0.2
            } 
        },
        "inputs": {
            "input": [[0.0]]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0]],
                    "torch": [[0.2]],
                    "numpy": [[0.2]]
                }
            }
        }
    },
    "test_leaky_relu_3": {
        "model": {
            "name": "LeakyRelu",
            "args":{
                "slope": 0.2
            } 
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grads": {
            "output": [[5.0, 1.0], [3.2, 1.0], [0.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[-0.2, -0.4], [2.0, 0.0], [-0.008, -20.0]]
            },
            "grad": {
                "input": {
                    "jax": [[1.0, 0.2], [3.2, 1.0], [0.0, 0.2]],
                    "torch": [[1.0, 0.2], [3.2, 0.2], [0.0, 0.2]],
                    "numpy": [[1.0, 0.2], [3.2, 0.2], [0.0, 0.2]]
                }
            }
        }
    },
    "test_gelu_1": {
        "model": {
            "name": "Gelu"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.8413447460685429, -0.04550026389635842], [1.9544997361036416, 0.0]]
            },
            "grad": {
                "input": [[1.0833154705876864, -0.08523180107819693], [1.085231801078197, 0.5]]
            }
        }
    },
    "test_gelu_2": {
        "model": {
            "name": "Gelu"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[-0.15865525393145707, -0.04550026389635842], [1.9544997361036416, 0.0], [-0.019361862525886772, -0.0]]
            },
            "grad": {
                "input": [[-0.08331547058768632, -0.08523180107819693], [1.085231801078197, 0.5], [0.46810163297898505, 0.0]]
            }
        }
    },
    "test_stop_gradient_1": {
        "model": {
            "name": "StopGradient"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, -2.0], [2.0, 0.0]]
            },
            "grad": {
                "input": [[0,0],[0,0]]
            }
        }
    },
    "test_stop_gradient_2": {
        "model": {
            "name": "StopGradient"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
            },
            "grad": {
                "input": [[0, 0], [0,0], [0,0]]
            }
        }
    },
    "test_softmax_1": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1192029220221162, 0.8807970779778726, 0.0000000000000112]]
            },
            "grad": {
                "input": [[-2.8050970975135375e-18, 2.1798580039061965e-18, 0.0]]
            }
        }
    },
    "test_softmax_2": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input": [[0.1, 0.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.3559130712072203, 0.3220434643963898, 0.3220434643963898]]
            },
            "grad": {
                "input": [[5.551115123125783e-17, 4.163336342344337e-17, 2.7755575615628914e-17]]
            }
        }
    },
    "test_softmax_3": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]]
            },
            "grad": {
                "input": [[0.0, 0.0], [0.0, 0.0]]
            }
        }
    },
    "test_softmax_4": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },
        "output_grads": {
            "output": [[2.0, 0.5, 0.0]]
        },
        "results": {
            "eval": {
                "output": [[0.1192029220221162, 0.8807970779778726, 0.0000000000000112]]
            },
            "grad": {
                "input": [[0.1574903781052589, -0.1574903781052513, -7.60260908997149e-15]]
            }
        }
    },
    "test_softmax_5": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input":  [[0.1, 0.0, 0.0]]
        },
        "output_grads": {
            "output": [[1.2, 0.1, 2.0]]
        },
        "results": {
            "eval": {
                "output": [[0.3559130712072203, 0.3220434643963898, 0.3220434643963898]]
            },
            "grad": {
                "input": [[0.03438584354265972, -0.3231342129479001, 0.2887483694052405]]
            }
        }
    },
    "test_softmax_6": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input":  [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[10.0, 5.2], [1.0, 1.1]]
        },
        "results": {
            "eval": {
                "output": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]]
            },
            "grad": {
                "input": [[0.2168479667083789, -0.2168479667083782], [-0.010499358540350667, 0.010499358540350667]]
            }
        }
    },
    "test_softmax_7": {
        "model": {
            "name": "Softmax"
        },
        "inputs": {
            "input":  [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[-0.3, 5.2], [2.0, 10.1]]
        },
        "results": {
            "eval": {
                "output": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]]
            },
            "grad": {
                "input": [[-0.2484716285200167295715, 0.2484716285200167295715], [-0.8504480417684027905245, 0.8504480417684027905245]]
            }
        }
    },
    "test_softmax_8": {
        "model": {
            "name": "Softmax",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input":  [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grads": {
            "output": [[-0.3, 5.2], [2.0, 10.1]]
        },
        "results": {
            "eval": {
                "output": [[0.2689414213699951, 0.11920292202211755], [0.7310585786300049, 0.8807970779778823]]
            },
            "grad": {
                "input": [[-0.4522074464554083, -0.5144685684771817], [0.45220744645540817, 0.514468568477183]]
            }
        }
    },
    "test_robust_log_1": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input":  [[2.0, 2.0], [3.0, 4.0], [4.0, 100.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.6931471805599453094172321214, 0.6931471805599453094172321214], [1.09861228866810969139524523692252570464, 1.3862943611198906188344642429163531], [1.386294361119890618834464242916353136, 4.6051701859880913680359829093687284152022]]
            }, 
            "grad": {
                "input": [[0.5, 0.5], [0.333333333333333333333, 0.25], [0.25, 0.01]]
            }
        }
    },
    "test_robust_log_2": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input":   [[[0.0]]]
        },
        "output_grads": {
            "output": [[[1.0]]]
        },
        "results": {
            "eval": {
                "output": [[[-709.396418532264106216811584991213718666567366540526]]]
            }, 
            "grad": {
                "input": {
                    "jax": [[[4.4942328371557897351686972308210038429885969661285748811057e307]]],
                    "numpy": [[[4.4942328371557897351686972308210038429885969661285748811057e307]]],
                    "torch": [[[0.0]]]
                }
            }
        }
    },
    "test_robust_log_3": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[[1e-311, 1e-306]]]
        },
        "output_grads": {
            "output": [[[1.0, 1.0]]]
        },
        "results": {
            "eval": {
                "output": {
                    "jax": [[[-709.396418532264106216811584991213718666567366540526, -704.591038456177979309505385133415447525937055520404530]]],
                    "torch": [[[-709.3959691089803906378380681214906365661830676808299040690118894, -704.591038456177979309505385133415447525937055520404530]]],
                    "numpy": [[[-709.3959691089803906378380681214906365661830676808299040690118894, -704.591038456177979309505385133415447525937055520404530]]]
                }
            }, 
            "grad": {
                "input": [[[4.4942328371557897351686972308210038429885969661285748811057e307, 1e306]]]
            }
        }
    },
    "test_stable_reciprocal_1": {
        "model": {
            "name": "StableReciprocal"
        },
        "inputs": {
            "input":  [[[[[2.0, 2.0], [3.0, 4.0], [4.0, 100.0]]]]]
        },
        "output_grads": {
            "output": [[[[[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[0.5, 0.5], [0.333333333333333333333, 0.25], [0.25, 0.01]]]]]
            }, 
            "grad": {
                "input": [[[[[-0.25, -0.25], [-0.11111111111111111111111, -0.0625], [-0.0625, -0.0001]]]]]
            }
        }
    },
    "test_stable_reciprocal_2": {
        "model": {
            "name": "StableReciprocal"
        },
        "inputs": {
            "input":  [[0.0]]
        },
        "output_grads": {
            "output": [[1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.34078079299425975369365231198393901835279232e153]]
            }, 
            "grad": {
                "input": [[-4.494232837155790062526881505709689647141e305]]
            }
        }
    },
    "test_stable_reciprocal_3": {
        "model": {
            "name": "StableReciprocal"
        },
        "inputs": {
            "input":  [[1e-155, 1e-145]]
        },
        "output_grads": {
            "output": [[1.0,1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.33628656015710396363112543047822932870565049166274379e153, 1e145]]
            }, 
            "grad": {
                "input": [[-4.494232837155790062526881505709689647141e305, -1e290]]
            }
        }
    },
    "test_robust_sqrt_1": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0,  1.4142135623730950488], [1.732050807568877293527446341505872, 2.0]]
            }, 
            "grad": {
                "input": [[0.5 , 0.35355339059327373], [0.2886751345948129, 0.25]]
            }
        }
    },
    "test_robust_sqrt_2": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[[[4.0, 16.0], [25.0, 100.0]]]]
        },
        "output_grads": {
            "output": [[[[3.0, 2.0], [5.0, 6.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[2.0,  4.0], [5.0, 10.0]]]]
            }, 
            "grad": {
                "input": [[[[0.75 , 0.25], [0.5, 0.3]]]]
            }
        }
    },
    "test_robust_sqrt_3": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [10000.0]
        },
        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output": [100.0]
            }, 
            "grad": {
                "input": [0.005]
            }
        }
    },
    "test_robust_sqrt_4": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[0.0, -4.0], [-1.0, -4.0]]
        },
        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0, 2.0], [1.0, 2.0]]
            }, 
            "grad": {
                "input": {
                    "jax":  [[6.703903964971299e+153, -0.25], [-0.5, -0.25]],
                    "torch": [[0.0, -0.25], [-0.5, -0.25]],
                    "numpy": [[0.0, -0.25], [-0.5, -0.25]]
                }
            }
        }
    },
    "test_robust_sqrt_5": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true,
                "cutoff": 1e-20
            }
        },
        "inputs": {
            "input": [[0.9999999999999e-20, 1.0000000000001e-20, 0.0]]
        },
        "output_grads": {
            "output":  [[1.0, 1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[9.999999999999e-11, 1.0000000000000499999999999987500000000000624e-10, 0.0]]
            }, 
            "grad": {
                "input": {
                    "jax":  [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 1e10]],
                    "torch": [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 0.0]],
                    "numpy": [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 0.0]]
                }
            }
        }
    },
    "test_robust_power_1": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base":  [[0.0], [2.2250738585072014e-308]],
            "exponent":  [[0.5], [0.2]]
        },
        "output_grads": {
            "output": [[1.0], [1.0]]
        },
        "results": {
            "eval": {
                "output": [[0.0], [2.94760229696920019e-62]]
            }, 
            "grad": {
                "base": [[0.0], [2.6494422067830456494626727070578342769220668517896442342632083875646713489594382293556230650365376585602492809663848600694036441316054962143018101466468388523103155742568140908731216503912613033423051394246710020933425593223230870218134328967168e+245]],
                "exponent": [[0.0], [-2.08807091043044e-59]]
            }
        }
    },
    "test_robust_power_2": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base":  [[2.0], [3.0], [4.0]],
            "exponent":  [[2.0,3.0]]
        },
        "output_grads": {
            "output": [[1.0,1.0],
                        [1.0,1.0],
                        [1.0,1.0]]
        },
        "results": {
            "eval": {
                "output": [[4.0,8.0],
                           [9.0,27.0],
                           [16.0,64.0]]
            }, 
            "grad": {
                "base": [[16.0],[33.0],[56.0]],
                "exponent": [[34.84080909817102,123.93054835019151]]
            }
        }
    },
    "test_robust_power_3": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [2.0], 
            "exponent": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grads": {
            "output": [[1.0],
                        [1.0],
                        [1.0],
                        [1.0]]
        },
        "results": {
            "eval": {
                "output": [[2.0],
                           [4.0],
                           [8.0],
                           [16.0]]
            }, 
            "grad": {
                "base": [49.0], 
                "exponent": [[1.3862943611198906], [2.772588722239781], [5.545177444479562], [11.090354888959125]]
            }
        }
    },
    "test_robust_power_4": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [2.0], 
            "exponent": [3.0]
        },
        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output": [8.0]
            }, 
            "grad": {
                "base": [12.0], 
                "exponent": [5.545177444479562]
            }
        }
    },
    "test_robust_power_5": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 4.0], [1.0, 16.0], [1.0, 64.0]]
            },
            "grad": {
                "base": [9.0, 228.0],
                "exponent": [[0.0,  2.772588722239781], [0.0,  11.090354888959125], [0.0, 44.3614195558365]]
            }
        }
    },
    "test_robust_power_6": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },

        "output_grads": {
            "output": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 4.0], [1.0, 16.0], [1.0, 64.0]]
            },
            "grad": {
                "base": [9.0, 228.0],
                "exponent": [[0.0,  2.772588722239781], [0.0,  11.090354888959125], [0.0, 44.3614195558365]]
            }
        }
    },
    "test_robust_power_7": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [[1e-311, 1e-311]],
            "exponent": [[0.01076316536, 0.01076316538]]
        },
        "output_grads": {
            "output": [[1.0,1.0]]
        },
        "results": {
            "eval": {
                "output": {"jax": [[0.0,0.0]],
                           "torch": [[0.0004494232837155554,0.00044942328188518134305836]],
                           "numpy": [[0.0004494232837155554,0.00044942328188518134305836]]}
            },
            "grad": {
                "base": {"jax": [[0.0,0.0]],
                           "torch": [[4.49423283715579e+307,4.837217108552834e+305]],
                           "numpy": [[4.49423283715579e+307,4.837217108552834e+305]]},

                "exponent": {"jax": [[0.0,0.0]],
                           "torch": [[0,-0.32183379363642992135824]],
                           "numpy": [[0,-0.32183379363642992135824]]}

            }
        }
    },
    "test_concat_axis_none_1": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 2, 
                "axis": null
            }
        },
        "inputs": {
            "input1": [[1.0, 2.0, 3.0, 4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]]
        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]
            },
            "grad": {
                "input1": [[-1.0, -2.0, -3.0, -4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]]
            } 
        }
    },
    "test_concat_axis_none_2": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3, 
                "axis": null
            }
        },
        "inputs": {
            "input1": [[1.0, 2.0, 3.0, 4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]],
            "input3": [[[[[[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]]]]]]
        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]
            },
            "grad": {
                "input1": [[-1.0, -2.0, -3.0, -4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]],
                "input3": [[[[[[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]]]]]]
            } 
        }
    },
    "test_concat_axis_none_3": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3, 
                "axis": null
            }
        },
        "inputs": {
            "input1": [[1.0, 2.0, 3.0, 4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]],
            "input3": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]
        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0]
            },
            "grad": {
                "input1": [[-1.0, -2.0, -3.0, -4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]],
                "input3": [[9.0, 8.0, 7.0], [6.0, 5.0, 4.0], [3.0, 2.0, 1.0]]
            } 
        }
    },
    "test_concat_axis_none_4": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 9, 
                "axis": null
            }
        },
        "inputs": {
            "input1": [1.0],
            "input2": [[2.0]],
            "input3": [[[3.0]]],
            "input4": [[[[[4.0]]]]],
            "input5": [[[5.0]],[[6.0]]],
            "input6": [[[[[[[[[[[7.0]]]]]]]]]]],
            "input7": [[8.0, 9.0], [10.0, 11.0]],
            "input8": [[[[12.0]]],[[[13.0]]]],
            "input9": [14.0]

        },
        "output_grads": {
            "output": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0, 9.0, 10.0, -11.0, 12.0, 13.0, 14.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0]
            },
            "grad": {
                "input1": [-1.0],
                "input2": [[-2.0]],
                "input3": [[[-3.0]]],
                "input4": [[[[[-4.0]]]]],
                "input5": [[[-5.0]],[[-6.0]]],
                "input6": [[[[[[[[[[[7.0]]]]]]]]]]],
                "input7": [[8.0, 9.0], [10.0, -11.0]],
                "input8": [[[[12.0]]],[[[13.0]]]],
                "input9": [14.0]
            } 
        }
    },
    "test_concat_1": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 2, 
                "axis": 0
            }
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0], [4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]]
        },
        "output_grads": {
            "output": [[-1.0], [-2.0], [-3.0], [-4.0], [-5.0], [-6.0], [7.0], [8.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [2.0], [3.0], [4.0], [5.0], [6.0], [7.0], [8.0]]
            },
            "grad": {
                "input1": [[-1.0], [-2.0], [-3.0], [-4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]]
            } 
        }
    },
    "test_concat_2": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 2, 
                "axis": 1
            }
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0], [4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]]
        },
        "output_grads": {
            "output": [[-1.0, -5.0], [-2.0, -6.0], [-3.0, 7.0], [-4.0, 8.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 5.0], [2.0, 6.0], [3.0, 7.0], [4.0, 8.0]]
            },
            "grad": {
                "input1": [[-1.0], [-2.0], [-3.0], [-4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]]
            } 
        }
    },
    "test_concat_3": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3, 
                "axis": -2
            }
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0], [4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]],
            "input3": [[-1.0], [-2.0], [-3.0], [-4.0]]
        },
        "output_grads": {
            "output": [[-1.0], [-2.0], [-3.0], [-4.0], [-5.0], [-6.0], [7.0], [8.0], [1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0], [2.0], [3.0], [4.0], [5.0], [6.0], [7.0], [8.0], [-1.0], [-2.0], [-3.0], [-4.0]]
            },
            "grad": {
                "input1": [[-1.0], [-2.0], [-3.0], [-4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]],
                "input3": [[1.0], [2.0], [3.0], [4.0]]
            } 
        }
    },
    "test_concat_4": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3, 
                "axis": -1
            }
        },
        "inputs": {
            "input1": [[1.0], [2.0], [3.0], [4.0]],
            "input2": [[5.0], [6.0], [7.0], [8.0]],
            "input3": [[-1.0], [-2.0], [-3.0], [-4.0]]
        },
        "output_grads": {
            "output": [[-1.0, -5.0, 1.0], [-2.0, -6.0, 2.0], [-3.0, 7.0, 3.0], [-4.0, 8.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 5.0, -1.0], [2.0, 6.0, -2.0], [3.0, 7.0, -3.0], [4.0, 8.0, -4.0]]
            },
            "grad": {
                "input1": [[-1.0], [-2.0], [-3.0], [-4.0]],
                "input2": [[-5.0], [-6.0], [7.0], [8.0]],
                "input3": [[1.0], [2.0], [3.0], [4.0]]
            } 
        }
    },
    "test_var_1": {
        "model": {
            "name": "Variance"
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grads": {
            "output": 1.0
        },
        "results": {
            "eval": {
                "output": 2.0
            },
            "grad": {
                "input": [[-0.8], [-0.4], [0.0], [0.4], [0.8]]
            } 
        }
    },
    "test_var_2": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 0.0,
                "axis": 0
            }
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grads": {
            "output": [1.0]
        },
        "results": {
            "eval": {
                "output": [2.0]
            },
            "grad": {
                "input": [[-0.8], [-0.4], [0.0], [0.4], [0.8]]
            } 
        }
    },
    "test_var_3": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 0.0,
                "axis": 1
            }
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0, 1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [0.0, 0.0, 0.0, 0.0, 0.0]
            },
            "grad": {
                "input": [[0.0], [0.0], [0.0], [0.0], [0.0]]
            } 
        }
    },
    "test_var_4": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 1.0
            }
        },
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grads": {
            "output": 1.0
        },
        "results": {
            "eval": {
                "output": 2.5
            },
            "grad": {
                "input": [[-1.0], [-0.5], [0.0], [0.5], [1.0]]
            } 
        }
    },
    "test_reduce_sum_1": {
        "model": {
            "name": "Sum"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grads": {
            "output": 7.0
        },
        "results": {
            "eval": {
                "output": 58.0
            },
            "grad": {
                "input": [[[[[[[[[[[[[[[7.0,7.0,7.0],[7.0,7.0,7.0]],[[7.0,7.0,7.0],[7.0,7.0,7.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_sum_2": {
        "model": {
            "name": "Sum"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 3.0], [4.0, 5.0]]
        },
        "output_grads": {
            "output": 3.0
        },
        "results": {
            "eval": {
                "output": 3.0
            },
            "grad": {
                "input": [[3.0, 3.0], [3.0, 3.0], [3.0, 3.0]]
            } 
        }
    },
    "test_reduce_sum_3": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-3.0, 2.0, 0.0]
            },
            "grad": {
                "input": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
            } 
        }
    },
    "test_reduce_sum_4": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [4.0, 3.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-3.0, 2.0, 0.0]
            },
            "grad": {
                "input": [[4.0, 4.0], [3.0, 3.0], [1.0, 1.0]]
            } 
        }
    },
    "test_reduce_sum_5": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [3.0, 7.0]
        },
        "results": {
            "eval": {
                "output": [2.0, -3.0]
            },
            "grad": {
                "input": [[3.0, 7.0], [3.0, 7.0], [3.0, 7.0]]
            } 
        }
    },
    "test_reduce_sum_6": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grads": {
            "output": [3.0, 7.0]
        },
        "results": {
            "eval": {
                "output": [25.0, 37.0]
            },
            "grad": {
                "input": [[[3.0,3.0,3.0],[7.0,7.0,7.0]],[[3.0,3.0,3.0],[7.0,7.0,7.0]],[[3.0,3.0,3.0],[7.0,7.0,7.0]]]
            } 
        }
    },
    "test_reduce_sum_7": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grads": {
            "output": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
            },
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_mean_1": {
        "model": {
            "name": "Mean"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grads": {
            "output": 12.0
        },
        "results": {
            "eval": {
                "output": 4.8333333333333333333333333333333333333
            },
            "grad": {
                "input": [[[[[[[[[[[[[[[1.0,1.0,1.0],[1.0,1.0,1.0]],[[1.0,1.0,1.0],[1.0,1.0,1.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_mean_2": {
        "model": {
            "name": "Mean"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 3.0], [4.0, 5.0]]
        },
        "output_grads": {
            "output": 3.0
        },
        "results": {
            "eval": {
                "output": 0.5
            },
            "grad": {
                "input": [[0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_3": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-1.5, 1.0, 0.0]
            },
            "grad": {
                "input": [[0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_4": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [4.0, 3.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-1.5, 1.0, 0.0]
            },
            "grad": {
                "input": [[2.0, 2.0], [1.5, 1.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_5": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [3.0, 9.0]
        },
        "results": {
            "eval": {
                "output": [0.666666666666666666667, -1.0]
            },
            "grad": {
                "input": [[1.0, 3.0], [1.0, 3.0], [1.0, 3.0]]
            } 
        }
    },
    "test_reduce_mean_6": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grads": {
            "output": [9.0, 27.0]
        },
        "results": {
            "eval": {
                "output": [2.7777777777777777777777777777, 4.11111111111111111111111111111111111111111]
            },
            "grad": {
                "input": [[[1.0,1.0,1.0],[3.0,3.0,3.0]],[[1.0,1.0,1.0],[3.0,3.0,3.0]],[[1.0,1.0,1.0],[3.0,3.0,3.0]]]
            } 
        }
    },
    "test_reduce_mean_7": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grads": {
            "output": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
            },
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_max_1": {
        "model": {
            "name": "Max"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grads": {
            "output": 17.0
        },
        "results": {
            "eval": {
                "output": 11.0
            },
            "grad": {
                "input": [[[[[[[[[[[[[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[17.0,0.0,0.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_max_2": {
        "model": {
            "name": "Max"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 6.0], [6.0, 5.0]]
        },
        "output_grads": {
            "output": 9.0
        },
        "results": {
            "eval": {
                "output": 6.0
            },
            "grad": {
                "input": [[0.0, 0.0], [3.0, 3.0], [3.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_3": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-1.0, 2.0, 1.0]
            },
            "grad": {
                "input": [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_4": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [4.0, 3.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-1.0, 2.0, 1.0]
            },
            "grad": {
                "input": [[4.0, 0.0], [3.0, 0.0], [1.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_5": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [3.0, 9.0]
        },
        "results": {
            "eval": {
                "output": [2.0, 0.0]
            },
            "grad": {
                "input": [[0.0, 0.0], [3.0, 9.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_6": {
        "model": {
            "name": "Max",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grads": {
            "output": [9.0, 27.0]
        },
        "results": {
            "eval": {
                "output": [6.0, 9.0]
            },
            "grad": {
                "input": [[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[9.0,0.0,0.0],[27.0,0.0,0.0]]]
            } 
        }
    },
    "test_reduce_max_7": {
        "model": {
            "name": "Max",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grads": {
            "output": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
            },
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_min_1": {
        "model": {
            "name": "Min"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grads": {
            "output": 9.0
        },
        "results": {
            "eval": {
                "output": 1.0
            },
            "grad": {
                "input": [[[[[[[[[[[[[[[3.0,0.0,0.0],[0.0,0.0,3.0]],[[0.0,0.0,3.0],[0.0,0.0,0.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_min_2": {
        "model": {
            "name": "Min"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 6.0], [6.0, 5.0]]
        },
        "output_grads": {
            "output": 4.0
        },
        "results": {
            "eval": {
                "output": -8.0
            },
            "grad": {
                "input": [[0.0, 4.0], [0.0, 0.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_min_3": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-2.0, 0.0, -1.0]
            },
            "grad": {
                "input": [[0.0, 1.0], [0.0, 1.0], [0.0, 1.0]]
            } 
        }
    },
    "test_reduce_min_4": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [4.0, 3.0, 1.0]
        },
        "results": {
            "eval": {
                "output": [-2.0, 0.0, -1.0]
            },
            "grad": {
                "input": [[0.0, 4.0], [0.0, 3.0], [0.0, 1.0]]
            } 
        }
    },
    "test_reduce_min_5": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grads": {
            "output": [3.0, 9.0]
        },
        "results": {
            "eval": {
                "output": [-1.0, -2.0]
            },
            "grad": {
                "input": [[3.0, 9.0], [0.0, 0.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_min_6": {
        "model": {
            "name": "Min",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grads": {
            "output": [8.0, 16.0]
        },
        "results": {
            "eval": {
                "output": [1.0, 1.0]
            },
            "grad": {
                "input": [[[4.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,4.0],[8.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,8.0]]]
            } 
        }
    },
    "test_reduce_min_7": {
        "model": {
            "name": "Min",
            "args": {
                "axis": [0,1,3,5,6]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]]]
        },
        "output_grads": {
            "output": [[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]
        },
        "results": {
            "eval": {
                "output": [[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]
            },
            "grad": {
                "input": [[[[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]]]
            } 
        }
    },
    "test_composite_1": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Multiply"
                },
                "m2": {
                    "name": "Multiply"
                },
                "m3": {
                    "name": "Add"
                }  
            },
            "connections" : { 
                "m1": {
                    "left": "left",
                    "right": "right"
                },
                "m2": {
                    "left": "right",
                    "right": {"connect": [["m1","output"]]}
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": "output"
                }


            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[18.0, 64.0, 150.0]]]]
            },
            "grad": {
                "left": [[[[18.0, 32.0, 50.0]]]],
                "right": [[[[12.0, 32.0, 60.0]]]]
            } 
        }
    },
    "test_composite_2": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Model",
                    "submodels": {
                        "m1": {
                            "name": "Multiply"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m3": {
                            "name": "Add"
                        }  
                    },
                    "connections" : { 
                        "m1": {
                            "left": "left",
                            "right": "right"
                        },
                        "m2": {
                            "left": "right",
                            "right": {"connect": [["m1","output"]]}
                        },
                        "m3": {
                            "left": {"connect": [["m2","output"]]},
                            "right": {"connect": [["m2","output"]]},
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        }
                    }
                },
                "m2": {
                    "name": "Model",
                    "submodels": {
                        "m1": {
                            "name": "Multiply"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m3": {
                            "name": "Add"
                        }  
                    },
                    "connections" : { 
                        "m1": {
                            "left": "left",
                            "right": "right"
                        },
                        "m2": {
                            "left": "right",
                            "right": {"connect": [["m1","output"]]}
                        },
                        "m3": {
                            "left": {"connect": [["m2","output"]]},
                            "right": {"connect": [["m2","output"]]},
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        }
                    }
                },
                "m3": {
                    "name": "Model",
                    "submodels": {
                        "m1": {
                            "name": "Add"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m3": {
                            "name": "Add"
                        }  
                    },
                    "connections" : { 
                        "m1": {
                            "left": "left",
                            "right": "right"
                        },
                        "m2": {
                            "left": "right",
                            "right": {"connect": [["m1","output"]]}
                        },
                        "m3": {
                            "left": {"connect": [["m2","output"]]},
                            "right": {"connect": [["m2","output"]]},
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        }
                    }
                }
            },
            "connections" : { 
                "m1": {
                    "left": "left",
                    "right": "right"
                },
                "m2": {
                    "left": {"connect": [["m1","output"]]},
                    "right": "right"
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[419904.0, 16777216.0, 225000000.0]]]]
            },
            "grad": {
                "left": [[[[839808.0, 16777216.0, 150000000.0]]]],
                "right": [[[[1119744.0, 33554432.0, 360000000.0]]]]
            } 
        }
    },
    "test_composite_3": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Model",
                    "submodels": {
                        "m1": {
                            "name": "Model",
                            "submodels": {
                                "m1": {
                                    "name": "Model",
                                    "submodels": {
                                        "m1": {
                                            "name": "Model",
                                            "submodels": {
                                                "m1": {
                                                    "name": "Add"
                                                }
                                            },
                                            "connections" : { 
                                                "m1": {
                                                    "left": "left",
                                                    "right": "right",
                                                    "output": "output"
                                                }
                                            }                         
                                        },
                                        "m2": {
                                            "name": "Add"
                                        }
                                    },
                                    "connections": {
                                        "m1": {
                                            "left": "left",
                                            "right": "right"
                                        },
                                        "m2": {
                                            "left": "left",
                                            "right": {"connect": [["m1","output"]]},
                                            "output": "output"
                                        }
                                    }
                                },
                                "m2": {
                                    "name": "Add"
                                }
                            },
                            "connections": {
                                "m1": {
                                    "left": "left",
                                    "right": "right"
                                },
                                "m2": {
                                    "left": "left",
                                    "right": {"connect": [["m1","output"]]},
                                    "output": "output"
                                }
                            }
                        },
                        "m2": {
                            "name": "Add"
                        }
                    },
                    "connections": {
                        "m1": {
                            "left": "left",
                            "right": "right"
                        },
                        "m2": {
                            "left": "left",
                            "right": {"connect": [["m1","output"]]},
                            "output": "output"
                        }
                    }

                },
                "m2": {
                    "name": "Add"
                }
            },
            "connections": {
                "m1": {
                    "left": "left",
                    "right": "right"
                },
                "m2": {
                    "left": "left",
                    "right": {"connect": [["m1","output"]]},
                    "output": "output"
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[8.0, 14.0, 20.0]]]]
            },
            "grad": {
                "left": [[[[5.0, 5.0, 5.0]]]],
                "right": [[[[1.0, 1.0, 1.0]]]]
            } 
        }
    },
    "test_composite_4": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Multiply"
                },
                "m2": {
                    "name": "Multiply"
                },
                "m3": {
                    "name": "Add"
                }  
            },
            "connections" : { 
                "m1": {
                    "left": "left",
                    "right": "right"
                },
                "m2": {
                    "left": "right",
                    "right": {"connect": [["m1","output"]]}
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": "output"
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[18.0, 64.0, 150.0]]]]
            },
            "grad": {
                "left": [[[[18.0, 32.0, 50.0]]]],
                "right": [[[[12.0, 32.0, 60.0]]]]
            } 
        }
    },
    "test_composite_5": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Multiply"
                },
                "m2": {
                    "name": "Multiply"
                },
                "m3": {
                    "name": "Add"
                }  
            },
            "connections" : { 
                "m1": {
                    "left": "left",
                    "right": "right",
                    "output": {
                        "name": "output1", 
                        "expose": true
                    }
                },
                "m2": {
                    "left": "right",
                    "right": {"connect": [["m1","output"]]}
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }
            }
        },
        "inputs": {
            "left": [1.0, 2.0, 3.0],
            "right": [3.0, 4.0, 5.0]
        },
        "output_grads": {
            "output": [1.0, 1.0, 1.0],
            "output1": [2.0, 2.0, 2.0]
        },
        "results": {
            "eval": {
                "output": [18.0, 64.0, 150.0],
                "output1": [3.0, 8.0, 15.0]
            },
            "grad": {
                "left": [24.0, 40.0, 60.0],
                "right": [14.0, 36.0, 66.0]
            } 
        }
    },
    "test_composite_1_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m3": {
                    "name": "Add"
                },
                "m2": {
                    "name": "Multiply"
                },
                "m1": {
                    "name": "Multiply"
                }  
            },
            "connections" : { 
                "m3": {
                    "output": "output"
                },
                "m2": {
                    "left": "right",
                    "output": {"connect": [["m3", "left"],["m3","right"]]}
                },
                "m1": {
                    "left": "left",
                    "right": "right",
                    "output": {"connect": [["m2","right"]]}
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[18.0, 64.0, 150.0]]]]
            },
            "grad": {
                "left": [[[[18.0, 32.0, 50.0]]]],
                "right": [[[[12.0, 32.0, 60.0]]]]
            } 
        }
    },
    "test_composite_2_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Model",
                    "submodels": {
                        "m3": {
                            "name": "Add"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m1": {
                            "name": "Multiply"
                        }  
                    },
                    "connections" : { 
                        "m3": {
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        },
                        "m2": {
                            "left": "right",
                            "output": {"connect": [["m3", "left"],["m3","right"]]}
                        },
                        "m1": {
                            "left": "left",
                            "right": "right",
                            "output": {"connect": [["m2","right"]]}
                        }
                    }
                },
                "m2": {
                    "name": "Model",
                    "submodels": {
                        "m3": {
                            "name": "Add"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m1": {
                            "name": "Multiply"
                        }  
                    },
                    "connections" : { 
                        "m3": {
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        },
                        "m2": {
                            "left": "right",
                            "output": {"connect": [["m3", "left"], ["m3", "right"]]}
                        },
                        "m1": {
                            "left": "left",
                            "right": "right",
                            "output": {"connect": [["m2", "right"]]}
                        }
                    }
                },
                "m3": {
                    "name": "Model",
                    "submodels": {
                        "m3": {
                            "name": "Add"
                        },
                        "m2": {
                            "name": "Multiply"
                        },
                        "m1": {
                            "name": "Add"
                        }  
                    },
                    "connections" : { 
                        "m3": {
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        },
                        "m2": {
                            "left": "right",
                            "output": {"connect": [["m3", "left"],["m3","right"]]}
                        },
                        "m1": {
                            "left": "left",
                            "right": "right",
                            "output": {"connect": [["m2","right"]]}
                        }
                    }
                }
            },
            "connections" : { 
                "m1": {
                    "left": "left",
                    "right": "right"
                },
                "m2": {
                    "left": {"connect": [["m1","output"]]},
                    "right": "right"
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[419904.0, 16777216.0, 225000000.0]]]]
            },
            "grad": {
                "left": [[[[839808.0, 16777216.0, 150000000.0]]]],
                "right": [[[[1119744.0, 33554432.0, 360000000.0]]]]
            } 
        }
    },
    "test_composite_3_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m2": {
                    "name": "Model",
                    "submodels": {
                        "m2": {
                            "name": "Model",
                            "submodels": {
                                "m2": {
                                    "name": "Model",
                                    "submodels": {
                                        "m2": {
                                            "name": "Model",
                                            "submodels": {
                                                "m1": {
                                                    "name": "Add"
                                                }
                                            },
                                            "connections" : { 
                                                "m1": {
                                                    "left": "left",
                                                    "right": "right",
                                                    "output": {
                                                        "name": "output", 
                                                        "expose": true
                                                    }
                                                }
                                            }                         
                                        },
                                        "m1": {
                                            "name": "Add"
                                        }
                                    },
                                    "connections": {
                                        "m2": {
                                            "left": "left",
                                            "output": {
                                                "name": "output", 
                                                "expose": true
                                            }
                                        },
                                        "m1": {
                                            "left": "left",
                                            "right": "right",
                                            "output": {"connect": [["m2","right"]]}
                                        }
                                    }
                                },
                                "m1": {
                                    "name": "Add"
                                }
                            },
                            "connections": {
                                "m2": {
                                    "left": "left",
                                    "output": {
                                        "name": "output", 
                                        "expose": true
                                    }
                                },
                                "m1": {
                                    "left": "left",
                                    "right": "right",
                                    "output": {"connect": [["m2","right"]]}
                                }
                            }
                        },
                        "m1": {
                            "name": "Add"
                        }
                    },
                    "connections": {
                        "m2": {
                            "left": "left",
                            "output": {
                                "name": "output", 
                                "expose": true
                            }
                        },
                        "m1": {
                            "left": "left",
                            "right": "right",
                            "output": {"connect": [["m2","right"]]}
                        }
                    }

                },
                "m1": {
                    "name": "Add"
                }
            },
            "connections": {
                "m2": {
                    "left": "left",
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                },
                "m1": {
                    "left": "left",
                    "right": "right",
                    "output": {"connect": [["m2","right"]]}
                }
            }
        },
        "inputs": {
            "left": [[[[1.0, 2.0, 3.0]]]],
            "right": [[[[3.0, 4.0, 5.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[8.0, 14.0, 20.0]]]]
            },
            "grad": {
                "left": [[[[5.0, 5.0, 5.0]]]],
                "right": [[[[1.0, 1.0, 1.0]]]]
            } 
        }
    },
    "test_composite_4_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m4": {
                    "name": "Relu"
                },
                "m3": {
                    "name": "Relu"
                },
                "m2": {
                    "name": "Relu"
                }, 
                "m1": {
                    "name": "Relu"
                }    
            },
            "connections" : { 
                "m4": {
                    "output": {
                        "name": "output", 
                        "expose": true
                    },
                    "input": "my_input"
                },
                "m3": {
                    "input": {"connect": [["m4","input"]]}
                },
                "m2": {
                    "input": {"connect": [["m4","input"]]}
                },
                "m1": {
                    "output": "my_input",
                    "input": "input1"
                }


            }
        },
        "inputs": {
            "input1": [[[[1.0, 2.0, 3.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[1.0, 2.0, 3.0]]]]
            },
            "grad": {
                "input1": [[[[1.0, 1.0, 1.0]]]]
            } 
        }
    },
    "test_composite_5_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m4": {
                    "name": "Relu"
                },
                "m3": {
                    "name": "Relu"
                },
                "m2": {
                    "name": "Relu"
                },
                "m1": {
                    "name": "Relu"
                }
            },
            "connections" : {
                "m4": {
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }, 
                "m3": {
                    "input": {"connect": [["m4","input"]]}
                },
                "m2": {
                    "output": {"connect": [["m3","input"]]},
                    "input": "my_input"
                },
                "m1": {
                    "input": {"connect": [["m2","input"]]}
                }
            }
        },
        "inputs": {
            "my_input": [[[[1.0, 2.0, 3.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[1.0, 2.0, 3.0]]]]
            },
            "grad": {
                "my_input": [[[[1.0, 1.0, 1.0]]]]
            } 
        }
    },
    "test_composite_6_extend_from_inputs": {
        "model": {
            "name": "Model",
            "submodels": {
                "m4": {
                    "name": "Relu"
                },
                "m3": {
                    "name": "Relu"
                },
                "m2": {
                    "name": "Relu"
                },
                "m1": {
                    "name": "Relu"
                }
            },
            "connections" : {
                "m4": {
                    "output": {
                        "name": "output", 
                        "expose": true
                    }
                }, 
                "m3": {
                    "input": {"connect": [["m4","input"]]}
                },
                "m2": {
                    "output": {"connect": [["m3","input"]]},
                    "input": "my_input"
                },
                "m1": {
                    "input": {"connect": [["m2","input"]]}
                }
            }
        },
        "inputs": {
            "my_input": [[[[1.0, 2.0, 3.0]]]]
        },
        "output_grads": {
            "output": [[[[1.0, 1.0, 1.0]]]]
        },
        "results": {
            "eval": {
                "output": [[[[1.0, 2.0, 3.0]]]]
            },
            "grad": {
                "my_input": [[[[1.0, 1.0, 1.0]]]]
            } 
        }
    },
    "test_composite_extend_numbers": {
        "model": {
            "name": "Model",
            "submodels": {
                "m1": {
                    "name": "Multiply"
                },
                "m2": {
                    "name": "Multiply"
                },
                "m3": {
                    "name": "Add"
                }  
            },
            "connections" : { 
                "m1": {
                    "left": "input1",
                    "right": 1
                },
                "m2": {
                    "left": 1,
                    "right": {"connect": [["m1","output"]]}
                },
                "m3": {
                    "left": {"connect": [["m2","output"]]},
                    "right": {"connect": [["m2","output"]]},
                    "output": "output"
                }


            }
        },
        "inputs": {
            "input1": [5.0]
        },
        "output_grads": {
            "output": [2.0]
        },
        "results": {
            "eval": {
                "output": [10]
            },
            "grad": {
                "input1": [4.0]
            } 
        }
    },
    "test_embeddig_1": {

        "model": {
            "name": "Embedding",
            "args":{
                "num_embeddings": 3,
                "dim": 4
            }
        },
        "static_keys": {"input": [0,1,2,0]},
        "inputs": {
            "embedding_matrix": [[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [9.0, 10.0, 11.0, 12.0]]
        },

        "output_grads": {
            "output": [[9.0, 10.0, 11.0, 12.0], [1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [1.0, 2.0, 3.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [9.0, 10.0, 11.0, 12.0], [1.0, 2.0, 3.0, 4.0]]
            },
            "grad": {
                "embedding_matrix": [[10.0, 12.0, 14.0, 16.0], [1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]]
            }
        }
    },
    "test_embeddig_2": {
        "model": {
            "name": "Embedding",
            "args":{
                "num_embeddings": 3,
                "dim": 4
            }
        },
        "static_keys": {"input": [0,0,0,0]},
        "inputs": {
            "embedding_matrix": [[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [9.0, 10.0, 11.0, 12.0]]
        },

        "output_grads": {
            "output": [[9.0, 10.0, 11.0, 12.0], [1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [1.0, 2.0, 3.0, 4.0]]
        },
        "results": {
            "eval": {
                "output": [[1.0, 2.0, 3.0, 4.0], [1.0, 2.0, 3.0, 4.0], [1.0, 2.0, 3.0, 4.0], [1.0, 2.0, 3.0, 4.0]]
            },
            "grad": {
                "embedding_matrix": [[16.0, 20.0, 24.0, 28.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]]
            }
        }
    },
    "test_embeddig_3": {
        "model": {
            "name": "Embedding",
            "args":{
                "num_embeddings": 3,
                "dim": 4
            }
        },
        "static_keys": {"input": [[0,1],[2,2]]},
        "inputs": {
            "embedding_matrix": [[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0], [9.0, 10.0, 11.0, 12.0]]
        },

        "output_grads": {
            "output": [[[9.0, 10.0, 11.0, 12.0], [1.0, 2.0, 3.0, 4.0]], [[5.0, 6.0, 7.0, 8.0], [1.0, 2.0, 3.0, 4.0]]]
        },
        "results": {
            "eval": {
                "output": [[[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]], [[9.0, 10.0, 11.0, 12.0], [9.0, 10.0, 11.0, 12.0]]]
            },
            "grad": {
                "embedding_matrix": [[9.0, 10.0, 11.0, 12.0], [1.0, 2.0, 3.0, 4.0], [6.0, 8.0, 10.0, 12.0]]
            }
        }
    },
    "test_rnn_cell_1": {
        "model": {
            "name": "RNNCell"
        },

        "inputs": {
            "prev_hidden": [[[0.0, -1.0]]],
            "input": [[[2.0, -3.4]]],
            "w_hh": [[1.7, 4.2], [2.0, 5.0]],
            "w_ih": [[2.0, 2.0], [1.0, 3.2]],
            "bias_h": [3.0, -10.0],
            "w_ho": [[1.0, 2.0], [-2.0, -1.0]],
            "bias_o": [3.0, 2]

        },
        "discard_keys": ["hidden_compl"],

        "output_grads": {
            "hidden": [[[1.0, 1.0]]],
            "output": [[[0.0, 0.0]]]
        },
        "results": {
            "eval": {
                "hidden": [[[0.9216685544064713, -1.0]]],
                "output": [[[5.9216685544064713, 4.8433371088129426]]]
            },
            "grad": {
                "prev_hidden": [[[0.255896028891085270453227159869727, 0.30105415163657090641556136455262]]],
                "input": [[[0.30105415163657090641556136455262, 0.15052707581828545320778068227631]]],
                "w_hh": [[0.0, 0.0], [-0.15052707581828545320778068227631, 0.0]],
                "w_ih": [[0.30105415163657090641556136455262, 0.0], [-0.511792057782170540906454319739454, 0.0]],
                "bias_h": [0.15052707581828545320778068227631, 0.0],
                "w_ho": [[0.0, 0.0], [0.0, 0.0]],
                "bias_o": [0.0, 0.0]

            }
        }
    },
    "test_rnn_cell_2": {
        "model": {
            "name": "RNNCell"
        },

        "inputs": {
            "prev_hidden": [[[1.0]]],
            "input": [[[2.1]]],
            "w_hh": [[3.2]],
            "w_ih": [[-1.1]],
            "bias_h": [-1.2],
            "w_ho": [[7.2]],
            "bias_o": [2.1]

        },
        "discard_keys": ["hidden_compl"],

        "output_grads": {
            "hidden": [[[1.7]]],
            "output": [[[-1.9]]]
        },
        "results": {
            "eval": {
                "hidden": [[[-0.300437097147654125660522252779025243663164649781319778374]]],
                "output": [[[-0.0631470994631097047557602200089817543747854784255024042928]]]
            },
            "grad": {
                "prev_hidden": [[[-34.87569874200557640329364368113546398208095630984361453830206783]]],
                "input": [[[11.98852144256441688863219001539031574384032873150874249754133582]]],
                "w_hh": [[-10.89865585687674262602926365035483249440029884682612954321939620]],
                "w_ih": [[-22.88717729944115951466145366574514823824062757833487204076073202]],
                "bias_h": [-10.89865585687674262602926365035483249440029884682612954321939620],
                "w_ho": [[0.5708304845805428387549922802801479629600128345845075789106]],
                "bias_o": [-1.9]

            }
        }
    },
    "test_lstm_cell_1": {
        "model": {
            "name": "LSTMCell"
        },

        "inputs": {
            "prev_hidden": [[[1.0]]],
            "input": [[[1.0]]],
            "prev_cell": [[[1.0]]],
            "w_f": [[1.0], [1.0]],
            "w_i": [[1.0], [1.0]],
            "w_c": [[1.0], [1.0]],
            "w_o": [[1.0], [1.0]],
            "w_out": [[1.0]],
            "bias_f": [1.0],
            "bias_i": [1.0],
            "bias_c": [1.0],
            "bias_o": [1.0],
            "bias_out": [1.0]

        },
        "discard_keys": ["hidden_compl"],

        "output_grads": {
            "hidden": [[[1.0]]],
            "output": [[[0.0]]],
            "cell": [[[0.0]]]
        },
        "results": {
            "eval": {
                "hidden": [[[0.9109227280812931585686358241838178854144232120023827603712958362]]],
                "cell": [[[1.9004375399560818408725857168063651418511261154981923692396923495]]],
                "output": [[[1.9109227280812931585686358241838178854144232120023827603712958362]]]
            },
            "grad": {
                "prev_hidden": [[[0.0513110084403012908650334881677500227535910166813259009456931235]]],
                "input": [[[0.0513110084403012908650334881677500227535910166813259009456931235]]],
                "prev_cell": [[[0.0776172505564555309230266017544272692221476521847844648471023108]]],
                "w_f": [[0.0036810658812818846616798264267652548336548530698349297724757622], [0.0036810658812818846616798264267652548336548530698349297724757622]],
                "w_i": [[0.0036628621038035730994374021886306326845489700375767001273684931], [0.0036628621038035730994374021886306326845489700375767001273684931]],
                "w_c": [[0.0007657746786692736350977147871730964671900110964263243607840487], [0.0007657746786692736350977147871730964671900110964263243607840487]],
                "w_o": [[0.0432013057765465594688185447651810387681971824774879466850648197], [0.0432013057765465594688185447651810387681971824774879466850648197]],
                "w_out": [[0.0]],
                "bias_f": [0.0036810658812818846616798264267652548336548530698349297724757622],
                "bias_i": [0.0036628621038035730994374021886306326845489700375767001273684931],
                "bias_c": [0.0007657746786692736350977147871730964671900110964263243607840487],
                "bias_o": [0.0432013057765465594688185447651810387681971824774879466850648197],
                "bias_out": [0.0]
            }
        }
    }
}