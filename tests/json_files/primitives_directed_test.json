{
    "test_buffer_1": {
        "model": "Buffer",
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [-1.0], [-2.0], [-3.0]],
        "results": {
            "eval": [[1.0], [2.0], [3.0], [4.0]],
            "grad": {
                "input": [[1.0], [-1.0], [-2.0], [-3.0]]
            }
        }
    },
    "test_buffer_2": {
        "model": "Buffer",
        "inputs": {
            "input": [[1.0, 2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, 2.0], [2.0, 0.0]],
            "grad": {
                "input": [[1.0, 1.0], [1.0, 1.0]]
            }
        }
    },
    "test_buffer_3": {
        "model": "Buffer",
        "inputs": {
            "input": [[1.0, 2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 2.0], [2.0, 1.0]],
        "results": {
            "eval": [[1.0, 2.0], [2.0, 0.0]],
            "grad": {
                "input": [[1.0, 2.0], [2.0, 1.0]]
            }
        }
    },
    "test_matmul_1": {
        "model": "MatrixMultiply",
        "inputs": {
            "left": [[1.0, 2.0, 3.0, 5.0]],
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[34.0]],
        "results": {
            "eval": [[34.0]],
            "grad": {
                "left": [[34.0, 68.0, 102.0, 136.0]],
                "right": [[34.0], [68.0], [102.0], [170.0]]
            }
        }
    },
    "test_mult_1": {
        "model": "Multiply",
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [6.0]],
        "results": {
            "eval": [[1.0], [4.0], [9.0], [20.0]],
            "grad": {
                "left": [[1.0], [4.0], [9.0], [30.0]], 
                "right": [[1.0], [4.0], [9.0], [24.0]]
            }
        }
    },
    "test_mult_2": {
        "model": "Multiply",
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [5.0]],
        "results": {
            "eval": [[2.0], [4.0], [6.0], [8.0]],
            "grad": {
                "left": [34.0],
                "right": [[2.0], [4.0], [6.0], [10.0]]
            }
        }
    },
    "test_mult_3": {
        "model": "Multiply",
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },
        "output_grad": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
        "results": {
            "eval": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
            "grad": {
                "left": [[1.0,  8.0, 27.0], [4.0, 20.0, 54.0]],
                "right": [17.0,  58.0, 135.0]
            }
        }
    },
    "test_mult_4": {
        "model": "Multiply",
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
        "results": {
            "eval": [[1.0, 4.0], [3.0, 8.0], [5.0, 12.0]],
            "grad": {
                "left": [35.0, 56.0],
                "right": [[1.0,  4.0], [3.0,  8.0], [5.0, 12.0]]
            }
        }
    },
    "test_mult_5": {
        "model": "Multiply",
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 4.0], [9.0, 16.0]], [[5.0, 12.0], [21.0, 32.0]]],
            "grad": {
                "left": [[28.0, 32.0], [32.0, 28.0]],
                "right": [[[8.0,  14.0], [18.0, 20.0]], [[4.0, 6.0], [6.0, 4.0]]]
            }
        }
    },
    "test_mult_6": {
        "model": "Multiply",
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 4.0], [3.0, 8.0]], [[5.0, 12.0], [7.0, 16.0]]],
            "grad": {
                "left": [60.0, 60.0],
                "right": [[[8.0, 14.0], [6.0, 10.0]], [[4.0, 6.0], [2.0, 2.0]]]
            }
        }
    },
    "test_div_1": {
        "model": "Divide",
        "inputs": {
            "numerator": [[1.0], [2.0], [3.0], [4.0]], 
            "denominator": [[1.0], [2.0], [3.0], [5.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [6.0]],
        "results": {
            "eval": [[1.0], [1.0], [1.0], [0.8]],
            "grad": {
                "numerator": [[1.0], [1.0], [1.0], [1.2]],
                "denominator": [[-1.0], [-1.0], [-1.0], [-0.96]]
            }
        }
    },
    "test_div_2": {
        "model": "Divide",
        "inputs": {
            "numerator": [2.0], 
            "denominator": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [5.0]],
        "results": {
            "eval": [[2.0], [1.0], [0.66666666666666], [0.5]],
            "grad": {
                "numerator": [4.25],
                "denominator": [[-2.0], [-1.0], [-0.66666666666667], [-0.625]]
            }
        }
    },
    "test_div_3": {
        "model": "Divide",
        "inputs": {
            "numerator": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "denominator": [1.0, 2.0, 3.0]
        },
        "output_grad": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
        "results": {
            "eval": [[1.0, 1.0, 1.0], [4.0, 2.5, 2.0]],
            "grad": {
                "numerator": [[1.0,  2.0, 3.0], [4.0, 5.0, 6.0]],
                "denominator": [-17.0, -14.5, -15.0]
            }
        }
    },
    "test_div_4": {
        "model": "Divide",
        "inputs": {
            "numerator": [1.0, 2.0],
            "denominator": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
        "results": {
            "eval": [[1.0, 1.0], [0.333333333333333, 0.5], [0.2, 0.333333333333333]],
            "grad": {
                "numerator": [3.0, 3.0],
                "denominator": [[-1.0, -1.0], [-0.333333333333333, -0.5], [-0.2, -0.333333333333333]]
            }
        }
    },
    "test_div_5": {
        "model": "Divide",
        "inputs": {
            "numerator": [[1.0, 2.0], [3.0, 4.0]], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 1.0], [1.0, 1.0]], [[0.2, 0.333333333333333], [0.42857142857142855, 0.5]]],
            "grad": {
                "numerator": [[8.8, 4.0], [2.2857142857142856, 1.375]],
                "denominator": [[[-8.0, -3.5], [-2.0, -1.25]], [[-0.16, -0.16666666666666666], [-0.12244897959183673, -0.0625]]]
            }
        }    
    },
    "test_div_6": {
        "model": "Divide",
        "inputs": {
            "numerator": [1.0, 2.0], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 1.0], [0.3333333333333333, 0.5]], [[0.2, 0.3333333333333333 ], [0.14285714285714285, 0.25]]],
            "grad": {
                "numerator": [11.085714285714287, 5.375],
                "denominator": [[[-8.0, -3.5], [-0.6666666666666666 , -0.625]], [[-0.16, -0.16666666666666666],[-0.04081632653061224, -0.03125]]]
            }
        }
    },
    
    "test_floor_div_1": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [[1.0], [2.0], [3.0], [4.0]], 
            "denominator": [[1.0], [2.0], [3.0], [5.0]]
        },
        "results": {
            "eval": [[1.0], [1.0], [1.0], [0.0]]
        }
    },

    "test_floor_div_2": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [2.0], 
            "denominator": [[1.0], [2.0], [3.0], [4.0]]
        },
        "results": {
            "eval": [[2.0], [1.0], [0.0], [0.0]]
        }
    },

    "test_floor_div_3": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "denominator": [1.0, 2.0, 3.0]
        },
        "results": {
            "eval": [[1.0, 1.0, 1.0], [4.0, 2.0, 2.0]]
        }
    },

    "test_floor_div_4": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [1.0, 2.0],
            "denominator": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "results": {
            "eval": [[1.0, 1.0], [0.0, 0.0], [0.0, 0.0]]
        }
    },

    "test_floor_div_5": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [[1.0, 2.0], [3.0, 4.0]], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "results": {
            "eval": [[[1.0, 1.0], [1.0, 1.0]], [[0.0, 0.0], [0.0, 0.0]]]
        }    
    },

    "test_floor_div_6": {
        "model": "FloorDivide",
        "inputs": {
            "numerator": [1.0, 2.0], 
            "denominator": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "results": {
            "eval": [[[1.0, 1.0], [0.0, 0.0]], [[0.0, 0.0 ], [0.0, 0.0]]]
        }
    },

    

    "test_shift_left_1": {
        "model": "ShiftLeft",
        "inputs": {
            "input": [[1], [0], [3], [4]],
            "shift": 1
        },
        "results": {
            "eval": [[2], [0], [6], [8]]
        }
    },

    "test_shift_left_2": {
        "model": "ShiftLeft",
        "inputs": {
            "input": [[1], [-1], [3], [4]],
            "shift": 2
        },
        "results": {
            "eval": [[4], [-4], [12], [16]]
        }
    },

    "test_shift_left_3": {
        "model": "ShiftLeft",
        "inputs": {
            "input": 2,
            "shift": [[1], [-1], [3], [4]]
        },
        "results": {
            "eval": [[4], [0], [16], [32]]
        }
    },

    "test_shift_right_1": {
        "model": "ShiftRight",
        "inputs": {
            "input": [[1], [0], [3], [4]],
            "shift": 1
        },
        "results": {
            "eval": [[0], [0], [1], [2]]
        }
    },

    "test_shift_right_2": {
        "model": "ShiftRight",
        "inputs": {
            "input": [[1], [-1], [3], [4]],
            "shift": 2
        },
        "results": {
            "eval": [[0], [-1], [0], [1]]
        }
    },

    "test_shift_right_3": {
        "model": "ShiftRight",
        "inputs": {
            "input": 32,
            "shift": [[1], [-1], [3], [4]]
        },
        "results": {
            "eval": [[16], [0], [4], [2]]
        }
    },

    "test_sum_1": {
        "model": "Add",
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [6.0]],
        "results": {
            "eval": [[2.0], [4.0], [6.0], [9.0]],
            "grad": {
                "left": [[1.0], [2.0], [3.0], [6.0]], 
                "right": [[1.0], [2.0], [3.0], [6.0]]
            }
        }
    },
    "test_sum_2": {
        "model": "Add",
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [5.0]],
        "results": {
            "eval": [[3.0], [4.0], [5.0], [6.0]],
            "grad": {
                "left": [11.0],
                "right": [[1.0], [2.0], [3.0], [5.0]]
            }
        }
    },
    "test_sum_3": {
        "model": "Add",
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },
        "output_grad": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
        "results": {
            "eval": [[2.0, 4.0, 6.0], [5.0, 7.0, 9.0]],
            "grad": {
                "left": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
                "right": [5.0, 14.0, 27.0]
            }
        }
    },
    "test_sum_4": {
        "model": "Add",
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
        "results": {
            "eval": [[2.0, 4.0], [4.0, 6.0], [6.0, 8.0]],
            "grad": {
                "left": [9.0, 12.0],
                "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
            }
        }
    },
    "test_sum_5": {
        "model": "Add",
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[2.0, 4.0], [6.0, 8.0]], [[6.0, 8.0], [10.0, 12.0]]],
            "grad": {
                "left": [[12.0, 10.0], [8.0, 6.0]],
                "right": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
            }
        }
    },
    "test_sum_6": {
        "model": "Add",
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[2.0, 4.0], [4.0, 6.0]], [[6.0, 8.0], [8.0, 10.0]]],
            "grad": {
                "left": [20.0, 16.0],
                "right": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]]
            }
        }
    },
    "test_sub_1": {
        "model": "Subtract",
        "inputs": {
            "left": [[1.0], [2.0], [3.0], [4.0]], 
            "right": [[1.0], [2.0], [3.0], [5.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [6.0]],
        "results": {
            "eval": [[0.0], [0.0], [0.0], [-1.0]],
            "grad": {
                "left": [[1.0], [2.0], [3.0], [6.0]], 
                "right": [[-1.0], [-2.0], [-3.0], [-6.0]]
            }
        }
    },
    "test_sub_2": {
        "model": "Subtract",
        "inputs": {
            "left": [2.0], 
            "right": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [5.0]],
        "results": {
            "eval": [[1.0], [0.0], [-1.0], [-2.0]],
            "grad": {
                "left": [11.0],
                "right": [[-1.0], [-2.0], [-3.0], [-5.0]]
            }
        }
    },
    "test_sub_3": {
        "model": "Subtract",
        "inputs": {
            "left": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "right": [1.0, 2.0, 3.0]
        },
        "output_grad": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
        "results": {
            "eval": [[0.0, 0.0, 0.0], [3.0, 3.0, 3.0]],
            "grad": {
                "left": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
                "right": [-5.0, -14.0, -27.0]
            }
        }
    },
    "test_sub_4": {
        "model": "Subtract",
        "inputs": {
            "left": [1.0, 2.0],
            "right": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
        "results": {
            "eval": [[0.0, 0.0], [-2.0, -2.0], [-4.0, -4.0]],
            "grad": {
                "left": [9.0, 12.0],
                "right": [[-1.0, -2.0], [-3.0, -4.0], [-5.0, -6.0]]
            }
        }
    },
    "test_sub_5": {
        "model": "Subtract",
        "inputs": {
            "left": [[1.0, 2.0], [3.0, 4.0]], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[0.0, 0.0], [0.0, 0.0]], [[-4.0, -4.0], [-4.0, -4.0]]],
            "grad": {
                "left": [[12.0, 10.0], [8.0, 6.0]],
                "right": [[[-8.0, -7.0], [-6.0, -5.0]], [[-4.0, -3.0], [-2.0, -1.0]]]
            }
        }
    },
    "test_sub_6": {
        "model": "Subtract",
        "inputs": {
            "left": [1.0, 2.0], 
            "right": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[0.0, 0.0], [-2.0, -2.0]], [[-4.0, -4.0], [-6.0, -6.0]]],
            "grad": {
                "left": [20.0, 16.0],
                "right": [[[-8.0, -7.0], [-6.0, -5.0]], [[-4.0, -3.0], [-2.0, -1.0]]]
            }
        }
    },
    "test_power_1": {
        "model": "Power",
        "inputs": {
            "base": [[1.0], [2.0], [3.0], [4.0]], 
            "exponent": [[1.0], [2.0], [3.0], [5.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [6.0]],
        "results": {
            "eval": [[1.0], [4.0], [27.0], [1024.0]],
            "grad": {
                "base": [[1.0], [8.0], [81.0], [7680.0]],
                "exponent": [[0.0], [5.545177444479562e+00], [8.898759538211689e+01], [8.517392554720607e+03]]
            }
        }
    },
    "test_power_2": {
        "model": "Power",
        "inputs": {
            "base": [2.0], 
            "exponent": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [2.0], [3.0], [5.0]],
        "results": {
            "eval": [[2.0], [4.0], [8.0], [16.0]],
            "grad": {
                "base": [205.0],
                "exponent": [[1.3862943611198906], [5.545177444479562], [16.635532333438686 ], [55.451774444795625]]
            }
        }
    },
    "test_power_3": {
        "model": "Power",
        "inputs": {
            "base": [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]], 
            "exponent": [1.0, 2.0, 3.0]
        },
        "output_grad": [[1.0, 4.0, 9.0], [4.0, 10.0, 18.0]],
        "results": {
            "eval": [[1.0, 4.0,  27.0], [4.0,  25.0, 216.0]],
            "grad": {
                "base": [[1.0, 16.0, 243.0], [4.0, 100, 1944.0]],
                "exponent": [22.18070977791825,  413.4498329974842 , 7233.323602505028]
            } 
        }
    },
    "test_power_4": {
        "model": "Power",
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
        "results": {
            "eval": [[1.0,  4.0], [1.0, 16.0], [1.0, 64.0]],
            "grad": {
                "base": [35.0, 1288.0],
                "exponent": [[0.0, 5.545177444479562], [0.0, 44.3614195558365], [0.0, 266.168517335019]]
            }
        }
    },
    "test_power_5": {
        "model": "Power",
        "inputs": {
            "base": [[1.0, 2.0], [3.0, 4.0]], 
            "exponent": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0000e+00, 4.0000e+00], [2.7000e+01, 2.5600e+02]], [[1.0000e+00, 6.4000e+01], [2.1870e+03, 6.5536e+04]]],
            "grad": {
                "base": [[28.0, 604.000], [10368.0, 132352.0]],
                "exponent": [[[0.0, 19.408121055678468], [177.97519076423379, 1774.4567822334600]], [[0.0, 133.08425866750949], [4805.3301506343123, 90852.187250353149]]]
            }
        }
    },
    "test_power_6": {
        "model": "Power",
        "inputs": {
            "base": [1.0, 2.0], 
            "exponent": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 4.0], [1.0, 16.0]], [[1.0, 64.0], [1.0, 256.0]]],
            "grad": {
                "base": [60.0, 1788.0],
                "exponent": [[[0.0, 19.408121055678468], [0.0, 55.451774444795625]], [[0.0, 133.0842586675095], [0.0, 177.445678223346]]]
            }
        }
    },
    "test_exp": {
        "model": "Exponential",
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },
        "output_grad": [[4.0, 3.0], [2.0, 1.0]],
        "results": {
            "eval": [[2.718281828459045,  7.38905609893065 ], [20.085536923187668, 54.598150033144236]],
            "grad": {
                "input": [[10.87312731383618 , 22.16716829679195 ], [40.171073846375336, 54.598150033144236]]
            }
        }
    },
    "test_sqrt_1": {
        "model": "Sqrt",
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0,  1.4142135623730950488], [1.732050807568877293527446341505872, 2.0]],
            "grad": {
                "input": [[0.5 , 0.35355339059327373], [0.2886751345948129, 0.25]]
            }
        }
    },
    "test_sqrt_2": {
        "model": "Sqrt",
        "inputs": {
            "input": [[[[4.0, 16.0], [25.0, 100.0]]]]
        },
        "output_grad": [[[[3.0, 2.0], [5.0, 6.0]]]],
        "results": {
            "eval": [[[[2.0,  4.0], [5.0, 10.0]]]],
            "grad": {
                "input": [[[[0.75 , 0.25], [0.5, 0.3]]]]
            }
        }
    },
    "test_sqrt_3": {
        "model": "Sqrt",
        "inputs": {
            "input": [10000.0]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [100.0],
            "grad": {
                "input": [0.005]
            }
        }
    },
    "test_robust_sqrt_1": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0,  1.4142135623730950488], [1.732050807568877293527446341505872, 2.0]],
            "grad": {
                "input": [[0.5 , 0.35355339059327373], [0.2886751345948129, 0.25]]
            }
        }
    },
    "test_robust_sqrt_2": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[[[4.0, 16.0], [25.0, 100.0]]]]
        },
        "output_grad": [[[[3.0, 2.0], [5.0, 6.0]]]],
        "results": {
            "eval": [[[[2.0,  4.0], [5.0, 10.0]]]],
            "grad": {
                "input": [[[[0.75 , 0.25], [0.5, 0.3]]]]
            }
        }
    },
    "test_robust_sqrt_3": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [10000.0]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [100.0],
            "grad": {
                "input": [0.005]
            }
        }
    },
    "test_robust_sqrt_4": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[0.0, -4.0], [-1.0, -4.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.0, 2.0], [1.0, 2.0]],
            "grad": {
                "input": {
                    "jax":  [[6.703903964971299e+153, -0.25], [-0.5, -0.25]],
                    "torch": [[0.0, -0.25], [-0.5, -0.25]],
                    "numpy": [[0.0, -0.25], [-0.5, -0.25]]
                }
            }
        }
    },
    "test_robust_sqrt_5": {
        "model": {
            "name": "Sqrt",
            "args": {
                "robust": true, 
                "cutoff": 1e-20
            }
        },
        "inputs": {
            "input": [[0.9999999999999e-20, 1.0000000000001e-20, 0.0]]
        },
        "output_grad": [[1.0, 1.0, 1.0]],
        "results": {
            "eval": [[9.999999999999e-11, 1.0000000000000499999999999987500000000000624e-10, 0.0]],
            "grad": {
                "input": {
                    "jax":  [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 1e10]],
                    "torch": [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 0.0]],
                    "numpy": [[1e10, 4.99999999999975000000000001874999999999843750000000013e9, 0.0]]
                }
            }
        }
    },
    "test_sin": {
        "model": "Sine",
        "inputs": {
            "input": [[0.5235987755982988, 1.0471975511965976], [1.0, 45.0], [90.0, 145.0]]
        },
        "output_grad": [[6.0, 5.0],[4.0, 3.0], [2.0, 1.0]],
        "results": {
            "eval": [[0.49999999999999994, 0.8660254037844386], [0.8414709848079,  0.85090352453412 ], [0.89399666360056, 0.46774516204513]],
            "grad": {
                "input": [[5.196152422706632, 2.5000000000000004], [ 2.16120922347256,  1.57596596645319], [-0.89614723225834,  0.8838633737085 ]]
            }
        }
    },
    "test_cos": {
        "model": "Cosine",
        "inputs": {
            "input": [[0.5235987755982988, 1.0471975511965976], [1.0, 45.0], [90.0, 145.0]]
        },
        "output_grad": [[6.0, 5.0] ,[4.0, 3.0], [2.0, 1.0]],
        "results": {
            "eval": [[ 0.8660254037844387,  0.5000000000000001], [0.54030230586814, 0.52532198881773], [-0.44807361612917,  0.8838633737085 ]],
            "grad": {
                "input": [[-2.9999999999999996, -4.330127018922193], [-3.36588393923159, -2.55271057360236], [-1.78799332720112, -0.46774516204513]]
            }
        }
    },
    "test_abs": {
        "model": "Absolute",
        "inputs": {
            "input": [[-1.0, 0.0], [1.0, -2.0]]
        },
        "output_grad": [[-2.0, -1.0], [0.0, 1.0]],
        "results": {
            "eval": [[1.0, 0.0], [1.0, 2.0]],
            "grad": {
                    "input": {
                        "jax": [[2.0, -1.0], [0.0, -1.0]],
                        "torch": [[2.0, 0.0], [0.0, -1.0]],
                        "numpy": [[2.0, 0.0], [0.0, -1.0]]
                    }
                    }
        }
    },
    "test_concat": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 3
            }
        },
        "inputs": {
            "input1": [1.0, 2.0, 3.0, 4.0],
            "input2": [5.0, 6.0, 7.0, 8.0],
            "input3": [9.0, 10.0, 11.0, 12.0]
        },
        "output_grad": [-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0],
        "results": {
            "eval": [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0],
            "grad": {
                "input1": [-1.0, -2.0, -3.0, -4.0],
                "input2": [-5.0, -6.0, 7.0, 8.0],
                "input3": [9.0, 10.0, 11.0, 12.0]
            } 
        }
    },
    "test_transpose": {
        "model": "Transpose",
        "inputs": {
            "input": [[[1.0, 2.0], [3.0, 4.0]], [[5.0, 6.0], [7.0, 8.0]]]
        },
        "output_grad": [[[8.0, 7.0], [6.0, 5.0]], [[4.0, 3.0], [2.0, 1.0]]],
        "results": {
            "eval": [[[1.0, 5.0], [3.0, 7.0]], [[2.0, 6.0], [4.0, 8.0]]],
            "grad": {
                "input": [[[8.0, 4.0], [6.0, 2.0]], [[7.0, 3.0], [5.0, 1.0]]]
            }
        }
    },
    "test_transpose_axis_1": {
        "model": {
            "name": "Transpose",
            "args": {
                "axes": [0,2,1]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[1.0, 3.0], [2.0, 4.0]], [[1.0, 3.0], [2.0, 4.0]], [[1.0, 3.0], [2.0, 4.0]]]
        },
        "output_grad": [[[1.0, 1.0], [1.0, 1.0]], [[2.0, 2.0], [2.0, 2.0]], [[3.0, 3.0], [3.0, 3.0]]],
        "results": {
            "eval": [[[1.0, 2.0], [3.0, 4.0]], [[1.0, 2.0], [3.0, 4.0]], [[1.0, 2.0], [3.0, 4.0]]],
            "grad": {
                "input": [[[1.0, 1.0], [1.0, 1.0]], [[2.0, 2.0], [2.0, 2.0]], [[3.0, 3.0], [3.0, 3.0]]]
            }
        }
    },
    "test_transpose_axis_2": {
        "model": {
            "name": "Transpose",
            "args": {
                "axes": [0]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [3.0]
        },
        "output_grad": [7.0],
        "results": {
            "eval": [3.0],
            "grad": {
                "input": [7.0]
            }
        }
    },
    "test_transpose_axis_3": {
        "model": {
            "name": "Transpose",
            "args": {
                "axes": [1,4,3,2,0]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[[[2.0]]]], [[[[3.0]]]]]
        },
        "output_grad": [[[[[4.0, 5.0]]]]],
        "results": {
            "eval": [[[[[2.0, 3.0]]]]],
            "grad": {
                "input": [[[[[4.0]]]], [[[[5.0]]]]]
            }
        }
    },
    "test_transpose_axis_4": {
        "model": {
            "name": "Transpose",
            "args": {
                "axes": [2,4,3,0,1]
            },
            "tuples": ["axes"]
        },
        "inputs": {
            "input": [[[[[2.0]]]], [[[[3.0]]]]]
        },
        "output_grad": [[[[[4.0], [5.0]]]]],
        "results": {
            "eval": [[[[[2.0], [3.0]]]]],
            "grad": {
                "input": [[[[[4.0]]]], [[[[5.0]]]]]
            }
        }
    },
    "test_concat_last_axis_1": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 2,
                "axis": -1
            }
        },
        "inputs": {
            "input1": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ], 
            "input2": [[1.0], [2.0], [3.0]]
        },
        "output_grad": [
            [1.0, 2.0, 3.0], 
            [4.0, 5.0, 6.0], 
            [7.0, 8.0, 9.0]
        ],
        "results": {
            "eval": [
                [1.0, 2.0, 1.0], 
                [3.0, 4.0, 2.0], 
                [5.0, 6.0, 3.0]
            ],
            "grad": {
                "input1": [[1.0, 2.0], [4.0, 5.0], [7.0, 8.0]], 
                "input2": [[3.0], [6.0], [9.0]]
            }
        }
    },
    "test_concat_last_axis_2": {
        "model": {
            "name": "Concat",
            "args": {
                "n": 2,
                "axis": -1
            }
        },
        "inputs": {
            "input1": [
                [[1.0, 2.0], 
                [3.0, 4.0]], 
                [[5.0, 6.0], 
                [7.0, 8.0]]
            ], 
            "input2": [
                [[1.0, 2.0, 3.0, 4.0], 
                [3.0, 4.0, 5.0, 6.0]], 
                [[5.0, 6.0, 7.0, 8.0], 
                [7.0, 8.0, 9.0, 10.0]]
            ]
        },
        "output_grad": [
            [[1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 
            [1.0, 2.0, 1.0, 2.0, 1.0, 2.0]], 
            [[2.0, 3.0, 2.0, 3.0, 2.0, 3.0], 
            [3.0, 2.0, 3.0, 2.0, 3.0, 2.0]]
        ],
        "results": {
            "eval": [
                [[1.0, 2.0, 1.0, 2.0, 3.0, 4.0], 
                [3.0, 4.0, 3.0, 4.0, 5.0, 6.0]], 
                [[5.0, 6.0, 5.0, 6.0, 7.0, 8.0], 
                [7.0, 8.0, 7.0, 8.0, 9.0, 10.0]]
            ],
            "grad": {
                "input1": [[[1.0, 2.0], 
                            [1.0, 2.0]], 
                            [[2.0, 3.0], 
                            [3.0, 2.0]]], 
                "input2": [[[1.0, 2.0, 1.0, 2.0], 
                            [1.0, 2.0, 1.0, 2.0]], 
                            [[2.0, 3.0, 2.0, 3.0], 
                            [3.0, 2.0, 3.0, 2.0]]]
            }  
        }
    },
    "test_tensor_slice_1": {

        "model": {
            "name": "TensorSlice",
            "args": {
                "start": 0,
                "stop": 1,
                "step": null
            }
        },
        "inputs": {
            "input": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ]
        },

        "output_grad": [[5.0, 6.0]],

        "results": {
            "eval": [[1.0, 2.0]], 
            "grad": {
                "input": [[5.0, 6.0], 
                          [0.0, 0.0], 
                          [0.0, 0.0]]
            }
        }
    },

    "test_tensor_slice_2": {

        "model": {
            "name": "TensorSlice",
            "args": {
                "start": 0,
                "stop": 2,
                "step": null
            }
        },
        "inputs": {
            "input": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ]
        },

        "output_grad": [[3.0, 0.0], [2.0, 1.0]],

        "results": {
            "eval": [[1.0, 2.0], [3.0, 4.0]], 
            "grad": {
                "input": [
                    [3.0, 0.0], 
                    [2.0, 1.0], 
                    [0.0, 0.0]
                ]
            }
        }
    },
    "test_tanh_1": {
        "model": "Tanh",
        "inputs": {
            "input": [[10.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.9999999958776928]],
            "grad": {
                "input": [[0.000000008244614383]]
            }
        }
    },
    "test_tanh_2": {
        "model": "Tanh",
        "inputs": {
            "input": [[30.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[1]],
            "grad": {
                "input": [[0.0]]
            }
        }
    },
    "test_tanh_3": {
        "model": "Tanh",
        "inputs": {
            "input": [[2.220446049250313e-16]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.0000000000000002220446049250313]],
            "grad": {
                "input": [[0.9999999999999999999999999999999507]]
            }
        }
    },
    "test_tanh_4": {
        "model": "Tanh",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.76159415595576488811945828, -0.964027580075816883946413724], [0.9640275800758168839464137, 0.0]],
            "grad": {
                "input": [[0.419974341614026069394496739, 0.0706508248531644656862477], [0.0706508248531644656862476, 1.0]]
            }
        }
    },
    "test_tanh_5": {
        "model": "Tanh",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 0.0], [3.0, 1.0]],
        "results": {
            "eval": [[0.76159415595576488811945828, -0.964027580075816883946413724], [0.9640275800758168839464137, 0.0]],
            "grad": {
                "input": [[0.419974341614026069394496739, 0.0], [0.2119524745594934, 1.0]]
            }
        }
    },
    "test_sigmoid_1": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[20.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.9999999979388464]],
            "grad": {
                "input": [[0.00000000206115359575164583720704]]
            }
        }
    },
    "test_sigmoid_2": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.73105857863000487925115924, 0.1192029220221175559402708587], [0.8807970779778824440597, 0.5]],
            "grad": {
                "input": [[0.1966119332414818525374, 0.1049935854035065173486], [0.1049935854035065173486, 0.25]]
            }
        }
    },
    "test_sigmoid_3": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[-30.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.0000000000000936]],
            "grad": {
                "input": [[0.00000000000009359999999999123904]]
            }
        }
    },
    "test_sigmoid_4": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[919.78546867]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[1.0]],
            "grad": {
                "input": [[0.0]]
            }
        }
    },
    "test_sigmoid_5": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[-919.78546867]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.0]],
            "grad": {
                "input": [[0.0]]
            }
        }
    },
    "test_sigmoid_6": {
        "model": "Sigmoid",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.5], [1.0, 0.0]],
        "results": {
            "eval": [[0.73105857863000487925115924, 0.1192029220221175559402708587], [0.8807970779778824440597, 0.5]],
            "grad": {
                "input": [[0.1966119332414818525374, 0.1574903781052598], [0.1049935854035065173486, 0.0]]
            }
        }
    },
    "test_softplus_1": {
        "model": "Softplus",
        "inputs": {
            "input": [[2.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[2.1269280110429725]],
            "grad": {
                "input": [[0.8807970779778824]]
            }
        }
    },
    "test_softplus_2": {
        "model": "Softplus",
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },
        "output_grad": [[1.0, 1.0, 1.0]],
        "results": {
            "eval": [[0.6931471805599453, 2.1269280110429725, 0.0000000000000935]],
            "grad": {
                "input": [[0.5, 0.8807970779778824, 0.0000000000000936]]
            }
        }
    },
    "test_softplus_3": {
        "model": "Softplus",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.313261687518222834049, 0.1269280110429724964437], [2.126928011042972496444, 0.6931471805599453094172]],
            "grad": {
                "input": [[0.7310585786300048792512, 0.1192029220221175559403], [0.8807970779778824440597, 0.5]]
            }
        }
    },
    "test_softplus_4": {
        "model": "Softplus",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[2.0, 1.0], [1.0, 10.2]],
        "results": {
            "eval": [[1.313261687518222834049, 0.1269280110429724964437], [2.126928011042972496444, 0.6931471805599453094172]],
            "grad": {
                "input": [[1.4621171572600098, 0.1192029220221175559403], [0.8807970779778824440597, 5.1]]
            }
        }
    },
    "test_permute_tensor_1": {
        "model": {
            "name": "PermuteTensor"
        },
        "inputs": {
            "input": [
                [1.0, 2.0], 
                [3.0, 4.0], 
                [5.0, 6.0]
            ]
        },
        "static_inputs": {
            "indices": [2, 0, 1]
        },
        "output_grad": [
            [-1.0, 3.0], 
            [5.0, 2.0], 
            [4.0, 1.0]
        ],
        "results": {
            "eval": [
                [5.0, 6.0], 
                [1.0, 2.0], 
                [3.0, 4.0]
            ],
            "grad": {
                "input":[
                    [5.0, 2.0], 
                    [4.0, 1.0], 
                    [-1.0, 3.0]
                ]
            }
        }
    },
    "test_permute_tensor_2": {
        "model": {
            "name": "PermuteTensor"
        },
        "inputs": {
            "input": [
                [[1.0, 2.0]], 
                [[3.0, 4.0]], 
                [[5.0, 6.0]]
            ]
        },
        "static_inputs": {
            "indices": [0, 2, 1]
        },
        "output_grad": [
            [[3.0, 0.0]], 
            [[4.0, 1.0]], 
            [[5.0, 2.0]]
        ],
        "results": {
            "eval": [
                [[1.0, 2.0]], 
                [[5.0, 6.0]], 
                [[3.0, 4.0]]
            ],
            "grad": {
                "input":[[[3.0, 0.0]], 
                         [[5.0, 2.0]], 
                         [[4.0, 1.0]]]
            }
        }
    },
    "test_primitive_squared_error_1": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1.0], [2], [3], [4]]
        },
        "static_inputs": {
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "output_grad": [[1.0], [1], [1], [1]],
        "results": {
            "eval": [[0.09], [1.21], [3.61], [7.29]],
            "grad": {
                "input": [[0.6], [2.20], [3.80], [5.40]]
            }
        }
    },
    "test_primitive_squared_error_2": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1], [-1000000], [0.000000000001], [-1.5]]
        },
        "static_inputs": {
            "target": [[1], [-1000000], [0.000000000001], [-1.5]]
        },
        "output_grad": [[1.0], [1], [1], [1]],
        "results": {
            "eval": [[0.0], [0.0], [0.0], [0.0]],
            "grad": {
                "input": [[0.0], [0.0], [0.0], [0.0]]
            }
        }
    },
    "test_primitive_squared_error_3": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[0.1, 0.2], [1000000000.0, 0.0000000001]]
        },
        "static_inputs": {
            "target": [[0.1, 0.2], [0.0000000001, 1000000000.0]]
        },
        "output_grad": [[1.0, 1], [1, 1]],
        "results": {
            "eval": [[0.0, 0.0], [999999999999999999.8, 999999999999999999.8]],
            "grad": {
                "input": [[0.0, 0.0], [1999999999.9999999998, -1999999999.9999999998]]
            }
        }
    },
    "test_primitive_squared_error_4": {
        "model": {
            "name": "SquaredError"
        },
        "inputs": {
            "input": [[1.0, 2], [3, 4], [5, 6]]
        },
        "static_inputs": {
            "target": [[2.0, 3], [3, 4], [4, 5]]
        },
        "output_grad": [[1.0, 1], [1, 1], [1, 1]],
        "results": {
            "eval": [[1.0, 1.0], [0.0, 0.0], [1.0, 1.0]],
            "grad": {
                "input": [[-1.999999999999999999998, -1.999999999999999999998], [0.0, 0.0], [1.999999999999999999998, 1.999999999999999999998]]
            }
        }
    },
    "test_primitive_hinge_loss_1": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[2.0], [0.25]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1]],
        "results": {
            "eval": [[0.0], [1.25]],
            "grad": {
                "input": [[0.0], [1.0]]
            }
        }
    },
    "test_primitive_hinge_loss_2": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[1.0], [-1.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1]],
        "results": {
            "eval": [[0.0], [0.0]],
            "grad": {
                "input": [[-0.5], [0.5]]
            }
        }
    },
    "test_primitive_hinge_loss_3": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[0.0], [0.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.0], [1.0]],
            "grad": {
                "input": [[-1.0], [1.0]]
            }
        }
    },
    "test_absolute_error_1": {
        "model": "AbsoluteError",
        "inputs": {
            "input": [[1.0], [2.0], [3.0], [4.0]], 
            "target": [[0.7], [0.9], [1.1], [1.3]]
        },
        "output_grad": [[1.0], [1.0], [1.0], [1.0]],
        "results": {
            "eval": [[0.3], [1.1], [1.9], [2.7]], 

    
            "grad": {
                "input": {
                    "jax": [[1.0], [1.0], [1.0], [1.0]],
                    "torch": [[1.0], [1.0], [1.0], [1.0]],
                    "numpy": [[1.0], [1.0], [1.0], [1.0]]
                }, 
                "target": {
                    "jax": [[-1.0], [-1.0], [-1.0], [-1.0]],
                    "torch": [[-1.0], [-1.0], [-1.0], [-1.0]],
                    "numpy": [[-1.0], [-1.0], [-1.0], [-1.0]]
                }
                }                   
        }
    },
    "test_absolute_error_2": {
        "model": "AbsoluteError",
        "inputs": {
            "input": [[1.0], [-1000000.0], [0.000000000001], [-1.5]], 
            "target": [[1.0], [-1000000.0], [0.000000000001], [-1.5]]
        },
        "output_grad": [[1.0], [1.0], [1.0], [1.0]],
        "results": {
            "eval": [[0.0], [0.0], [0.0], [0.0]], 


            "grad": {
                    "input": {
                        "jax": [[1.0], [1.0], [1.0], [1.0]],
                        "torch": [[0.0], [0.0], [0.0], [0.0]],
                        "numpy": [[0.0], [0.0], [0.0], [0.0]]
                    }, 
                    "target": {
                        "jax": [[-1.0], [-1.0], [-1.0], [-1.0]],
                        "torch": [[0.0], [0.0], [0.0], [0.0]],
                        "numpy": [[0.0], [0.0], [0.0], [0.0]]
                    }
                    }
        }
    },
    "test_absolute_error_3": {
        "model": "AbsoluteError",
        "inputs": {
            "input": [[0.1, 0.2], [1000000000.0, 0.0000000001]], 
            "target": [[0.1, 0.2], [0.0000000001, 1000000000.0]]
        },
        "constants": ["input2"],
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.0, 0.0], [999999999.9999999999, 999999999.9999999999]], 

            "grad": {
                 "input": {
                    "jax": [[1.0, 1.0], [1.0, -1.0]],
                    "torch": [[0.0, 0.0], [1.0, -1.0]],
                    "numpy": [[0.0, 0.0], [1.0, -1.0]]
                 }, 
                "target": {
                    "jax": [[-1.0, -1.0], [-1.0, 1.0]],
                    "torch": [[0.0, 0.0], [-1.0, 1.0]],
                    "numpy": [[0.0, 0.0], [-1.0, 1.0]]
                }
                }
            }
        },
    "test_absolute_error_4": {
        "model": "AbsoluteError",
        "inputs": {
            "input": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]],
            "target": [[2.0, 3.0], [3.0, 4.0], [4.0, 5.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, 1.0], [0.0, 0.0], [1.0, 1.0]],

            "grad": {
                "input": {
                    "jax": [[-1.000000000000000000002, -1.000000000000000000002], [1.0, 1.0], [1.000000000000000000002, 1.000000000000000000002]],
                    "torch": [[-1.000000000000000000002, -1.000000000000000000002], [0.0, 0.0], [1.000000000000000000002, 1.000000000000000000002]],
                    "numpy": [[-1.000000000000000000002, -1.000000000000000000002], [0.0, 0.0], [1.000000000000000000002, 1.000000000000000000002]]
                }, 
                "target": {
                    "jax": [[1.000000000000000000002, 1.000000000000000000002], [-1.0, -1.0], [-1.000000000000000000002, -1.000000000000000000002]],
                    "torch": [[1.000000000000000000002, 1.000000000000000000002], [0.0, 0.0], [-1.000000000000000000002, -1.000000000000000000002]],
                    "numpy": [[1.000000000000000000002, 1.000000000000000000002], [0.0, 0.0], [-1.000000000000000000002, -1.000000000000000000002]]
                }
                }
        }
    },
    "test_cross_entropy_1": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input": [[1.0, 1.0, 1.0, 1.0]]
        },
        "static_inputs": {
            "target": [2]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [1.3862943611198906], 
            "grad": {
                "input": [[0.25, 0.25, -0.75, 0.25]]
            }
        }
    },
    "test_cross_entropy_2": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input":[[1000.0, 0.0], [0.0, 1000.0]]
        },
        "static_inputs": {
            "target": [0, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.0, 1000.0],
            "grad": {
                "input": [[0.0, 0.0], [-1.0, 1.0]]
            }
        }
    },
    "test_cross_entropy_3": {
        "model": {
            "name": "CrossEntropy"
        },
        "inputs": {
            "input":[[1.0, 1.0], [0.0, 1000.0]]
        },
        "static_inputs": {
            "target": [0, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.6931471805599453, 1000],
            "grad": {
                "input": [[-0.5, 0.5], [-1.0, 1.0]]
            }
        }
    },
    "test_cross_entropy_4": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.5, 0.5], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [0, 1]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.6931471805599453, 0.1053605156578263],
            "grad": {
                "input": [[-2.0, 0.0], [0.0, -1.1111111111111111]]
            }
        }
    },
    "test_cross_entropy_5": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.5, 0.5], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [0, 1]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.6931471805599453, 0.1053605156578263], 
            "grad": {
                "input": [[-2.0, 0.0], [0.0, -1.1111111111111111]]
            }
        }
    },
    "test_cross_entropy_6": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [1, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.0, 2.3025850929940457], 
            "grad": {
                "input": [[0.0, -1.0], [-10.0, 0.0]]
            }
        }
    },
    "test_cross_entropy_7": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [1, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [0.0, 2.3025850929940457],
            "grad": {
                "input": [[0.0, -1.0], [-10.0, 0.0]]
            }
        }
    },
    "test_cross_entropy_8": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [0, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [709.396418532264, 2.3025850929940455],
            "grad": {
                "input": {
                    "jax": [[-4.49423283715579e+307, -0.0], [-10.0, 0.0]],
                    "numpy": [[-4.49423283715579e+307, -0.0], [-10.0, 0.0]],
                    "torch": [[0.0, -0.0], [-10.0, 0.0]]
                }
            }
        }
    },
    "test_cross_entropy_9": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[2.220446049250313e-16, 1.0], [0.1, 0.9]]
        },
        "static_inputs": {
            "target": [0, 0]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [36.0436533891171561261064, 2.3025850929940457], 
            "grad": {
                "input": [[-4503599627370496.1639777310318726155242958888888847, -0.0], [-10.0, 0.0]]
            }
        }
    },
    "test_cross_entropy_10": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input":[[0.0, 1.0]]
        },
        "static_inputs": {
            "target": [0]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [709.396418532264], 
            "grad": {
                "input": {
                    "jax": [[-4.49423283715579e+307, 0.0]],
                    "numpy": [[-4.49423283715579e+307, 0.0]],
                    "torch": [[0.0, 0.0]]
                }
            }
        }
    },
    "test_cross_entropy_11": {
        "model": {
            "name": "CrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.2, 1.1102230246251565e-16, 0.7999999999999998], [0.1, 0.6, 0.3]]
        },
        "static_inputs": {
            "target": [1, 2]
        },
        "output_grad": [1.0, 1.0],
        "results": {
            "eval": [36.7368005696771, 1.2039728043259361], 
            "grad": {
                "input": [[0.0, -9007199254740992.0, 0.0], [0.0, 0.0, -3.3333333333333333]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1], [0.5]]
        },
        "static_inputs": {
            "target": [[0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.1053605156578263], [0.6931471805599453]],
            "grad": {
                "input": [[1.1111111111111111], [-2]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_2": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1, 0.2, 0.3], [0.5, 0.4, 0.2]]
        },
        "static_inputs": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grad": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]],
        "results": {
            "eval": [
                [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                [0.6931471805599453, 0.916290731874155, 1.6094379124341003]
            ],
            "grad": {
                "input": [[1.1111111111111112, -5.0, 1.4285714285714286],
                          [-2.0, -2.5, -5.0]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_3": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1e-20, 0.2, 0.3], [0.5, 0.4, 1e-20]]
        },
        "static_inputs": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grad": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]],
        "results": {
            "eval": [
                [0.0, 1.6094379124341003, 0.35667494393873245],
                [0.6931471805599453, 0.916290731874155, 46.05170185988091368035]
            ],
            "grad": {
                "input": [[1.0, -5.0, 1.4285714285714286],
                          [-2.0, -2.5, -1e+20]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_4": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs",
                "robust": true
            }
        },
        "inputs": {
            "input": [[0.1, 0.2, 0.3], [0.5, 1.0, 0.2]]
        },
        "static_inputs": {
            "target": [[0, 1, 0], [1, 1, 1]]
        },
        "output_grad": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]],
        "results": {
            "eval": [
                [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                [0.6931471805599453, 0.0, 1.6094379124341003]
            ],
            "grad": {
                "input": [[1.1111111111111112, -5.0, 1.4285714285714286],
                          [-2.0, -1.0, -5.0]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_5": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[0.1], [0.5]]
        },
        "static_inputs": {
            "target": [[0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.1053605156578263], [0.6931471805599453]],
            "grad": {
                "input": [[1.1111111111111111], [-2]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_6": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1.1102230246251565e-16], [0.5]]
        },
        "static_inputs": {
            "target": [[0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.1102230246251565e-16], [0.6931471805599453]],
            "grad": {
                "input": [[1.0000000000000002], [-2]]
            }
        }
    },
    "test_primitive_binary_cross_entropy_7": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input": [[1.0102230246251565e-16], [0.5]]
        },
        "static_inputs": {
            "target": [[0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.1102230246251565e-16], [0.6931471805599453]],
            "grad": {
                "input": [[1.0], [-2]]
            }
        }
    },
    "test_multilabel_3_binary_w_logits_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input": [
                [-2.197224577336219, -1.3862943611198906, -0.8472978603872036], 
                [0.0, 1e100, -1.3862943611198906]
            ]
        },
        "static_inputs": {
            "target": [[0.0, 1, 0], [1, 1, 1]]
        },
        "output_grad": [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]],
        "results": {
            "eval": [
                [0.10536051565782628, 1.6094379124341003, 0.35667494393873245],
                [0.6931471805599453, 0.0, 1.6094379124341003]
            ],


            "grad": {
                "input": {
                    "jax": [[0.1, -0.8, 0.3],
                            [-1.0, 0.0, -0.8]],

                    "torch": [[0.1, -0.8, 0.3],
                              [-0.5, 0.0, -0.8]],

                    "numpy": [[0.1, -0.8, 0.3],
                              [-0.5, 0.0, -0.8]]
                }
            }

        }
    },
    "test_primitive_binary_cross_entropy_8": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args": {
                "input_type": "probs"
            }
        },
        "inputs": {
            "input":[[1.1102230246251565e-16], [0.95]]
        },
        "static_inputs": {
            "target": [[0.0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.1102230246251565e-16], [0.05129329438755058]],
            "grad": {
                "input": [[1.0000000000000002], [-1.0526315789473684]]
            }
        }
    },
    "test_binary_w_logits_1": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input": [[-36.83119036496738], [0.0]]
        },
        "static_inputs": {
            "target": [[0.0], [1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.1102230246251565e-16], [0.6931471805599453]],

            "grad": {
                "input": {
                    "jax": [[1.0102230246251579e-16], [-1.0]],

                    "torch": [[1.0102230246251579e-16], [-0.5]],

                    "numpy": [[1.0102230246251579e-16], [-0.5]]
                }
            }
        }
    },
    "test_binary_w_logits_2": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input":[[1.0], [-2]]
        },
        "static_inputs": {
            "target": [[1.0], [0]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.3132616875182228340489397], [0.1269280110429724964437598915071149807002718272195321675]],
            "grad": {
                "input": [[-0.2689414213699951], [0.11920292202211756]]
            }
        }
    },
    "test_binary_w_logits_3": {
        "model": {
            "name": "BinaryCrossEntropy",
            "args":{
                "input_type": "logits"
            }
        },
        "inputs": {
            "input":[[1.0, -2, 3, 0], [0, 1, 2, -1]]
        },
        "static_inputs": {
            "target": [[1.0, 0, 1, 0], [0, 0, 0, 1]]
        },
        "output_grad": [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]],
        "results": {
            "eval": [[0.3132616875182228340489397, 0.1269280110429724964437598915071149807002718272195321675, 0.0485873515737420587588754, 0.6931471805599453],
                    [0.6931471805599453, 1.31326168751822283404914704536108291919962856900025589503, 2.1269280110429724964434823383377018142328603556866623514, 1.313261687518222834049147]],
                    
                    
            "grad": {
                "input": {
                    "jax": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.0],
                            [0.0, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]],

                    "torch": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.5],
                              [0.5, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]],

                    "numpy": [[-0.2689414213699951, 0.11920292202211753, -0.047425873177566635, 0.5],
                              [0.5, 0.7310585786300048, 0.8807970779778833, -0.7310585786300048]]
                }
            }
        }
    },
    "test_quantile_loss_1": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.1
            }
        },
        "inputs": {
            "input": [[1.0]]
        },
        "static_inputs": {
            "target": [[0.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.9]],
            "grad": {
                "input": [[0.9]]
            }
        }
    },
    "test_quantile_loss_2": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.1
            }
        },
        "inputs": {
            "input":[[-1.1102230246251565e-16], [2e10]]
        },
        "static_inputs": {
            "target": [[1.0], [1e-5]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.1], [17999999999.999991]],
            "grad": {
                "input": [[-0.1], [0.9]]
            }
        }
    },
    "test_quantile_loss_3": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.9
            }
        },
        "inputs": {
            "input":[[1.0], [1e-5]]
        },
        "static_inputs": {
            "target": [[1.0], [1e-5]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [0.0]],
            "grad": {
                "input": [[-0.4], [-0.4]]
            }
        }
    },
    "test_quantile_loss_4": {
        "model": {
            "name": "QuantileLoss", 
            "args": {
                "quantile": 0.4
            }
        },
        "inputs": {
            "input":[[1.0, 2.0], [0.0, 1.0]]
        },
        "static_inputs": {
            "target": [[1.0, 0.0], [2.0, -1.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.0, 1.2], [0.8, 1.2]],
            "grad": {
                "input": [[0.1, 0.6], [-0.4, 0.6]]
            }
        }
    },
    "test_hinge_loss_1": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input":[[2.0], [0.25]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [1.25]],
            "grad": {
                "input": [[0.0], [1.0]]
            }
        }
    },
    "test_hinge_loss_2": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input": [[1.0], [-1.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [0.0]],
            "grad": {
                "input": [[-0.5], [0.5]]
            }
        }
    },
    "test_hinge_loss_3": {
        "model": {
            "name": "HingeLoss"
        },
        "inputs": {
            "input":[[0.0], [0.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.0], [1.0]],
            "grad": {
                "input": [[-1.0], [1.0]]
            }
        }
    },
    "test_quad_hinge_loss_1": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[2.0], [0.25]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [1.5625]],
            "grad": {
                "input": [[0.0], [2.5]]
            }
        }
    },
    "test_quad_hinge_loss_2": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[1.0], [-1.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [0.0]],
            "grad": {
                "input": [[0.0], [0.0]]
            }
        }
    },
    "test_quad_hinge_loss_3": {
        "model": {
            "name": "QuadHingeLoss"
        },
        "inputs": {
            "input":[[0.0], [0.0]]
        },
        "static_inputs": {
            "target": [[1], [-1]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[1.0], [1.0]],
            "grad": {
                "input": [[-2.0], [2.0]]
            }
        }
    },
    "test_kl_div_1": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input": [[0.1, 0.5], [0.5, 0.1]]
        },
        "static_inputs": {
            "target": [[0.2, 0.5], [0.2, 0.4]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.1386294361119891, 0.0], [-0.183258146374831, 0.5545177444479562]],
            "grad": {
                "input": [[-2.0, -1.0], [-0.4, -4.0]]
            }
        }
    },
    "test_kl_div_3": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input":[[0.1, 0.5], [0.5, 0.1]]
        },
        "static_inputs": {
            "target": [[0.1, 0.5], [0.5, 0.1]]
        },
        "diag_zero": false,
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.0, 0.0], [0.0, 0.0]],
            "grad": {
                "input": [[-1.0, -1.0], [-1.0, -1.0]]
            }
        }
    },
    "test_kl_div_4": {
        "model": {
            "name": "KLDivergence"
        },
        "inputs": {
            "input":[[1.1102230246251565e-16, 0.5], [0.5, 0.1]]
        },
        "static_inputs": {
            "target": [[0.1, 0.5], [0.5, 0.1]]
        },
        "diag_zero": false,
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[3.443421547668306, 0.0], [0.0, 0.0]],
            "grad": {
                "input": [[-900719925474099.2, -1.0], [-1.0, -1.0]]
            }
        }
    },
    "test_relu_1": {
        "model": "Relu",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, 0.0], [2.0, 0.0]],
            "grad": {
                "input": [[1.0, 0.0], [1.0, 0.0]]
            }
        }
    },
    "test_relu_2": {
        "model": "Relu",
        "inputs": {
            "input": [[0.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.0]],
            "grad": {
                "input": [[0.0]]
            }
        }
    },
    "test_relu_3": {
        "model": "Relu",
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.0, 0.0], [2.0, 0.0], [0.0, 0.0]],
            "grad": {
                "input": [[0.0, 0.0], [1.0, 0.0], [0.0, 0.0]]
            }
        }
    },
    "test_relu_4": {
        "model": "Relu",
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grad": [[5.0, 1.0], [3.2, 1.0], [0.0, 1.0]],
        "results": {
            "eval": [[0.0, 0.0], [2.0, 0.0], [0.0, 0.0]],
            "grad": {
                "input": [[0.0, 0.0], [3.2, 0.0], [0.0, 0.0]]
            }
        }
    },
    "test_leaky_relu_1": {
        "model": "LeakyRelu",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, -0.4], [2.0, 0.0]],
            "grad": {
                "input": {
                    "jax": [[1.0, 0.2], [1.0, 1.0]],
                    "torch": [[1.0, 0.2], [1.0, 0.2]],
                    "numpy": [[1.0, 0.2], [1.0, 0.2]]
                }
            }
        }
    },
    "test_leaky_relu_2": {
        "model": "LeakyRelu",
        "inputs": {
            "input": [[0.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[0.0]],
            "grad": {
                "input": {
                    "jax": [[1.0]],
                    "torch": [[0.2]],
                    "numpy": [[0.2]]
                }
            }
        }
    },
    "test_leaky_relu_3": {
        "model": "LeakyRelu",
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grad": [[5.0, 1.0], [3.2, 1.0], [0.0, 1.0]],
        "results": {
            "eval": [[-0.2, -0.4], [2.0, 0.0], [-0.008, -20.0]],
            "grad": {
                "input": {
                    "jax": [[1.0, 0.2], [3.2, 1.0], [0.0, 0.2]],
                    "torch": [[1.0, 0.2], [3.2, 0.2], [0.0, 0.2]],
                    "numpy": [[1.0, 0.2], [3.2, 0.2], [0.0, 0.2]]
                }
            }
        }
    },
    "test_gelu_1": {
        "model": {
            "name": "Gelu"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.8413447460685429, -0.04550026389635842], [1.9544997361036416, 0.0]],
            "grad": {
                "input": [[1.0833154705876864, -0.08523180107819693], [1.085231801078197, 0.5]]
            }
        }
    },
    "test_gelu_2": {
        "model": {
            "name": "Gelu"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[-0.15865525393145707, -0.04550026389635842], [1.9544997361036416, 0.0], [-0.019361862525886772, -0.0]],
            "grad": {
                "input": [[-0.08331547058768632, -0.08523180107819693], [1.085231801078197, 0.5], [0.46810163297898505, 0.0]]
            }
        }
    },
    "test_stop_gradient_1": {
        "model": {
            "name": "StopGradient"
        },
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, -2.0], [2.0, 0.0]],
            "grad": {
                "input": [[0,0], [0,0]]
            }
        }
    },
    "test_stop_gradient_2": {
        "model": {
            "name": "StopGradient"
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[-1.0, -2.0], [2.0, 0.0], [-0.04, -100]],
            "grad": {
                "input": [[0,0], [0,0], [0,0]]
            }
        }
    },
    "test_robust_log_1": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[2.0, 2.0], [3.0, 4.0], [4.0, 100.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.6931471805599453094172321214, 0.6931471805599453094172321214], [1.09861228866810969139524523692252570464, 1.3862943611198906188344642429163531], [1.386294361119890618834464242916353136, 4.6051701859880913680359829093687284152022]],
            "grad": {
                "input": [[0.5, 0.5], [0.333333333333333333333, 0.25], [0.25, 0.01]]
            }
        }
    },
    "test_robust_log_2": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[[0.0]]]
        },
        "output_grad": [[[1.0]]],
        "results": {
            "eval": [[[-709.396418532264106216811584991213718666567366540526]]],
            "grad": {
                "input": {
                    "jax": [[[4.4942328371557897351686972308210038429885969661285748811057e307]]],
                    "numpy": [[[4.4942328371557897351686972308210038429885969661285748811057e307]]],
                    "torch": [[[0.0]]]
                }
            }
        }
    },
    "test_robust_log_3": {
        "model": {
            "name": "Log",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "input": [[[1e-311, 1e-306]]]
        },
        "output_grad": [[[1.0, 1.0]]],
        "results": {
            "eval": {"jax": [[[-709.396418532264106216811584991213718666567366540526, -704.591038456177979309505385133415447525937055520404530]]],
                     "torch": [[[-709.3959691089803906378380681214906365661830676808299040690118894, -704.591038456177979309505385133415447525937055520404530]]],
                     "numpy": [[[-709.3959691089803906378380681214906365661830676808299040690118894, -704.591038456177979309505385133415447525937055520404530]]]},
            "grad": {
                "input": [[[4.4942328371557897351686972308210038429885969661285748811057e307, 1e306]]]
            }
        }
    },
    "test_stable_reciprocal_1": {
        "model": "StableReciprocal",
        "inputs": {
            "input": [[2.0, 2.0], [3.0, 4.0], [4.0, 100.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.5, 0.5], [0.333333333333333333333, 0.25], [0.25, 0.01]],
            "grad": {
                "input": [[-0.25, -0.25], [-0.11111111111111111111111, -0.0625], [-0.0625, -0.0001]]
            }
        }
    },
    "test_stable_reciprocal_2": {
        "model": "StableReciprocal",
        "inputs": {
            "input": [[0.0]]
        },
        "output_grad": [[1.0]],
        "results": {
            "eval": [[1.34078079299425975369365231198393901835279232e153]],
            "grad": {
                "input": [[-4.494232837155790062526881505709689647141e305]]
            }
        }
    },
    "test_stable_reciprocal_3": {
        "model": "StableReciprocal",
        "inputs": {
            "input": [[1e-155, 1e-145]]
        },
        "output_grad": [[1.0,1.0]],
        "results": {
            "eval": [[1.33628656015710396363112543047822932870565049166274379e153, 1e145]],
            "grad": {
                "input": [[-4.494232837155790062526881505709689647141e305, -1e290]]
            }
        }
    },
    "test_robust_power_1": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base":  [[0.0], [2.2250738585072014e-308]],
            "exponent":  [[0.5], [0.2]]
        },
        "output_grad": [[1.0], [1.0]],
        "results": {
            "eval": [[0.0], [2.94760229696920019e-62]],
            "grad": {
                "base": [[0.0], [2.6494422067830456494626727070578342769220668517896442342632083875646713489594382293556230650365376585602492809663848600694036441316054962143018101466468388523103155742568140908731216503912613033423051394246710020933425593223230870218134328967168e+245]],
                "exponent": [[0.0], [-2.08807091043044e-59]]
            }
        }
    },
    "test_robust_power_2": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base":  [[2.0], [3.0], [4.0]],
            "exponent":  [[2.0,3.0]]
        },
        "output_grad": [[1.0,1.0],
                        [1.0,1.0],
                        [1.0,1.0]],

        "results": {
            "eval": [[4.0,8.0],
                     [9.0,27.0],
                     [16.0,64.0]],
            "grad": {
                "base": [[16.0],[33.0],[56.0]],
                "exponent": [[34.84080909817102,123.93054835019151]]
            }
        }
    },
    "test_robust_power_3": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [2.0], 
            "exponent": [[1.0], [2.0], [3.0], [4.0]]
        },
        "output_grad": [[1.0], [1.0], [1.0], [1.0]],
        "results": {
            "eval": [[2.0], [4.0], [8.0], [16.0]],
            "grad": {
                "base": [49.0], 
                "exponent": [[1.3862943611198906], [2.772588722239781], [5.545177444479562], [11.090354888959125]]
            }
        }
    },
    "test_robust_power_4": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [2.0], 
            "exponent": [3.0]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [8.0],
            "grad": {
                "base": [12.0], 
                "exponent": [5.545177444479562]
            }
        }
    },
    "test_robust_power_5": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, 4.0], [1.0, 16.0], [1.0, 64.0]],
            "grad": {
                "base": [9.0, 228.0],
                "exponent": [[0.0,  2.772588722239781], [0.0,  11.090354888959125], [0.0, 44.3614195558365]]
            }
        }
    },
    "test_robust_power_6": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [1.0, 2.0],
            "exponent": [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[1.0, 4.0], [1.0, 16.0], [1.0, 64.0]],
            "grad": {
                "base": [9.0, 228.0],
                "exponent": [[0.0,  2.772588722239781], [0.0,  11.090354888959125], [0.0, 44.3614195558365]]
            }
        }
    },
    "test_robust_power_7": {
        "model": {
            "name": "Power",
            "args": {
                "robust": true
            }
        },
        "inputs": {
            "base": [[1e-311, 1e-311]],
            "exponent": [[0.01076316536, 0.01076316538]]
        },
        "output_grad": [[1.0,1.0]],
        "results": {
            "eval": {
                "jax": [[0.0,0.0]],
                "torch": [[0.0004494232837155554,0.00044942328188518134305836]],
                "numpy": [[0.0004494232837155554,0.00044942328188518134305836]]
            },
            "grad": {
                "base": {
                    "jax": [[0.0,0.0]],
                    "torch": [[4.49423283715579e+307,4.837217108552834e+305]],
                    "numpy": [[4.49423283715579e+307,4.837217108552834e+305]]},

                "exponent": {
                    "jax": [[0.0,0.0]],
                    "torch": [[0,-0.32183379363642992135824]],
                    "numpy": [[0,-0.32183379363642992135824]]}
            }
        }
    },
    "test_softmax_1": {
        "model": "Softmax",
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },
        "output_grad": [[1.0, 1.0, 1.0]],
        "results": {
            "eval": [[0.1192029220221162, 0.8807970779778726, 0.0000000000000112]],
            "grad": {
                "input": [[-2.8050970975135375e-18, 2.1798580039061965e-18, 0.0]]
            }
        },
        "pre_gradient": [[0.1049935854035054847, -0.10499358540350414959971142599612, -0.00000000000000133507272664770144],
                         [-0.10499358540350414959971142599612, 0.1049935854035140145, -0.00000000000000986492727335217312],
                         [-0.00000000000000133507272664770144, -0.00000000000000986492727335217312, 0.0000000000000111999999999998746]
        ]
    },
    "test_softmax_2": {
        "model": "Softmax",
        "inputs": {
            "input": [[0.1, 0.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0, 1.0]],
        "results": {
            "eval": [[0.3559130712072203, 0.3220434643963898, 0.3220434643963898]],
            "grad": {
                "input": [[5.551115123125783e-17, 4.163336342344337e-17, 2.7755575615628914e-17]]
            }
        },
        "pre_gradient": [[0.2292389569510644323, -0.11461947847553219833633501327294, -0.11461947847553219833633501327294],
                         [-0.11461947847553219833633501327294, 0.2183314714359610153, -0.10371199296042878472965927354404],
                         [-0.11461947847553219833633501327294, -0.10371199296042878472965927354404, 0.2183314714359610153]]
    },
    "test_softmax_3": {
        "model": "Softmax",
        "inputs": {
            "input": [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[1.0, 1.0], [1.0, 1.0]],
        "results": {
            "eval": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]],
            "grad": {
                "input": [[0.0, 0.0], [0.0, 0.0]]
            }
        },
        "pre_gradient": [[[0.04517665973091213264936, -0.04517665973091213264936], [-0.04517665973091213264936, 0.04517665973091213264936]],
                         [[0.1049935854035065173487, -0.1049935854035065173487], [-0.1049935854035065173487, 0.1049935854035065173487]]]
    },
    "test_softmax_4": {
        "model": "Softmax",
        "inputs": {
            "input": [[0.0, 2.0, -30]]
        },
        "output_grad": [[2.0, 0.5, 0.0]],
        "results": {
            "eval": [[0.1192029220221162, 0.8807970779778726, 0.0000000000000112]],
            "grad": {
                "input": [[0.1574903781052589, -0.1574903781052513, -7.60260908997149e-15]]
            }
        },
        "pre_gradient": [[0.1049935854035054847, -0.10499358540350414959971142599612, -0.00000000000000133507272664770144],
                         [-0.10499358540350414959971142599612, 0.1049935854035140145, -0.00000000000000986492727335217312],
                         [-0.00000000000000133507272664770144, -0.00000000000000986492727335217312, 0.0000000000000111999999999998746]
        ]
    },
    "test_softmax_5": {
        "model": "Softmax",
        "inputs": {
            "input":  [[0.1, 0.0, 0.0]]
        },
        "output_grad": [[1.2, 0.1, 2.0]],
        "results": {
            "eval": [[0.3559130712072203, 0.3220434643963898, 0.3220434643963898]],
            "grad": {
                "input": [[0.03438584354265972, -0.3231342129479001, 0.2887483694052405]]
            }
        },
        "pre_gradient": [[0.2292389569510644323, -0.11461947847553219833633501327294, -0.11461947847553219833633501327294],
                         [-0.11461947847553219833633501327294, 0.2183314714359610153, -0.10371199296042878472965927354404],
                         [-0.11461947847553219833633501327294, -0.10371199296042878472965927354404, 0.2183314714359610153]
        ]
    },
    "test_softmax_6": {
        "model": "Softmax",
        "inputs": {
            "input":  [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[10.0, 5.2], [1.0, 1.1]],
        "results": {
            "eval": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]],
            "grad": {
                "input": [[0.2168479667083789, -0.2168479667083782], [-0.010499358540350667, 0.010499358540350667]]
            }
        },
        "pre_gradient": [[[0.04517665973091213264936, -0.04517665973091213264936], [-0.04517665973091213264936, 0.04517665973091213264936]],
                         [[0.1049935854035065173487, -0.1049935854035065173487], [-0.1049935854035065173487, 0.1049935854035065173487]]]
    },
    "test_softmax_7": {
        "model": "Softmax",
        "inputs": {
            "input":  [[1.0, -2.0], [2.0, 0.0]]
        },
        "output_grad": [[-0.3, 5.2], [2.0, 10.1]],
        "results": {
            "eval": [[0.9525741268224332191212, 0.04742587317756678087885], [0.8807970779778824440597, 0.1192029220221175559403]],
            "grad": {
                "input": [[-0.2484716285200167295715, 0.2484716285200167295715], [-0.8504480417684027905245, 0.8504480417684027905245]]
            }
        },
        "pre_gradient": [[[0.04517665973091213264936, -0.04517665973091213264936], [-0.04517665973091213264936, 0.04517665973091213264936]],
                         [[0.1049935854035065173487, -0.1049935854035065173487], [-0.1049935854035065173487, 0.1049935854035065173487]]]
    },
    "test_var_1": {
        "model": {
            "name": "Variance"
        },
        "inputs": {
            "input":  [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grad": 1.0,
        "results": {
            "eval": 2.0,
            "grad": {
                "input": [[-0.8], [-0.4], [0.0], [0.4], [0.8]]
            }
        }
    },
    "test_var_2": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 0.0,
                "axis": 0 
            }
        },
        "inputs": {
            "input":  [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grad": [1.0],
        "results": {
            "eval": [2.0],
            "grad": {
                "input": [[-0.8], [-0.4], [0.0], [0.4], [0.8]]
            }
        }
    },
    "test_var_3": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 0.0,
                "axis": 1
            }
        },
        "inputs": {
            "input":  [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grad": [1.0, 1.0, 1.0, 1.0, 1.0],
        "results": {
            "eval": [0.0, 0.0, 0.0, 0.0, 0.0],
            "grad": {
                "input": [[0.0], [0.0], [0.0], [0.0], [0.0]]
            }
        }
    },
    "test_var_4": {
        "model": {
            "name": "Variance",
            "args": {
                "correction": 1.0
            }
        },
        "inputs": {
            "input":  [[1.0], [2.0], [3.0], [4.0], [5.0]]
        },
        "output_grad": 1.0,
        "results": {
            "eval": 2.5,
            "grad": {
                "input": [[-1.0], [-0.5], [0.0], [0.5], [1.0]]
            }
        }
    },
    "test_prod_1": {
        "model": {
            "name": "Prod",
            "args": {
                "axis": 0,
                "keepdim": false
            }
        },
        "inputs": {
            "input":  [[1.0, -1.0], [2.0, -2.0], [3.0, -3.0], [4.0, -4.0], [5.0, -5.0]]
        },
        "output_grad": [2.0, 3.0],
        "results": {
            "eval": [120.0, -120.0],
            "grad": {
                "input": [[240.0, 360.0], [120.0, 180.0], [80.0, 120.0], [60.0, 90.0], [48.0, 72]]
            }
        }
    },
    "test_prod_2": {
        "model": {
            "name": "Prod",
            "args": {
                "axis": 1,
                "keepdim": false
            }
        },
        "inputs": {
            "input":  [[1.0, -1.0], [2.0, -2.0], [3.0, -3.0], [4.0, -4.0], [5.0, -5.0]]
        },
        "output_grad": [2.0, 3.0, 4.0, 5.0, 6.0],
        "results": {
            "eval": [-1.0, -4.0, -9.0, -16.0, -25.0],
            "grad": {
                "input": [[-2.0, 2.0], [-6.0, 6.0], [-12.0, 12.0], [-20.0, 20.0], [-30.0, 30.0]]
            }
        }
    },
    "test_prod_3": {
        "model": {
            "name": "Prod",
            "args": {
                "axis": 0,
                "keepdim": true
            }
        },
        "inputs": {
            "input":  [[1.0, -1.0], [2.0, -2.0], [3.0, -3.0], [4.0, -4.0], [5.0, -5.0]]
        },
        "output_grad": [[2.0, 3.0]],
        "results": {
            "eval": [[120.0, -120.0]],
            "grad": {
                "input": [[240.0, 360.0], [120.0, 180.0], [80.0, 120.0], [60.0, 90.0], [48.0, 72]]
            }
        }
    },
    "test_prod_4": {
        "model": {
            "name": "Prod",
            "args": {
                "axis": 1,
                "keepdim": true
            }
        },
        "inputs": {
            "input":  [[1.0, -1.0], [2.0, -2.0], [3.0, -3.0], [4.0, -4.0], [5.0, -5.0]]
        },
        "output_grad": [[2.0], [3.0], [4.0], [5.0], [6.0]],
        "results": {
            "eval": [[-1.0], [-4.0], [-9.0], [-16.0], [-25.0]],
            "grad": {
                "input": [[-2.0, 2.0], [-6.0, 6.0], [-12.0, 12.0], [-20.0, 20.0], [-30.0, 30.0]]
            }
        }
    },
    "test_reduce_sum_1": {
        "model": {
            "name": "Sum"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grad": 7.0,
        "results": {
            "eval": 58.0,
            "grad": {
                "input": [[[[[[[[[[[[[[[7.0,7.0,7.0],[7.0,7.0,7.0]],[[7.0,7.0,7.0],[7.0,7.0,7.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_sum_2": {
        "model": {
            "name": "Sum"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 3.0], [4.0, 5.0]]
        },
        "output_grad": 3.0,
        "results": {
            "eval": 3.0,
            "grad": {
                "input": [[3.0, 3.0], [3.0, 3.0], [3.0, 3.0]]
            } 
        }
    },
    "test_reduce_sum_3": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [1.0, 1.0, 1.0],
        "results": {
            "eval": [-3.0, 2.0, 0.0],
            "grad": {
                "input": [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]
            } 
        }
    },
    "test_reduce_sum_4": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [4.0, 3.0, 1.0],
        "results": {
            "eval": [-3.0, 2.0, 0.0],
            "grad": {
                "input": [[4.0, 4.0], [3.0, 3.0], [1.0, 1.0]]
            } 
        }
    },
    "test_reduce_sum_5": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [3.0, 7.0],
        "results": {
            "eval": [2.0, -3.0],
            "grad": {
                "input": [[3.0, 7.0], [3.0, 7.0], [3.0, 7.0]]
            } 
        }
    },
    "test_reduce_sum_6": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grad": [3.0, 7.0],
        "results": {
            "eval": [25.0, 37.0],
            "grad": {
                "input": [[[3.0,3.0,3.0],[7.0,7.0,7.0]],[[3.0,3.0,3.0],[7.0,7.0,7.0]],[[3.0,3.0,3.0],[7.0,7.0,7.0]]]
            } 
        }
    },
    "test_reduce_sum_7": {
        "model": {
            "name": "Sum",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grad": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]],
        "results": {
            "eval": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]],
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_mean_1": {
        "model": {
            "name": "Mean"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grad": 12.0,
        "results": {
            "eval": 4.8333333333333333333333333333333333333,
            "grad": {
                "input": [[[[[[[[[[[[[[[1.0,1.0,1.0],[1.0,1.0,1.0]],[[1.0,1.0,1.0],[1.0,1.0,1.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_mean_2": {
        "model": {
            "name": "Mean"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 3.0], [4.0, 5.0]]
        },
        "output_grad": 3.0,
        "results": {
            "eval": 0.5,
            "grad": {
                "input": [[0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_3": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [1.0, 1.0, 1.0],
        "results": {
            "eval": [-1.5, 1.0, 0.0],
            "grad": {
                "input": [[0.5, 0.5], [0.5, 0.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_4": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [4.0, 3.0, 1.0],
        "results": {
            "eval": [-1.5, 1.0, 0.0],
            "grad": {
                "input": [[2.0, 2.0], [1.5, 1.5], [0.5, 0.5]]
            } 
        }
    },
    "test_reduce_mean_5": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [3.0, 9.0],
        "results": {
            "eval": [0.666666666666666666667, -1.0],
            "grad": {
                "input": [[1.0, 3.0], [1.0, 3.0], [1.0, 3.0]]
            } 
        }
    },
    "test_reduce_mean_6": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grad": [9.0, 27.0],
        "results": {
            "eval": [2.7777777777777777777777777777, 4.11111111111111111111111111111111111111111],
            "grad": {
                "input": [[[1.0,1.0,1.0],[3.0,3.0,3.0]],[[1.0,1.0,1.0],[3.0,3.0,3.0]],[[1.0,1.0,1.0],[3.0,3.0,3.0]]]
            } 
        }
    },
    "test_reduce_mean_7": {
        "model": {
            "name": "Mean",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grad": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]],
        "results": {
            "eval": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]],
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_max_1": {
        "model": {
            "name": "Max"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grad": 17.0,
        "results": {
            "eval": 11.0,
            "grad": {
                "input": [[[[[[[[[[[[[[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[17.0,0.0,0.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_max_2": {
        "model": {
            "name": "Max"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 6.0], [6.0, 5.0]]
        },
        "output_grad": 9.0,
        "results": {
            "eval": 6.0,
            "grad": {
                "input": [[0.0, 0.0], [3.0, 3.0], [3.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_3": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [1.0, 1.0, 1.0],
        "results": {
            "eval": [-1.0, 2.0, 1.0],
            "grad": {
                "input": [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_4": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [4.0, 3.0, 1.0],
        "results": {
            "eval": [-1.0, 2.0, 1.0],
            "grad": {
                "input": [[4.0, 0.0], [3.0, 0.0], [1.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_5": {
        "model": {
            "name": "Max",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [3.0, 9.0],
        "results": {
            "eval": [2.0, 0.0],
            "grad": {
                "input": [[0.0, 0.0], [3.0, 9.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_max_6": {
        "model": {
            "name": "Max",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grad": [9.0, 27.0],
        "results": {
            "eval": [6.0, 9.0],
            "grad": {
                "input": [[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,0.0]],[[9.0,0.0,0.0],[27.0,0.0,0.0]]]
            } 
        }
    },
    "test_reduce_max_7": {
        "model": {
            "name": "Max",
            "args": {
                "axis": [0,1,2,3,4]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]
        },
        "output_grad": [[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]],
        "results": {
            "eval": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]],
            "grad": {
                "input": [[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]
            } 
        }
    },
    "test_reduce_min_1": {
        "model": {
            "name": "Min"
        },
        "inputs": {
            "input": [[[[[[[[[[[[[[[1.0,2.0,3.0],[8.0,6.0,1.0]],[[7.0,6.0,1.0],[11.0,9.0,3.0]]]]]]]]]]]]]]]
        },
        "output_grad": 9.0,
        "results": {
            "eval": 1.0,
            "grad": {
                "input": [[[[[[[[[[[[[[[3.0,0.0,0.0],[0.0,0.0,3.0]],[[0.0,0.0,3.0],[0.0,0.0,0.0]]]]]]]]]]]]]]]
            } 
        }
    },
    "test_reduce_min_2": {
        "model": {
            "name": "Min"
        },
        "inputs": {
            "input": [[-7.0, -8.0], [6.0, 6.0], [6.0, 5.0]]
        },
        "output_grad": 4.0,
        "results": {
            "eval": -8.0,
            "grad": {
                "input": [[0.0, 4.0], [0.0, 0.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_min_3": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [1.0, 1.0, 1.0],
        "results": {
            "eval": [-2.0, 0.0, -1.0],
            "grad": {
                "input": [[0.0, 1.0], [0.0, 1.0], [0.0, 1.0]]
            } 
        }
    },
    "test_reduce_min_4": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 1
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [4.0, 3.0, 1.0],
        "results": {
            "eval": [-2.0, 0.0, -1.0],
            "grad": {
                "input": [[0.0, 4.0], [0.0, 3.0], [0.0, 1.0]]
            } 
        }
    },
    "test_reduce_min_5": {
        "model": {
            "name": "Min",
            "args": {
                "axis": 0
            }
        },
        "inputs": {
            "input": [[-1.0, -2.0], [2.0, 0.0], [1.0, -1.0]]
        },
        "output_grad": [3.0, 9.0],
        "results": {
            "eval": [-1.0, -2.0],
            "grad": {
                "input": [[3.0, 9.0], [0.0, 0.0], [0.0, 0.0]]
            } 
        }
    },
    "test_reduce_min_6": {
        "model": {
            "name": "Min",
            "args": {
                "axis": [0,2]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]
        },
        "output_grad": [8.0, 16.0],
        "results": {
            "eval": [1.0, 1.0],
            "grad": {
                "input": [[[4.0,0.0,0.0],[0.0,0.0,0.0]],[[0.0,0.0,4.0],[8.0,0.0,0.0]],[[0.0,0.0,0.0],[0.0,0.0,8.0]]]
            } 
        }
    },
    "test_reduce_min_7": {
        "model": {
            "name": "Min",
            "args": {
                "axis": [0,1,3,5,6]
            },
            "tuples": ["axis"]
        },
        "inputs": {
            "input": [[[[[[[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]]]]]]]
        },
        "output_grad": [[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]],
        "results": {
            "eval": [[[[[1.0,2.0,3.0],[4.0,5.0,6.0]],[[3.0,2.0,1.0],[1.0,3.0,5.0]],[[6.0,2.0,5.0],[9.0,3.0,1.0]]]]],
            "grad": {
                "input": [[[[[[[[[[1.0,2.0,4.0],[5.0,6.0,3.0]],[[2.0,7.0,9.0],[1.0,2.0,6.0]],[[2.0,8.0,9.0],[11.0,17.0,1e10]]]]]]]]]]
            } 
        }
    }
}